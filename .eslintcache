[{"/Users/tanikulsakulworrawit/Documents/genview/src/index.js":"1","/Users/tanikulsakulworrawit/Documents/genview/src/store.js":"2","/Users/tanikulsakulworrawit/Documents/genview/src/serviceWorker.js":"3","/Users/tanikulsakulworrawit/Documents/genview/src/App.js":"4","/Users/tanikulsakulworrawit/Documents/genview/src/polyfill.js":"5","/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/index.js":"6","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheLayout.js":"7","/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/page500/Page500.js":"8","/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/page404/Page404.js":"9","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/TheEmailApp.js":"10","/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/reset-password/ResetPassword.js":"11","/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/register/Register.js":"12","/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/login/Login.js":"13","/Users/tanikulsakulworrawit/Documents/genview/src/reducers/index.js":"14","/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/sygnet.js":"15","/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/logo-negative.js":"16","/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/logo.js":"17","/Users/tanikulsakulworrawit/Documents/genview/src/containers/index.js":"18","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/index.js":"19","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheAside.js":"20","/Users/tanikulsakulworrawit/Documents/genview/src/config/types.js":"21","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/Template.js":"22","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/compose/Compose.js":"23","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/message/Message.js":"24","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/inbox/Inbox.js":"25","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdownNotif.js":"26","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdown.js":"27","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheSidebar.js":"28","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdownMssg.js":"29","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheFooter.js":"30","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheContent.js":"31","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeader.js":"32","/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdownTasks.js":"33","/Users/tanikulsakulworrawit/Documents/genview/src/services/AuthenService.js":"34","/Users/tanikulsakulworrawit/Documents/genview/src/routes.js":"35","/Users/tanikulsakulworrawit/Documents/genview/src/containers/_nav.js":"36","/Users/tanikulsakulworrawit/Documents/genview/src/config/index.js":"37","/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/invoicing/Invoice.js":"38","/Users/tanikulsakulworrawit/Documents/genview/src/views/google-maps/GoogleMaps.js":"39","/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/Charts.js":"40","/Users/tanikulsakulworrawit/Documents/genview/src/views/dashboard/Dashboard.js":"41","/Users/tanikulsakulworrawit/Documents/genview/src/views/users/User.js":"42","/Users/tanikulsakulworrawit/Documents/genview/src/views/widgets/Widgets.js":"43","/Users/tanikulsakulworrawit/Documents/genview/src/views/users/Users.js":"44","/Users/tanikulsakulworrawit/Documents/genview/src/views/editors/text-editors/TextEditors.js":"45","/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/toaster/Toaster.js":"46","/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/validation-forms/ValidationForms.js":"47","/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/advanced-forms/AdvancedForms.js":"48","/Users/tanikulsakulworrawit/Documents/genview/src/views/editors/code-editors/CodeEditors.js":"49","/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/modals/Modals.js":"50","/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/alerts/Alerts.js":"51","/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/badges/Badges.js":"52","/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/draggable/Draggable.js":"53","/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/AdvancedTables.js":"54","/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/calendar/Calendar.js":"55","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/breadcrumbs/Breadcrumbs.js":"56","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/cards/Cards.js":"57","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/carousels/Carousels.js":"58","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/jumbotrons/Jumbotrons.js":"59","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/list-groups/ListGroups.js":"60","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/navbars/Navbars.js":"61","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/collapses/Collapses.js":"62","/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/tables/Tables.js":"63","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/paginations/Pagnations.js":"64","/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/spinners/Spinners.js":"65","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/popovers/Popovers.js":"66","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/tabs/Tabs.js":"67","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/switches/Switches.js":"68","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/navs/Navs.js":"69","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/progress-bar/ProgressBar.js":"70","/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/brand-buttons/BrandButtons.js":"71","/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"72","/Users/tanikulsakulworrawit/Documents/genview/src/views/base/tooltips/Tooltips.js":"73","/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/basic-forms/BasicForms.js":"74","/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/buttons/Buttons.js":"75","/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/button-groups/ButtonGroups.js":"76","/Users/tanikulsakulworrawit/Documents/genview/src/views/icons/brands/Brands.js":"77","/Users/tanikulsakulworrawit/Documents/genview/src/views/theme/colors/Colors.js":"78","/Users/tanikulsakulworrawit/Documents/genview/src/views/icons/flags/Flags.js":"79","/Users/tanikulsakulworrawit/Documents/genview/src/views/theme/typography/Typography.js":"80","/Users/tanikulsakulworrawit/Documents/genview/src/views/icons/coreui-icons/CoreUIIcons.js":"81","/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/MainChartExample.js":"82","/Users/tanikulsakulworrawit/Documents/genview/src/views/widgets/WidgetsBrand.js":"83","/Users/tanikulsakulworrawit/Documents/genview/src/views/widgets/WidgetsDropdown.js":"84","/Users/tanikulsakulworrawit/Documents/genview/src/views/users/UsersData.js":"85","/Users/tanikulsakulworrawit/Documents/genview/src/reusable/DeviceStatus.js":"86","/Users/tanikulsakulworrawit/Documents/genview/src/views/users/UserAddEdit.js":"87","/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/ChartLineSimple.js":"88","/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/ChartBarSimple.js":"89","/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/BackendTable.js":"90","/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/DemoTable.js":"91","/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/DownloadTable.js":"92","/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/draggable/_layouts.js":"93","/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/SelectTable.js":"94","/Users/tanikulsakulworrawit/Documents/genview/src/views/editors/code-editors/_examples.js":"95","/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/advanced-forms/states.js":"96","/Users/tanikulsakulworrawit/Documents/genview/src/reusable/index.js":"97","/Users/tanikulsakulworrawit/Documents/genview/src/reusable/DocsLink.js":"98","/Users/tanikulsakulworrawit/Documents/genview/src/reusable/ProBadge.js":"99","/Users/tanikulsakulworrawit/Documents/genview/src/reducers/redirect.js":"100","/Users/tanikulsakulworrawit/Documents/genview/src/reducers/authen.js":"101","/Users/tanikulsakulworrawit/Documents/genview/src/reducers/sidebar.js":"102","/Users/tanikulsakulworrawit/Documents/genview/src/actions/authen.js":"103","/Users/tanikulsakulworrawit/Documents/genview/src/actions/redirect.js":"104","/Users/tanikulsakulworrawit/Documents/genview/src/services/CommonService.js":"105","/Users/tanikulsakulworrawit/Documents/genview/src/services/UserService.js":"106","/Users/tanikulsakulworrawit/Documents/genview/src/utils/common.js":"107","/Users/tanikulsakulworrawit/Documents/overpass/src/index.js":"108","/Users/tanikulsakulworrawit/Documents/overpass/src/serviceWorker.js":"109","/Users/tanikulsakulworrawit/Documents/overpass/src/App.js":"110","/Users/tanikulsakulworrawit/Documents/overpass/src/store.js":"111","/Users/tanikulsakulworrawit/Documents/overpass/src/polyfill.js":"112","/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/index.js":"113","/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/page500/Page500.js":"114","/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/index.js":"115","/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/logo.js":"116","/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/logo-negative.js":"117","/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/sygnet.js":"118","/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/redirect.js":"119","/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/authen.js":"120","/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/sidebar.js":"121","/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/reset-password/ResetPassword.js":"122","/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/register/Register.js":"123","/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/page404/Page404.js":"124","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheLayout.js":"125","/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/login/Login.js":"126","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/TheEmailApp.js":"127","/Users/tanikulsakulworrawit/Documents/overpass/src/config/types.js":"128","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/index.js":"129","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/index.js":"130","/Users/tanikulsakulworrawit/Documents/overpass/src/actions/authen.js":"131","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheSidebar.js":"132","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdownTasks.js":"133","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/Template.js":"134","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdownNotif.js":"135","/Users/tanikulsakulworrawit/Documents/overpass/src/actions/redirect.js":"136","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdownMssg.js":"137","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdown.js":"138","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheFooter.js":"139","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeader.js":"140","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheContent.js":"141","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheAside.js":"142","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/inbox/Inbox.js":"143","/Users/tanikulsakulworrawit/Documents/overpass/src/services/AuthenService.js":"144","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/message/Message.js":"145","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/compose/Compose.js":"146","/Users/tanikulsakulworrawit/Documents/overpass/src/containers/_nav.js":"147","/Users/tanikulsakulworrawit/Documents/overpass/src/routes.js":"148","/Users/tanikulsakulworrawit/Documents/overpass/src/services/CommonService.js":"149","/Users/tanikulsakulworrawit/Documents/overpass/src/views/users/Users.js":"150","/Users/tanikulsakulworrawit/Documents/overpass/src/views/users/User.js":"151","/Users/tanikulsakulworrawit/Documents/overpass/src/views/widgets/Widgets.js":"152","/Users/tanikulsakulworrawit/Documents/overpass/src/views/theme/typography/Typography.js":"153","/Users/tanikulsakulworrawit/Documents/overpass/src/views/theme/colors/Colors.js":"154","/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/modals/Modals.js":"155","/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/badges/Badges.js":"156","/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/alerts/Alerts.js":"157","/Users/tanikulsakulworrawit/Documents/overpass/src/views/icons/brands/Brands.js":"158","/Users/tanikulsakulworrawit/Documents/overpass/src/views/icons/flags/Flags.js":"159","/Users/tanikulsakulworrawit/Documents/overpass/src/views/icons/coreui-icons/CoreUIIcons.js":"160","/Users/tanikulsakulworrawit/Documents/overpass/src/views/dashboard/Dashboard.js":"161","/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/Charts.js":"162","/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/brand-buttons/BrandButtons.js":"163","/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/button-groups/ButtonGroups.js":"164","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/tooltips/Tooltips.js":"165","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/popovers/Popovers.js":"166","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/switches/Switches.js":"167","/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"168","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/progress-bar/ProgressBar.js":"169","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/paginations/Pagnations.js":"170","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/tabs/Tabs.js":"171","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/navs/Navs.js":"172","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/list-groups/ListGroups.js":"173","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/cards/Cards.js":"174","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/collapses/Collapses.js":"175","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/navbars/Navbars.js":"176","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/jumbotrons/Jumbotrons.js":"177","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/carousels/Carousels.js":"178","/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/buttons/Buttons.js":"179","/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/breadcrumbs/Breadcrumbs.js":"180","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/AdvancedTables.js":"181","/Users/tanikulsakulworrawit/Documents/overpass/src/config/index.js":"182","/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/ChartBarSimple.js":"183","/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/ChartLineSimple.js":"184","/Users/tanikulsakulworrawit/Documents/overpass/src/views/widgets/WidgetsBrand.js":"185","/Users/tanikulsakulworrawit/Documents/overpass/src/views/widgets/WidgetsDropdown.js":"186","/Users/tanikulsakulworrawit/Documents/overpass/src/utils/common.js":"187","/Users/tanikulsakulworrawit/Documents/overpass/src/services/UserService.js":"188","/Users/tanikulsakulworrawit/Documents/overpass/src/views/users/UserAddEdit.js":"189","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/DownloadTable.js":"190","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/BackendTable.js":"191","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/SelectTable.js":"192","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/DemoTable.js":"193","/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/index.js":"194","/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/MainChartExample.js":"195","/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/DeviceStatus.js":"196","/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/toaster/Toaster.js":"197","/Users/tanikulsakulworrawit/Documents/overpass/src/views/google-maps/GoogleMaps.js":"198","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/invoicing/Invoice.js":"199","/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/draggable/Draggable.js":"200","/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/spinners/Spinners.js":"201","/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/calendar/Calendar.js":"202","/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/basic-forms/BasicForms.js":"203","/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/validation-forms/ValidationForms.js":"204","/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/advanced-forms/AdvancedForms.js":"205","/Users/tanikulsakulworrawit/Documents/overpass/src/views/editors/text-editors/TextEditors.js":"206","/Users/tanikulsakulworrawit/Documents/overpass/src/views/editors/code-editors/CodeEditors.js":"207","/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/ProBadge.js":"208","/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/DocsLink.js":"209","/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/advanced-forms/states.js":"210","/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/draggable/_layouts.js":"211","/Users/tanikulsakulworrawit/Documents/overpass/src/views/editors/code-editors/_examples.js":"212","/Users/tanikulsakulworrawit/Documents/overpass/src/views/overpass/Overpasses.js":"213","/Users/tanikulsakulworrawit/Documents/overpass/src/views/overpass/OverpassAddEdit.js":"214","/Users/tanikulsakulworrawit/Documents/overpass/src/services/OverpassService.js":"215","/Users/tanikulsakulworrawit/Documents/overpass/src/services/MappingService.js":"216","/Users/tanikulsakulworrawit/Documents/overpass/src/views/mapping-overpass/MappingForms.js":"217","/Users/tanikulsakulworrawit/Documents/overpass/src/views/maps/Maps.js":"218","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/index.js":"219","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/serviceWorker.js":"220","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/store.js":"221","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/App.js":"222","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/CommonService.js":"223","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/polyfill.js":"224","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/index.js":"225","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheLayout.js":"226","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/page500/Page500.js":"227","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/page404/Page404.js":"228","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/register/Register.js":"229","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/TheEmailApp.js":"230","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/login/Login.js":"231","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/reset-password/ResetPassword.js":"232","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/sygnet.js":"233","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/logo-negative.js":"234","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/logo.js":"235","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/config/index.js":"236","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/index.js":"237","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/actions/authen.js":"238","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/index.js":"239","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheAside.js":"240","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheSidebar.js":"241","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/actions/redirect.js":"242","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/AuthenService.js":"243","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/config/types.js":"244","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/Template.js":"245","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/compose/Compose.js":"246","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/inbox/Inbox.js":"247","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/message/Message.js":"248","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/index.js":"249","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/_nav.js":"250","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/redirect.js":"251","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/sidebar.js":"252","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/authen.js":"253","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdownTasks.js":"254","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeader.js":"255","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdownNotif.js":"256","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdownMssg.js":"257","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheFooter.js":"258","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdown.js":"259","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheContent.js":"260","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/routes.js":"261","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/mapping-overpass/MappingList.js":"262","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/maps/Maps.js":"263","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/mapping-overpass/MappingForms.js":"264","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/overpass/Overpasses.js":"265","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/users/Users.js":"266","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/widgets/Widgets.js":"267","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/dashboard/Dashboard.js":"268","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/alerts/Alerts.js":"269","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/icons/flags/Flags.js":"270","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/Charts.js":"271","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/theme/colors/Colors.js":"272","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/badges/Badges.js":"273","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/theme/typography/Typography.js":"274","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/icons/brands/Brands.js":"275","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/modals/Modals.js":"276","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/icons/coreui-icons/CoreUIIcons.js":"277","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/button-groups/ButtonGroups.js":"278","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"279","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/brand-buttons/BrandButtons.js":"280","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/buttons/Buttons.js":"281","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/tabs/Tabs.js":"282","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/paginations/Pagnations.js":"283","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/popovers/Popovers.js":"284","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/switches/Switches.js":"285","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/progress-bar/ProgressBar.js":"286","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/tooltips/Tooltips.js":"287","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/navbars/Navbars.js":"288","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/navs/Navs.js":"289","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/list-groups/ListGroups.js":"290","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/collapses/Collapses.js":"291","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/jumbotrons/Jumbotrons.js":"292","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/carousels/Carousels.js":"293","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/cards/Cards.js":"294","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/breadcrumbs/Breadcrumbs.js":"295","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/widgets/WidgetsBrand.js":"296","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/spinners/Spinners.js":"297","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/widgets/WidgetsDropdown.js":"298","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/MainChartExample.js":"299","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/ChartBarSimple.js":"300","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/ChartLineSimple.js":"301","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/utils/common.js":"302","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/DeviceStatus.js":"303","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/toaster/Toaster.js":"304","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/google-maps/GoogleMaps.js":"305","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/draggable/Draggable.js":"306","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/calendar/Calendar.js":"307","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/advanced-forms/AdvancedForms.js":"308","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/invoicing/Invoice.js":"309","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/basic-forms/BasicForms.js":"310","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/validation-forms/ValidationForms.js":"311","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/editors/code-editors/CodeEditors.js":"312","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/editors/text-editors/TextEditors.js":"313","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/UserService.js":"314","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/users/UserAddEdit.js":"315","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/MappingService.js":"316","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/OverpassService.js":"317","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/draggable/_layouts.js":"318","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/editors/code-editors/_examples.js":"319","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/index.js":"320","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/advanced-forms/states.js":"321","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/overpass/OverpassAddEdit.js":"322","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/DocsLink.js":"323","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/ProBadge.js":"324","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/DashboardService.js":"325","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/init-fcm.js":"326","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/repairs/Repairs.js":"327","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/repairs/RepairDetail.js":"328","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/answerService.js":"329","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/bulb/BulbLight.js":"330","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/LightbulbService.js":"331","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/components/UploadPreview.js":"332"},{"size":946,"mtime":1612906921379,"results":"333","hashOfConfig":"334"},{"size":652,"mtime":1612906921380,"results":"335","hashOfConfig":"334"},{"size":4686,"mtime":1612365081448,"results":"336","hashOfConfig":"334"},{"size":2260,"mtime":1612906921377,"results":"337","hashOfConfig":"334"},{"size":1895,"mtime":1612365081446,"results":"338","hashOfConfig":"334"},{"size":4336,"mtime":1612906921377,"results":"339","hashOfConfig":"334"},{"size":657,"mtime":1612365081445,"results":"340","hashOfConfig":"334"},{"size":1313,"mtime":1612365081462,"results":"341","hashOfConfig":"334"},{"size":1294,"mtime":1612365081461,"results":"342","hashOfConfig":"334"},{"size":1207,"mtime":1612365081449,"results":"343","hashOfConfig":"334"},{"size":2572,"mtime":1612365081462,"results":"344","hashOfConfig":"334"},{"size":2864,"mtime":1612365081462,"results":"345","hashOfConfig":"334"},{"size":7381,"mtime":1612969149009,"results":"346","hashOfConfig":"334"},{"size":211,"mtime":1612906921379,"results":"347","hashOfConfig":"334"},{"size":987,"mtime":1612365081442,"results":"348","hashOfConfig":"334"},{"size":8835,"mtime":1612365081442,"results":"349","hashOfConfig":"334"},{"size":8742,"mtime":1612365081442,"results":"350","hashOfConfig":"334"},{"size":642,"mtime":1612365081445,"results":"351","hashOfConfig":"334"},{"size":202,"mtime":1612365081450,"results":"352","hashOfConfig":"334"},{"size":17289,"mtime":1612365081443,"results":"353","hashOfConfig":"334"},{"size":212,"mtime":1612906921378,"results":"354","hashOfConfig":"334"},{"size":2488,"mtime":1612365081449,"results":"355","hashOfConfig":"334"},{"size":3654,"mtime":1612365081450,"results":"356","hashOfConfig":"334"},{"size":4714,"mtime":1612365081450,"results":"357","hashOfConfig":"334"},{"size":3808,"mtime":1612365081450,"results":"358","hashOfConfig":"334"},{"size":2543,"mtime":1612365081444,"results":"359","hashOfConfig":"334"},{"size":2856,"mtime":1612969149007,"results":"360","hashOfConfig":"334"},{"size":1616,"mtime":1612969149007,"results":"361","hashOfConfig":"334"},{"size":4788,"mtime":1612365081444,"results":"362","hashOfConfig":"334"},{"size":569,"mtime":1612365081443,"results":"363","hashOfConfig":"334"},{"size":1168,"mtime":1612365081443,"results":"364","hashOfConfig":"334"},{"size":1776,"mtime":1612365081444,"results":"365","hashOfConfig":"334"},{"size":2253,"mtime":1612365081444,"results":"366","hashOfConfig":"334"},{"size":333,"mtime":1612906921379,"results":"367","hashOfConfig":"334"},{"size":7962,"mtime":1612365081447,"results":"368","hashOfConfig":"334"},{"size":581,"mtime":1612906921378,"results":"369","hashOfConfig":"334"},{"size":547,"mtime":1612907107656,"results":"370","hashOfConfig":"334"},{"size":5119,"mtime":1612365081451,"results":"371","hashOfConfig":"334"},{"size":2707,"mtime":1612365081459,"results":"372","hashOfConfig":"334"},{"size":5779,"mtime":1612365081456,"results":"373","hashOfConfig":"334"},{"size":27792,"mtime":1612365081457,"results":"374","hashOfConfig":"334"},{"size":1200,"mtime":1612365081466,"results":"375","hashOfConfig":"334"},{"size":12301,"mtime":1612365081467,"results":"376","hashOfConfig":"334"},{"size":21133,"mtime":1613106219560,"results":"377","hashOfConfig":"334"},{"size":4551,"mtime":1612365081458,"results":"378","hashOfConfig":"334"},{"size":5328,"mtime":1612365081461,"results":"379","hashOfConfig":"334"},{"size":11597,"mtime":1612969149008,"results":"380","hashOfConfig":"334"},{"size":6931,"mtime":1612365081458,"results":"381","hashOfConfig":"334"},{"size":1414,"mtime":1612365081457,"results":"382","hashOfConfig":"334"},{"size":10997,"mtime":1612365081461,"results":"383","hashOfConfig":"334"},{"size":5910,"mtime":1612365081460,"results":"384","hashOfConfig":"334"},{"size":3605,"mtime":1612365081460,"results":"385","hashOfConfig":"334"},{"size":3805,"mtime":1612365081463,"results":"386","hashOfConfig":"334"},{"size":1160,"mtime":1612365081464,"results":"387","hashOfConfig":"334"},{"size":3730,"mtime":1612365081462,"results":"388","hashOfConfig":"334"},{"size":1727,"mtime":1612365081451,"results":"389","hashOfConfig":"334"},{"size":18183,"mtime":1612365081452,"results":"390","hashOfConfig":"334"},{"size":6876,"mtime":1612365081452,"results":"391","hashOfConfig":"334"},{"size":2080,"mtime":1612365081452,"results":"392","hashOfConfig":"334"},{"size":12862,"mtime":1612365081453,"results":"393","hashOfConfig":"334"},{"size":5774,"mtime":1612365081453,"results":"394","hashOfConfig":"334"},{"size":9261,"mtime":1612365081452,"results":"395","hashOfConfig":"334"},{"size":5048,"mtime":1612365081465,"results":"396","hashOfConfig":"334"},{"size":2166,"mtime":1612365081453,"results":"397","hashOfConfig":"334"},{"size":7635,"mtime":1612365081463,"results":"398","hashOfConfig":"334"},{"size":2910,"mtime":1612365081453,"results":"399","hashOfConfig":"334"},{"size":5618,"mtime":1612365081454,"results":"400","hashOfConfig":"334"},{"size":24660,"mtime":1612365081454,"results":"401","hashOfConfig":"334"},{"size":9425,"mtime":1612365081453,"results":"402","hashOfConfig":"334"},{"size":2970,"mtime":1612365081454,"results":"403","hashOfConfig":"334"},{"size":15401,"mtime":1612365081455,"results":"404","hashOfConfig":"334"},{"size":16489,"mtime":1612365081455,"results":"405","hashOfConfig":"334"},{"size":2717,"mtime":1612365081454,"results":"406","hashOfConfig":"334"},{"size":51528,"mtime":1612365081459,"results":"407","hashOfConfig":"334"},{"size":33216,"mtime":1612365081456,"results":"408","hashOfConfig":"334"},{"size":6169,"mtime":1612365081455,"results":"409","hashOfConfig":"334"},{"size":983,"mtime":1612365081459,"results":"410","hashOfConfig":"334"},{"size":3685,"mtime":1612365081465,"results":"411","hashOfConfig":"334"},{"size":590,"mtime":1612365081460,"results":"412","hashOfConfig":"334"},{"size":7000,"mtime":1612365081465,"results":"413","hashOfConfig":"334"},{"size":606,"mtime":1612365081459,"results":"414","hashOfConfig":"334"},{"size":2486,"mtime":1612365081457,"results":"415","hashOfConfig":"334"},{"size":4031,"mtime":1612365081467,"results":"416","hashOfConfig":"334"},{"size":4776,"mtime":1612365081467,"results":"417","hashOfConfig":"334"},{"size":3628,"mtime":1612365081466,"results":"418","hashOfConfig":"334"},{"size":348,"mtime":1612365081447,"results":"419","hashOfConfig":"334"},{"size":29275,"mtime":1613106219559,"results":"420","hashOfConfig":"334"},{"size":3294,"mtime":1612365081456,"results":"421","hashOfConfig":"334"},{"size":1545,"mtime":1612365081456,"results":"422","hashOfConfig":"334"},{"size":842,"mtime":1612365081464,"results":"423","hashOfConfig":"334"},{"size":3485,"mtime":1612365081464,"results":"424","hashOfConfig":"334"},{"size":904,"mtime":1612365081464,"results":"425","hashOfConfig":"334"},{"size":1153,"mtime":1612365081463,"results":"426","hashOfConfig":"334"},{"size":1735,"mtime":1612365081464,"results":"427","hashOfConfig":"334"},{"size":2667,"mtime":1612365081457,"results":"428","hashOfConfig":"334"},{"size":2508,"mtime":1612365081458,"results":"429","hashOfConfig":"334"},{"size":102,"mtime":1612365081447,"results":"430","hashOfConfig":"334"},{"size":581,"mtime":1612365081447,"results":"431","hashOfConfig":"334"},{"size":509,"mtime":1612365081447,"results":"432","hashOfConfig":"334"},{"size":273,"mtime":1612906921379,"results":"433","hashOfConfig":"334"},{"size":584,"mtime":1612906921379,"results":"434","hashOfConfig":"334"},{"size":307,"mtime":1612906921379,"results":"435","hashOfConfig":"334"},{"size":991,"mtime":1612906921377,"results":"436","hashOfConfig":"334"},{"size":128,"mtime":1612906921377,"results":"437","hashOfConfig":"334"},{"size":2004,"mtime":1612906921379,"results":"438","hashOfConfig":"334"},{"size":1267,"mtime":1612906921380,"results":"439","hashOfConfig":"334"},{"size":127,"mtime":1612906921380,"results":"440","hashOfConfig":"334"},{"size":3562,"mtime":1614423373344,"results":"441","hashOfConfig":"442"},{"size":4911,"mtime":1614422787764,"results":"443","hashOfConfig":"442"},{"size":2261,"mtime":1614411955368,"results":"444","hashOfConfig":"442"},{"size":652,"mtime":1612906921380,"results":"445","hashOfConfig":"442"},{"size":1895,"mtime":1612365081446,"results":"446","hashOfConfig":"442"},{"size":4336,"mtime":1612906921377,"results":"447","hashOfConfig":"442"},{"size":1313,"mtime":1612365081462,"results":"448","hashOfConfig":"442"},{"size":210,"mtime":1614328995353,"results":"449","hashOfConfig":"442"},{"size":8742,"mtime":1612365081442,"results":"450","hashOfConfig":"442"},{"size":8835,"mtime":1612365081442,"results":"451","hashOfConfig":"442"},{"size":987,"mtime":1612365081442,"results":"452","hashOfConfig":"442"},{"size":273,"mtime":1612906921379,"results":"453","hashOfConfig":"442"},{"size":584,"mtime":1612906921379,"results":"454","hashOfConfig":"442"},{"size":307,"mtime":1612906921379,"results":"455","hashOfConfig":"442"},{"size":2572,"mtime":1612365081462,"results":"456","hashOfConfig":"442"},{"size":2864,"mtime":1612365081462,"results":"457","hashOfConfig":"442"},{"size":1294,"mtime":1612365081461,"results":"458","hashOfConfig":"442"},{"size":657,"mtime":1612365081445,"results":"459","hashOfConfig":"442"},{"size":7381,"mtime":1612969149009,"results":"460","hashOfConfig":"442"},{"size":1207,"mtime":1612365081449,"results":"461","hashOfConfig":"442"},{"size":212,"mtime":1612906921378,"results":"462","hashOfConfig":"442"},{"size":642,"mtime":1612365081445,"results":"463","hashOfConfig":"442"},{"size":202,"mtime":1612365081450,"results":"464","hashOfConfig":"442"},{"size":991,"mtime":1614234873459,"results":"465","hashOfConfig":"442"},{"size":1538,"mtime":1614402964289,"results":"466","hashOfConfig":"442"},{"size":2253,"mtime":1612365081444,"results":"467","hashOfConfig":"442"},{"size":2488,"mtime":1612365081449,"results":"468","hashOfConfig":"442"},{"size":2543,"mtime":1612365081444,"results":"469","hashOfConfig":"442"},{"size":128,"mtime":1612906921377,"results":"470","hashOfConfig":"442"},{"size":4788,"mtime":1612365081444,"results":"471","hashOfConfig":"442"},{"size":2856,"mtime":1612969149007,"results":"472","hashOfConfig":"442"},{"size":569,"mtime":1612365081443,"results":"473","hashOfConfig":"442"},{"size":1776,"mtime":1612365081444,"results":"474","hashOfConfig":"442"},{"size":1168,"mtime":1612365081443,"results":"475","hashOfConfig":"442"},{"size":17289,"mtime":1612365081443,"results":"476","hashOfConfig":"442"},{"size":3808,"mtime":1612365081450,"results":"477","hashOfConfig":"442"},{"size":333,"mtime":1612906921379,"results":"478","hashOfConfig":"442"},{"size":4714,"mtime":1612365081450,"results":"479","hashOfConfig":"442"},{"size":3654,"mtime":1612365081450,"results":"480","hashOfConfig":"442"},{"size":1223,"mtime":1614870997127,"results":"481","hashOfConfig":"442"},{"size":8961,"mtime":1614870855854,"results":"482","hashOfConfig":"442"},{"size":3974,"mtime":1614412538959,"results":"483","hashOfConfig":"442"},{"size":18567,"mtime":1614403347427,"results":"484","hashOfConfig":"442"},{"size":1204,"mtime":1614403653634,"results":"485","hashOfConfig":"442"},{"size":12301,"mtime":1612365081467,"results":"486","hashOfConfig":"442"},{"size":7000,"mtime":1612365081465,"results":"487","hashOfConfig":"442"},{"size":3685,"mtime":1612365081465,"results":"488","hashOfConfig":"442"},{"size":10997,"mtime":1612365081461,"results":"489","hashOfConfig":"442"},{"size":3605,"mtime":1612365081460,"results":"490","hashOfConfig":"442"},{"size":5910,"mtime":1612365081460,"results":"491","hashOfConfig":"442"},{"size":983,"mtime":1612365081459,"results":"492","hashOfConfig":"442"},{"size":590,"mtime":1612365081460,"results":"493","hashOfConfig":"442"},{"size":606,"mtime":1612365081459,"results":"494","hashOfConfig":"442"},{"size":9276,"mtime":1614969172832,"results":"495","hashOfConfig":"442"},{"size":5779,"mtime":1612365081456,"results":"496","hashOfConfig":"442"},{"size":15401,"mtime":1612365081455,"results":"497","hashOfConfig":"442"},{"size":6169,"mtime":1612365081455,"results":"498","hashOfConfig":"442"},{"size":2717,"mtime":1612365081454,"results":"499","hashOfConfig":"442"},{"size":2910,"mtime":1612365081453,"results":"500","hashOfConfig":"442"},{"size":24660,"mtime":1612365081454,"results":"501","hashOfConfig":"442"},{"size":16489,"mtime":1612365081455,"results":"502","hashOfConfig":"442"},{"size":2970,"mtime":1612365081454,"results":"503","hashOfConfig":"442"},{"size":2166,"mtime":1612365081453,"results":"504","hashOfConfig":"442"},{"size":5618,"mtime":1612365081454,"results":"505","hashOfConfig":"442"},{"size":9425,"mtime":1612365081453,"results":"506","hashOfConfig":"442"},{"size":12862,"mtime":1612365081453,"results":"507","hashOfConfig":"442"},{"size":18183,"mtime":1612365081452,"results":"508","hashOfConfig":"442"},{"size":9261,"mtime":1612365081452,"results":"509","hashOfConfig":"442"},{"size":5774,"mtime":1612365081453,"results":"510","hashOfConfig":"442"},{"size":2080,"mtime":1612365081452,"results":"511","hashOfConfig":"442"},{"size":6876,"mtime":1612365081452,"results":"512","hashOfConfig":"442"},{"size":33216,"mtime":1612365081456,"results":"513","hashOfConfig":"442"},{"size":1727,"mtime":1612365081451,"results":"514","hashOfConfig":"442"},{"size":1164,"mtime":1614403539299,"results":"515","hashOfConfig":"442"},{"size":531,"mtime":1615112450650,"results":"516","hashOfConfig":"442"},{"size":1545,"mtime":1612365081456,"results":"517","hashOfConfig":"442"},{"size":3294,"mtime":1612365081456,"results":"518","hashOfConfig":"442"},{"size":4031,"mtime":1612365081467,"results":"519","hashOfConfig":"442"},{"size":4776,"mtime":1612365081467,"results":"520","hashOfConfig":"442"},{"size":127,"mtime":1612906921380,"results":"521","hashOfConfig":"442"},{"size":1554,"mtime":1613662659889,"results":"522","hashOfConfig":"442"},{"size":19163,"mtime":1614403767537,"results":"523","hashOfConfig":"442"},{"size":908,"mtime":1614403528831,"results":"524","hashOfConfig":"442"},{"size":842,"mtime":1612365081464,"results":"525","hashOfConfig":"442"},{"size":1739,"mtime":1614403585833,"results":"526","hashOfConfig":"442"},{"size":3489,"mtime":1614403578172,"results":"527","hashOfConfig":"442"},{"size":102,"mtime":1612365081447,"results":"528","hashOfConfig":"442"},{"size":2486,"mtime":1612365081457,"results":"529","hashOfConfig":"442"},{"size":348,"mtime":1612365081447,"results":"530","hashOfConfig":"442"},{"size":5328,"mtime":1612365081461,"results":"531","hashOfConfig":"442"},{"size":5129,"mtime":1613234554221,"results":"532","hashOfConfig":"442"},{"size":5119,"mtime":1612365081451,"results":"533","hashOfConfig":"442"},{"size":3805,"mtime":1612365081463,"results":"534","hashOfConfig":"442"},{"size":7635,"mtime":1612365081463,"results":"535","hashOfConfig":"442"},{"size":3730,"mtime":1612365081462,"results":"536","hashOfConfig":"442"},{"size":52094,"mtime":1613272603676,"results":"537","hashOfConfig":"442"},{"size":11597,"mtime":1612969149008,"results":"538","hashOfConfig":"442"},{"size":6931,"mtime":1612365081458,"results":"539","hashOfConfig":"442"},{"size":4551,"mtime":1612365081458,"results":"540","hashOfConfig":"442"},{"size":1414,"mtime":1612365081457,"results":"541","hashOfConfig":"442"},{"size":509,"mtime":1612365081447,"results":"542","hashOfConfig":"442"},{"size":581,"mtime":1612365081447,"results":"543","hashOfConfig":"442"},{"size":2508,"mtime":1612365081458,"results":"544","hashOfConfig":"442"},{"size":1153,"mtime":1612365081463,"results":"545","hashOfConfig":"442"},{"size":2667,"mtime":1612365081457,"results":"546","hashOfConfig":"442"},{"size":16959,"mtime":1614993802555,"results":"547","hashOfConfig":"442"},{"size":19895,"mtime":1615015353559,"results":"548","hashOfConfig":"442"},{"size":2420,"mtime":1614015851472,"results":"549","hashOfConfig":"442"},{"size":2276,"mtime":1614395569036,"results":"550","hashOfConfig":"442"},{"size":17928,"mtime":1615013818935,"results":"551","hashOfConfig":"442"},{"size":10021,"mtime":1614878147584,"results":"552","hashOfConfig":"442"},{"size":1248,"mtime":1624017956989,"results":"553","hashOfConfig":"554"},{"size":4911,"mtime":1614422787764,"results":"555","hashOfConfig":"554"},{"size":652,"mtime":1612906921380,"results":"556","hashOfConfig":"554"},{"size":7007,"mtime":1616926263847,"results":"557","hashOfConfig":"554"},{"size":3974,"mtime":1614412538959,"results":"558","hashOfConfig":"554"},{"size":1895,"mtime":1612365081446,"results":"559","hashOfConfig":"554"},{"size":4336,"mtime":1612906921377,"results":"560","hashOfConfig":"554"},{"size":657,"mtime":1615705745062,"results":"561","hashOfConfig":"554"},{"size":1313,"mtime":1612365081462,"results":"562","hashOfConfig":"554"},{"size":1294,"mtime":1612365081461,"results":"563","hashOfConfig":"554"},{"size":2864,"mtime":1615902334451,"results":"564","hashOfConfig":"554"},{"size":1207,"mtime":1612365081449,"results":"565","hashOfConfig":"554"},{"size":7685,"mtime":1618569967247,"results":"566","hashOfConfig":"554"},{"size":2572,"mtime":1612365081462,"results":"567","hashOfConfig":"554"},{"size":987,"mtime":1612365081442,"results":"568","hashOfConfig":"554"},{"size":8835,"mtime":1612365081442,"results":"569","hashOfConfig":"554"},{"size":8742,"mtime":1612365081442,"results":"570","hashOfConfig":"554"},{"size":1673,"mtime":1636348539540,"results":"571","hashOfConfig":"554"},{"size":642,"mtime":1616507372912,"results":"572","hashOfConfig":"554"},{"size":2014,"mtime":1618569649555,"results":"573","hashOfConfig":"554"},{"size":202,"mtime":1612365081450,"results":"574","hashOfConfig":"554"},{"size":17289,"mtime":1612365081443,"results":"575","hashOfConfig":"554"},{"size":1633,"mtime":1615988147890,"results":"576","hashOfConfig":"554"},{"size":128,"mtime":1612906921377,"results":"577","hashOfConfig":"554"},{"size":333,"mtime":1618545256120,"results":"578","hashOfConfig":"554"},{"size":212,"mtime":1612906921378,"results":"579","hashOfConfig":"554"},{"size":2488,"mtime":1612365081449,"results":"580","hashOfConfig":"554"},{"size":3654,"mtime":1612365081450,"results":"581","hashOfConfig":"554"},{"size":3808,"mtime":1612365081450,"results":"582","hashOfConfig":"554"},{"size":4714,"mtime":1612365081450,"results":"583","hashOfConfig":"554"},{"size":210,"mtime":1614328995353,"results":"584","hashOfConfig":"554"},{"size":2088,"mtime":1617288189306,"results":"585","hashOfConfig":"554"},{"size":273,"mtime":1612906921379,"results":"586","hashOfConfig":"554"},{"size":307,"mtime":1612906921379,"results":"587","hashOfConfig":"554"},{"size":584,"mtime":1615821755611,"results":"588","hashOfConfig":"554"},{"size":2253,"mtime":1612365081444,"results":"589","hashOfConfig":"554"},{"size":1811,"mtime":1616919470219,"results":"590","hashOfConfig":"554"},{"size":2543,"mtime":1616916550931,"results":"591","hashOfConfig":"554"},{"size":4953,"mtime":1616920444340,"results":"592","hashOfConfig":"554"},{"size":380,"mtime":1615987846600,"results":"593","hashOfConfig":"554"},{"size":18894,"mtime":1617129747469,"results":"594","hashOfConfig":"554"},{"size":1168,"mtime":1612365081443,"results":"595","hashOfConfig":"554"},{"size":9439,"mtime":1616926879020,"results":"596","hashOfConfig":"554"},{"size":14684,"mtime":1616916624094,"results":"597","hashOfConfig":"554"},{"size":15352,"mtime":1620749916191,"results":"598","hashOfConfig":"554"},{"size":22417,"mtime":1617279211105,"results":"599","hashOfConfig":"554"},{"size":17209,"mtime":1617284811031,"results":"600","hashOfConfig":"554"},{"size":19020,"mtime":1617287704175,"results":"601","hashOfConfig":"554"},{"size":12301,"mtime":1612365081467,"results":"602","hashOfConfig":"554"},{"size":15700,"mtime":1617288648107,"results":"603","hashOfConfig":"554"},{"size":5910,"mtime":1612365081460,"results":"604","hashOfConfig":"554"},{"size":590,"mtime":1612365081460,"results":"605","hashOfConfig":"554"},{"size":5779,"mtime":1612365081456,"results":"606","hashOfConfig":"554"},{"size":3685,"mtime":1612365081465,"results":"607","hashOfConfig":"554"},{"size":3605,"mtime":1612365081460,"results":"608","hashOfConfig":"554"},{"size":7000,"mtime":1612365081465,"results":"609","hashOfConfig":"554"},{"size":983,"mtime":1612365081459,"results":"610","hashOfConfig":"554"},{"size":10997,"mtime":1612365081461,"results":"611","hashOfConfig":"554"},{"size":606,"mtime":1612365081459,"results":"612","hashOfConfig":"554"},{"size":6169,"mtime":1612365081455,"results":"613","hashOfConfig":"554"},{"size":16489,"mtime":1612365081455,"results":"614","hashOfConfig":"554"},{"size":15401,"mtime":1612365081455,"results":"615","hashOfConfig":"554"},{"size":33216,"mtime":1612365081456,"results":"616","hashOfConfig":"554"},{"size":5618,"mtime":1612365081454,"results":"617","hashOfConfig":"554"},{"size":2166,"mtime":1612365081453,"results":"618","hashOfConfig":"554"},{"size":2910,"mtime":1612365081453,"results":"619","hashOfConfig":"554"},{"size":24660,"mtime":1612365081454,"results":"620","hashOfConfig":"554"},{"size":2970,"mtime":1612365081454,"results":"621","hashOfConfig":"554"},{"size":2717,"mtime":1612365081454,"results":"622","hashOfConfig":"554"},{"size":5774,"mtime":1612365081453,"results":"623","hashOfConfig":"554"},{"size":9425,"mtime":1612365081453,"results":"624","hashOfConfig":"554"},{"size":12862,"mtime":1612365081453,"results":"625","hashOfConfig":"554"},{"size":9261,"mtime":1612365081452,"results":"626","hashOfConfig":"554"},{"size":2080,"mtime":1612365081452,"results":"627","hashOfConfig":"554"},{"size":6876,"mtime":1612365081452,"results":"628","hashOfConfig":"554"},{"size":18183,"mtime":1612365081452,"results":"629","hashOfConfig":"554"},{"size":1727,"mtime":1612365081451,"results":"630","hashOfConfig":"554"},{"size":4031,"mtime":1612365081467,"results":"631","hashOfConfig":"554"},{"size":7635,"mtime":1612365081463,"results":"632","hashOfConfig":"554"},{"size":4776,"mtime":1612365081467,"results":"633","hashOfConfig":"554"},{"size":2486,"mtime":1612365081457,"results":"634","hashOfConfig":"635"},{"size":1545,"mtime":1612365081456,"results":"636","hashOfConfig":"554"},{"size":3294,"mtime":1612365081456,"results":"637","hashOfConfig":"554"},{"size":229,"mtime":1616163290456,"results":"638","hashOfConfig":"554"},{"size":348,"mtime":1612365081447,"results":"639","hashOfConfig":"635"},{"size":5350,"mtime":1615910349775,"results":"640","hashOfConfig":"554"},{"size":5129,"mtime":1613234554221,"results":"641","hashOfConfig":"554"},{"size":3805,"mtime":1612365081463,"results":"642","hashOfConfig":"554"},{"size":3730,"mtime":1612365081462,"results":"643","hashOfConfig":"554"},{"size":6931,"mtime":1612365081458,"results":"644","hashOfConfig":"554"},{"size":5119,"mtime":1612365081451,"results":"645","hashOfConfig":"554"},{"size":52094,"mtime":1613272603676,"results":"646","hashOfConfig":"554"},{"size":11597,"mtime":1612969149008,"results":"647","hashOfConfig":"554"},{"size":1414,"mtime":1612365081457,"results":"648","hashOfConfig":"554"},{"size":4551,"mtime":1612365081458,"results":"649","hashOfConfig":"554"},{"size":2564,"mtime":1617123622388,"results":"650","hashOfConfig":"554"},{"size":19970,"mtime":1617288311379,"results":"651","hashOfConfig":"554"},{"size":2276,"mtime":1614395569036,"results":"652","hashOfConfig":"554"},{"size":3420,"mtime":1616079123347,"results":"653","hashOfConfig":"554"},{"size":1153,"mtime":1612365081463,"results":"654","hashOfConfig":"554"},{"size":2667,"mtime":1612365081457,"results":"655","hashOfConfig":"554"},{"size":102,"mtime":1612365081447,"results":"656","hashOfConfig":"554"},{"size":2508,"mtime":1612365081458,"results":"657","hashOfConfig":"554"},{"size":22084,"mtime":1617285055957,"results":"658","hashOfConfig":"554"},{"size":581,"mtime":1612365081447,"results":"659","hashOfConfig":"554"},{"size":509,"mtime":1612365081447,"results":"660","hashOfConfig":"554"},{"size":1537,"mtime":1615727265096,"results":"661","hashOfConfig":"554"},{"size":1412,"mtime":1615964624033,"results":"662","hashOfConfig":"554"},{"size":4012,"mtime":1617543440864,"results":"663","hashOfConfig":"554"},{"size":13434,"mtime":1616916781163,"results":"664","hashOfConfig":"554"},{"size":1122,"mtime":1616132552984,"results":"665","hashOfConfig":"554"},{"size":13102,"mtime":1616916394964,"results":"666","hashOfConfig":"554"},{"size":1315,"mtime":1616863803106,"results":"667","hashOfConfig":"554"},{"size":1842,"mtime":1617127492257,"results":"668","hashOfConfig":"554"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},"bwv8ut",{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"671"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"867"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"671"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"671"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"890"},"3qzi8b",{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"890"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"890"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"890"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"890"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001","usedDeprecatedRules":"890"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042","usedDeprecatedRules":"890"},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059","usedDeprecatedRules":"890"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062","usedDeprecatedRules":"890"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079","usedDeprecatedRules":"890"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110","usedDeprecatedRules":"890"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"890"},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121","usedDeprecatedRules":"890"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},"17eliwf",{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"1124"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"1124"},{"filePath":"1150","messages":"1151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"1124"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1203","usedDeprecatedRules":"1124"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208","usedDeprecatedRules":"1124"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1215","usedDeprecatedRules":"1124"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218","usedDeprecatedRules":"1124"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1221","usedDeprecatedRules":"1124"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1224","usedDeprecatedRules":"1124"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"1124"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"1124"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1253","messages":"1254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1255","messages":"1256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},"qk0qth",{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1300","messages":"1301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1302","messages":"1303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1306","messages":"1307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079","usedDeprecatedRules":"1124"},{"filePath":"1308","messages":"1309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1310","messages":"1311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1312","messages":"1313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1314","messages":"1315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1320","messages":"1321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1322","messages":"1323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"1124"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"1124"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1342","messages":"1343","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1344","usedDeprecatedRules":"1124"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"1124"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354","usedDeprecatedRules":"1124"},{"filePath":"1355","messages":"1356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357","usedDeprecatedRules":"1124"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1360","usedDeprecatedRules":"1124"},{"filePath":"1361","messages":"1362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1363","usedDeprecatedRules":"1124"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"1124"},{"filePath":"1367","messages":"1368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1124"},{"filePath":"1369","messages":"1370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"1124"},"/Users/tanikulsakulworrawit/Documents/genview/src/index.js",[],["1372","1373"],"/Users/tanikulsakulworrawit/Documents/genview/src/store.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/serviceWorker.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/App.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/polyfill.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/index.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheLayout.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/page500/Page500.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/page404/Page404.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/TheEmailApp.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/reset-password/ResetPassword.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/register/Register.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/pages/login/Login.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reducers/index.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/sygnet.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/logo-negative.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/assets/icons/logo.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/index.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/index.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheAside.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/config/types.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/Template.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/compose/Compose.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/message/Message.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/email/inbox/Inbox.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdownNotif.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdown.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheSidebar.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdownMssg.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheFooter.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheContent.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeader.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/TheHeaderDropdownTasks.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/services/AuthenService.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/routes.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/containers/_nav.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/config/index.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/apps/invoicing/Invoice.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/google-maps/GoogleMaps.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/Charts.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/dashboard/Dashboard.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/users/User.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/widgets/Widgets.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/users/Users.js",["1374"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CButtonGroup,\n  CForm,\n  CLabel,\n  CSelect,\n  CTooltip,\n  CLink,\n  CInput,\n  CFormGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport CIcon from \"@coreui/icons-react\";\nimport UserAddEdit from \"./UserAddEdit\";\nimport { deleteUser, getUsers } from \"src/services/UserService\";\nimport { LOGIN_FAILED_CODE, roleUserControl, userFullAccess } from \"src/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  getOrganizations,\n  getPrefixes,\n  getRoles,\n  getStatuses,\n} from \"src/services/CommonService\";\nimport { capitalize } from \"src/utils/common\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport \"./UserAddEdit.scss\";\n\nconst MySwal = withReactContent(Swal);\n\nconst getBadge = (status) => {\n  switch (status) {\n    case \"ACTIVE\":\n      return \"success\";\n    case \"INACTIVE\":\n      return \"danger\";\n    default:\n      return;\n  }\n};\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const userRole = useSelector((state) => state.authen.role);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(\"add\");\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [username, setUsername] = useState(\"\");\n  const prevUsername = usePrevious(username);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [lineId, setLineId] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [organization, setOrganization] = useState(0);\n  const [itemDetail, setItemDetail] = useState({});\n  const [roles, setRoles] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [prefixes, setPrefixes] = useState([]);\n  const [organizations, setOrganizations] = useState([]);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [sorterValue, setSorterValue] = useState();\n\n  const pageChange = (newPage) => {\n    if (newPage - 1 >= 0 && page !== newPage - 1) {\n      setPage(newPage - 1);\n    }\n  };\n  const showModal = (action, item) => {\n    setAction(action);\n    setModal(!modal);\n    if (action === \"edit\") {\n      setItemDetail(item);\n    }\n  };\n\n  const showDeleteModal = (item) => {\n    setUserId(item.id);\n    setUsername(item.username);\n    setDeleteModal(!deleteModal);\n  };\n\n  const handleClosedModal = () => {\n    setUserId(\"\");\n    setUsername(\"\");\n    setDeleteModal(false);\n  };\n\n  const handleReset = () => {\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setStatus(\"\");\n    setRole(\"\");\n    setEmail(\"\");\n    setLineId(\"\");\n    setMobileNo(\"\");\n    setOrganization(0);\n  };\n\n  const handleSearch = (e, reload = false) => {\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      filter: {\n        username: reload ? prevUsername : username,\n        firstName,\n        lastName,\n        status: status ? status : undefined,\n        role: role ? role : undefined,\n        email,\n        lineId,\n        mobileNo,\n        organizationId: Number(organization),\n      },\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getUsers(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteUser = (e) => {\n    setDeleteLoading(true);\n    setUsername(\"\");\n    deleteUser(accessToken, userId).then((response) => {\n      if (response.status === 200) {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Success\",\n          text: \"Deleted user successfully  \",\n          icon: \"success\",\n          didClose: () => {\n            setDeleteModal(false);\n            handleSearch(e, true);\n          },\n        });\n      } else {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Failed\",\n          text: \"Cannot delete user\",\n          icon: \"error\",\n          didClose: () => {\n            setDeleteModal(false);\n          },\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getRoles(accessToken).then(({ status, data }) => {\n      return status === 200 ? setRoles(data) : setRoles([]);\n    });\n    getStatuses(accessToken).then(({ status, data }) => {\n      return status === 200 ? setStatuses(data) : setStatuses([]);\n    });\n    getPrefixes(accessToken).then(({ status, data }) => {\n      return status === 200 ? setPrefixes(data) : setPrefixes([]);\n    });\n    getOrganizations(accessToken).then(({ status, data }) => {\n      return status === 200 ? setOrganizations(data) : setOrganizations([]);\n    });\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      username,\n      firstName,\n      lastName,\n      status,\n      role,\n      email,\n      lineId,\n      mobileNo,\n      organizationId: Number(organization),\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getUsers(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  }, [page, itemsPerPage, sorterValue]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } else if (userRole === \"ENGINEER\") {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={6} className=\"mb-3 d-flex align-items-center\">\n          <h2>Users</h2>\n        </CCol>\n        <CCol\n          xs={6}\n          className=\"d-block d-sm-flex align-items-center justify-content-end mb-4\"\n        >\n          <CButton color=\"primary\" onClick={() => showModal(\"add\")}>\n            <CIcon size=\"sm\" name=\"cil-user-plus\" className=\" mr-1\" />\n            Add User\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow className=\"justify-content-center\">\n        <CCol xs={12} md={10} xl={8}>\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} className=\"mb-3 font-weight-bold\">\n                  SEARCH\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"username\">Username:</CLabel>\n                    <CInput\n                      id=\"username\"\n                      placeholder=\"username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"firstName\">First Name:</CLabel>\n                    <CInput\n                      id=\"firstName\"\n                      placeholder=\"first name\"\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">Last Name:</CLabel>\n                    <CInput\n                      id=\"lastName\"\n                      placeholder=\"last name\"\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"status\">Status</CLabel>\n                    <CSelect\n                      custom\n                      name=\"status\"\n                      id=\"status\"\n                      value={status}\n                      onChange={(e) => setStatus(e.target.value)}\n                    >\n                      <option value=\"\"></option>\n                      {statuses.map((status) => (\n                        <option key={status.key} value={status.key}>\n                          {capitalize(status.value.toLowerCase())}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"role\">Role:</CLabel>\n                    <CSelect\n                      custom\n                      name=\"role\"\n                      id=\"role\"\n                      value={role}\n                      onChange={(e) => setRole(e.target.value)}\n                    >\n                      <option value=\"\"></option>\n                      {roles.map(\n                        (role) =>\n                          roleUserControl[userRole].includes(role.value) && (\n                            <option key={role.key} value={role.key}>\n                              {capitalize(role.value.toLowerCase())}\n                            </option>\n                          )\n                      )}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Email:</CLabel>\n                    <CInput\n                      id=\"email\"\n                      placeholder=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lineId\">Line ID:</CLabel>\n                    <CInput\n                      id=\"lineId\"\n                      placeholder=\"line id\"\n                      value={lineId}\n                      onChange={(e) => setLineId(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"mobileNo\">Mobile No:</CLabel>\n                    <TextMask\n                      placeholder=\"mobile no\"\n                      mask={[\n                        /[0]/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                      ]}\n                      Component={InputAdapter}\n                      className=\"form-control\"\n                      value={mobileNo}\n                      onChange={(e) => setMobileNo(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                {userFullAccess.includes(userRole) && (\n                  <CCol xs={6} md={4} lg={3}>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"role\">Organization:</CLabel>\n                      <CSelect\n                        custom\n                        name=\"organization\"\n                        id=\"organization\"\n                        value={organization}\n                        onChange={(e) => setOrganization(e.target.value)}\n                      >\n                        <option value={0}></option>\n                        {organizations.map((organization) => (\n                          <option\n                            key={organization.key}\n                            value={organization.key}\n                          >\n                            {capitalize(organization.value.toLowerCase())}\n                          </option>\n                        ))}\n                      </CSelect>\n                    </CFormGroup>\n                  </CCol>\n                )}\n              </CRow>\n              <CCol\n                xs={12}\n                className=\"mt-3 d-block d-sm-flex justify-content-end\"\n              >\n                <CFormGroup>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"secondary\"\n                    className=\"px-4 text-black-50\"\n                    onClick={handleReset}\n                  >\n                    Reset\n                  </CButton>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"primary\"\n                    className=\"ml-3 px-3\"\n                    onClick={handleSearch}\n                  >\n                    Search\n                    <CIcon size=\"sm\" name=\"cil-search\" className=\"ml-2\" />\n                  </CButton>\n                </CFormGroup>\n              </CCol>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xl={12}>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                loading={loading}\n                items={items}\n                fields={[\n                  \"username\",\n                  \"prefix\",\n                  \"firstName\",\n                  \"lastName\",\n                  \"role\",\n                  \"status\",\n                  \"email\",\n                  \"lineId\",\n                  \"mobileNo\",\n                  \"organization\",\n                  {\n                    key: \"action\",\n                    label: \"\",\n                    _style: { width: \"1%\" },\n                    filter: false,\n                  },\n                ]\n                  .filter((field) =>\n                    userRole === \"ADMIN\" ? field : field !== \"role\"\n                  )\n                  .filter((field) =>\n                    !userFullAccess.includes(userRole)\n                      ? field !== \"organization\"\n                      : field\n                  )}\n                hover\n                itemsPerPage={itemsPerPage}\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                  email: (item) =>\n                    item.email !== \"null\" ? <td>{item.email}</td> : \"\",\n                  lineId: (item) =>\n                    item.lineId !== \"null\" ? <td>{item.lineId}</td> : \"\",\n                  mobileNo: (item) =>\n                    item.mobileNo !== \"null\" ? <td>{item.mobileNo}</td> : \"\",\n                  organization: (item) =>\n                    item.organization !== \"null\" ? (\n                      <td>{item.organization}</td>\n                    ) : (\n                      \"\"\n                    ),\n                  action: (item) => (\n                    <td className=\"py-2\">\n                      <CButtonGroup className=\"mr-2\">\n                        <CTooltip content=\"Edit\">\n                          <CLink\n                            size=\"sm\"\n                            className=\"mr-3\"\n                            onClick={() => showModal(\"edit\", item)}\n                          >\n                            <CIcon\n                              size=\"sm\"\n                              name=\"cil-pencil\"\n                              className=\"text-dark\"\n                            />\n                          </CLink>\n                        </CTooltip>\n                        <CTooltip content=\"Delete\">\n                          <CLink\n                            size=\"sm\"\n                            className=\"mr-2\"\n                            onClick={() => showDeleteModal(item)}\n                          >\n                            <CIcon\n                              size=\"sm\"\n                              name=\"cil-trash\"\n                              className=\"text-dark\"\n                            />\n                          </CLink>\n                        </CTooltip>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n                sorter\n                sorterValue={sorterValue}\n                onSorterValueChange={setSorterValue}\n              />\n              <CRow>\n                <CCol xs={12} md={6}>\n                  <CForm inline className=\"mt-2\">\n                    <CLabel className=\"mr-2\">Show</CLabel>{\" \"}\n                    <CSelect\n                      size=\"sm\"\n                      value={itemsPerPage}\n                      onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                    </CSelect>\n                    <CLabel className=\"ml-2\">entries</CLabel>\n                  </CForm>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CPagination\n                    activePage={page + 1}\n                    onActivePageChange={pageChange}\n                    pages={Math.ceil(totalRecords / itemsPerPage)}\n                    doubleArrows={false}\n                    align=\"end\"\n                  />\n                </CCol>\n              </CRow>\n              <UserAddEdit\n                action={action}\n                modal={modal}\n                setModal={setModal}\n                itemDetail={itemDetail}\n                reloadData={handleSearch}\n                roles={roles}\n                statuses={statuses}\n                prefixes={prefixes}\n                organizations={organizations}\n              />\n              <CModal\n                centered\n                show={deleteModal}\n                closeOnBackdrop={false}\n                onClosed={handleClosedModal}\n              >\n                {deleteLoading && (\n                  <div className={deleteLoading ? \"spinner-container\" : \"\"}>\n                    <div className=\"position-absolute spinner-center\">\n                      <div className=\"sk-grid mx-auto\">\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                      </div>\n                      <div className=\"text-center\">Loading....</div>\n                    </div>\n                  </div>\n                )}\n                <CModalHeader>\n                  <h5>Are you sure to delete user?</h5>\n                </CModalHeader>\n                <CModalBody>\n                  Deleting user <strong>{username}</strong> will permanently\n                  delete, this process cannot be recovered.\n                </CModalBody>\n                <CModalFooter>\n                  <CButton color=\"light\" onClick={handleClosedModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    color=\"danger\"\n                    onClick={handleDeleteUser}\n                    disabled={deleteLoading}\n                  >\n                    Confirm\n                  </CButton>{\" \"}\n                </CModalFooter>\n              </CModal>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Users;\n","/Users/tanikulsakulworrawit/Documents/genview/src/views/editors/text-editors/TextEditors.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/toaster/Toaster.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/validation-forms/ValidationForms.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/advanced-forms/AdvancedForms.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/editors/code-editors/CodeEditors.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/modals/Modals.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/alerts/Alerts.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/notifications/badges/Badges.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/draggable/Draggable.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/AdvancedTables.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/calendar/Calendar.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/breadcrumbs/Breadcrumbs.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/cards/Cards.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/carousels/Carousels.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/jumbotrons/Jumbotrons.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/list-groups/ListGroups.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/navbars/Navbars.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/collapses/Collapses.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/tables/Tables.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/paginations/Pagnations.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/spinners/Spinners.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/popovers/Popovers.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/tabs/Tabs.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/switches/Switches.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/navs/Navs.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/progress-bar/ProgressBar.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/brand-buttons/BrandButtons.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/base/tooltips/Tooltips.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/basic-forms/BasicForms.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/buttons/Buttons.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/buttons/button-groups/ButtonGroups.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/icons/brands/Brands.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/theme/colors/Colors.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/icons/flags/Flags.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/theme/typography/Typography.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/MainChartExample.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/widgets/WidgetsBrand.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/widgets/WidgetsDropdown.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/users/UsersData.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reusable/DeviceStatus.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/users/UserAddEdit.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/ChartLineSimple.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/charts/ChartBarSimple.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/BackendTable.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/DemoTable.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/DownloadTable.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/plugins/draggable/_layouts.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/tables/advanced-tables/SelectTable.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/editors/code-editors/_examples.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/views/forms/advanced-forms/states.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reusable/index.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reusable/DocsLink.js",[],["1375","1376"],"/Users/tanikulsakulworrawit/Documents/genview/src/reusable/ProBadge.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reducers/redirect.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reducers/authen.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/reducers/sidebar.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/actions/authen.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/actions/redirect.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/services/CommonService.js",["1377"],"import axios from \"axios\";\nimport { LOCALE, PROD_API_URL, MOCK_API_URL } from \"../config\";\n\naxios.defaults.headers.common[\"Accept-Language\"] = LOCALE;\n\nconst API_URL = PROD_API_URL;\n// process.env.NODE_ENV !== \"development\" ? PROD_API_URL : MOCK_API_URL;\n\nexport const post = (path, body = {}, headers) => {\n  return axios.post(`${PROD_API_URL}/${path}`, body, { headers });\n};\n\nexport const get = (path, query = \"\", headers) => {\n  return axios.get(`${API_URL}/${path}${query !== \"\" ? `?${query}` : \"\"}`, {\n    headers,\n  });\n};\n\nexport const getRoles = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/role\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getStatuses = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/status\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getPrefixes = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/prefix\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getOrganizations = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/organization\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getRoleId = (roles, roleName) => {\n  return roles.find((role) => role.value === roleName).key || -1;\n};\n\nexport const getPrefixId = (prefixes, prefixName) => {\n  return prefixes.find((prefix) => prefix.value === prefixName).key || -1;\n};\n\nexport const getOrganizationId = (organizations, organizationName) => {\n  return (\n    organizations.find(\n      (organization) => organization.value === organizationName\n    ).key || -1\n  );\n};\n","/Users/tanikulsakulworrawit/Documents/genview/src/services/UserService.js",[],"/Users/tanikulsakulworrawit/Documents/genview/src/utils/common.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/index.js",["1378","1379","1380","1381"],"import \"react-app-polyfill/ie11\"; // For IE 11 support\nimport \"react-app-polyfill/stable\";\nimport \"core-js\";\nimport \"./polyfill\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { icons } from \"./assets/icons\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { subscription } from \"src/services/CommonService\";\n\nReact.icons = icons;\n\n// Check if service workers are supported\n/*if ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/service-worker.js`, {\n\n  });\n}*/\n/*serviceWorker.register('/service-worker.js',{scope:'/'});\n\n\nconst publicVapidKey = 'BBSCkqm2M3p7vbebMGzpNzU0Jp91ihWef6oes4zp8fC0Zyhe1YGrq8YHajdXzFUGvpFCQJnZBECOIx-4agHrqII';\n\nconst urlBase64ToUint8Array = (base64String) => {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n};\n\nconst getSubscribedElement = () => document.getElementById('subscribed');\nconst getUnsubscribedElement = () => document.getElementById('unsubscribed');\n\nconst setSubscribeMessage = async () => {\n  const registration = await navigator.serviceWorker.ready;\n  const subscription = await registration.pushManager.getSubscription();\n  getSubscribedElement().setAttribute('style', `display: ${subscription ? 'block' : 'none'};`);\n  getUnsubscribedElement().setAttribute('style', `display: ${subscription ? 'none' : 'block'};`);\n};\n\nwindow.subscribe = async () => {\n  \n  if (!('serviceWorker' in navigator)) return;\n  \n  const registration = await navigator.serviceWorker.ready;\n  console.log('registration');\n  // Subscribe to push notifications\n  const subscription = await registration.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\n  });\n  \n  const accessToken = \"\";\n  subscription(accessToken).then(({ status, data }) => {\n    return status === 200 ? setSubscribeMessage() : [];\n  });\n};\n\nwindow.unsubscribe = async () => {\n  const registration = await navigator.serviceWorker.ready;\n  const subscription = await registration.pushManager.getSubscription();\n  if (!subscription) return;\n\n  const { endpoint } = subscription;\n  const response = await fetch(`/subscription?endpoint=${endpoint}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n    },\n  });\n\n  if (response.ok) {\n    await subscription.unsubscribe();\n    setSubscribeMessage();\n  }\n};\n\nwindow.broadcast = async () => {\n  await fetch('/broadcast', {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n    },\n  });\n};\n\nsetSubscribeMessage();\nwindow.subscribe();\n*/\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["1382","1383"],"/Users/tanikulsakulworrawit/Documents/overpass/src/serviceWorker.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/App.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/store.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/polyfill.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/page500/Page500.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/logo.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/logo-negative.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/assets/icons/sygnet.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/redirect.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/authen.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reducers/sidebar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/reset-password/ResetPassword.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/register/Register.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/page404/Page404.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheLayout.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/pages/login/Login.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/TheEmailApp.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/config/types.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/actions/authen.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheSidebar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdownTasks.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/Template.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdownNotif.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/actions/redirect.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdownMssg.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeaderDropdown.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheFooter.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheHeader.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheContent.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/TheAside.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/inbox/Inbox.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/services/AuthenService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/message/Message.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/email/compose/Compose.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/containers/_nav.js",["1384","1385"],"import React from \"react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst _nav = [\n  {\n    _tag: \"CSidebarNavItem\",\n    name: \"แผนงานวิเคราะห์ข้อมูล\",\n    to: \"/dashboard\",\n    icon: 'cil-map',\n    roles: ['USER', 'SUPER_ADMIN', 'ADMIN']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'เขตพื้นที่และอุปกรณ์',\n    to: '/maps',\n    icon: 'cil-map',\n    roles: ['USER', 'SUPER_ADMIN', 'ADMIN']\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: \"Reports\",\n    to: \"/theme/colors\",\n    icon: \"cil-chart-pie\",\n    roles: ['USER', 'SUPER_ADMIN', 'ADMIN']\n  },\n  {\n    _tag: \"CSidebarNavTitle\",\n    name: \"Administrator\",\n    _children: [\"Administrator\"],\n    roles: ['SUPER_ADMIN', 'ADMIN']\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: \"Users\",\n    to: \"/users\",\n    icon: \"cil-people\",\n    roles: ['SUPER_ADMIN', 'ADMIN']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Add Overpass',\n    to: '/overpass',\n    icon: 'cil-notes',\n    roles: ['SUPER_ADMIN', 'ADMIN']\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: \"Mapping\",\n    to: \"/mapping-overpass\",\n    icon: \"cil-people\",\n    roles: ['SUPER_ADMIN', 'ADMIN']\n  },\n];\n\nexport default _nav;\n","/Users/tanikulsakulworrawit/Documents/overpass/src/routes.js",["1386"],"import React from 'react';\n\nconst CodeEditors = React.lazy(() => import('./views/editors/code-editors/CodeEditors'));\nconst TextEditors = React.lazy(() => import('./views/editors/text-editors/TextEditors'));\n\nconst Invoice = React.lazy(() => import('./views/apps/invoicing/Invoice'));\n\nconst AdvancedForms = React.lazy(() => import('./views/forms/advanced-forms/AdvancedForms'));\nconst BasicForms = React.lazy(() => import('./views/forms/basic-forms/BasicForms'));\nconst ValidationForms = React.lazy(() => import('./views/forms/validation-forms/ValidationForms'));\nconst GoogleMaps = React.lazy(() => import('./views/google-maps/GoogleMaps'));\nconst Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\nconst Calendar = React.lazy(() => import('./views/plugins/calendar/Calendar'));\nconst Draggable = React.lazy(() => import('./views/plugins/draggable/Draggable'));\nconst Spinners = React.lazy(() => import('./views/plugins/spinners/Spinners'));\nconst AdvancedTables = React.lazy(() => import('./views/tables/advanced-tables/AdvancedTables'));\n//const Tables = React.lazy(() => import('./views/tables/tables/Tables'));\n//const LoadingButtons = React.lazy(() => import('./views/buttons/loading-buttons'));\n\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'));\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\n\nconst Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\nconst Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'));\nconst Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\nconst ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\nconst Switches = React.lazy(() => import('./views/base/switches/Switches'));\n\nconst Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\nconst BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\nconst ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\nconst Charts = React.lazy(() => import('./views/charts/Charts'));\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'));\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'));\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'));\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'));\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'));\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\nconst Overpasses = React.lazy(() => import('./views/overpass/Overpasses'));\nconst MappingOverpass = React.lazy(() => import('./views/forms/mapping-overpass/MappingList'));\nconst MappingOverpassAdd = React.lazy(() => import('./views/mapping-overpass/MappingForms'));\nconst MappingOverpassEdit = React.lazy(() => import('./views/mapping-overpass/MappingForms'));\nconst Maps = React.lazy(() => import('./views/maps/Maps'));\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', component: Colors },\n  { path: '/theme/typography', name: 'Typography', component: Typography },\n  { path: '/base', name: 'Base', component: Cards, exact: true },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', component: Cards },\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  { path: '/base/navs', name: 'Navs', component: Navs },\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  { path: '/base/switches', name: 'Switches', component: Switches },\n  { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  { path: '/charts', name: 'Charts', component: Charts },\n  { path: '/editors', name: 'Editors', component: CodeEditors, exact: true },\n  { path: '/editors/code-editors', name: 'Code Editors', component: CodeEditors },\n  { path: '/editors/text-editors', name: 'Text Editors', component: TextEditors },\n  //{ path: '/forms/overpass', name: 'Overpass Forms', component: OverpassForms, exact: true },\n  { path: '/forms', name: 'Forms', component: BasicForms, exact: true },\n  { path: '/forms/advanced-forms', name: 'Advanced Forms', component: AdvancedForms },\n  { path: '/forms/basic-forms', name: 'Basic Forms', component: BasicForms },\n  { path: '/forms/validation-forms', name: 'Form Validation', component: ValidationForms },\n  { path: '/google-maps', name: 'Google Maps', component: GoogleMaps },\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', component: Flags },\n  { path: '/icons/brands', name: 'Brands', component: Brands },\n  { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\n  { path: '/notifications/toaster', name: 'Toaster', component: Toaster },\n  { path: '/plugins', name: 'Plugins', component: Calendar, exact: true },\n  { path: '/plugins/calendar', name: 'Calendar', component: Calendar },\n  { path: '/plugins/draggable', name: 'Draggable Cards', component: Draggable },\n  { path: '/plugins/spinners', name: 'Spinners', component: Spinners },\n  //{ path: '/tables', name: 'Tables', component: Tables, exact: true },\n  //{ path: '/tables/advanced-tables', name: 'Advanced Tables', component: AdvancedTables },\n  //{ path: '/tables/tables', name: 'Tables', component: Tables },\n  { path: '/widgets', name: 'Widgets', component: Widgets },\n  { path: '/apps', name: 'Apps', component: Invoice, exact: true },\n  { path: '/apps/invoicing', name: 'Invoice', component: Invoice, exact: true },\n  { path: '/apps/invoicing/invoice', name: 'Invoice', component: Invoice },\n  { path: '/users', exact: true,  name: 'Users', component: Users },\n  { path: '/users/:id', exact: true, name: 'User Details', component: User },\n  { path: '/apps/email/inbox', exact: true, name: 'Inbox' },\n  { path: '/apps/email/compose', exact: true, name: 'Compose' },\n  { path: '/apps/email/message', exact: true, name: 'Message' },\n  { path: '/overpass', exact: true,  name: 'Overpasses', component: Overpasses },\n  { path: '/mapping-overpass', exact: true,  name: 'Mapping Overpass', component: MappingOverpass },\n  { path: '/mapping-overpass/:mode', exact: true,  name: 'Mapping Overpass', component: MappingOverpassAdd },\n  { path: '/mapping-overpass/:mode/:id', exact: true,  name: 'Mapping Overpass', component: MappingOverpassEdit },\n  { path: '/maps', exact: true,  name: 'Maps', component: Maps }\n]\n\nexport default routes;\n","/Users/tanikulsakulworrawit/Documents/overpass/src/services/CommonService.js",["1387"],"import axios from \"axios\";\nimport { LOCALE, PROD_API_URL, MOCK_API_URL } from \"../config\";\nimport ls from 'local-storage'\n\naxios.defaults.headers.common[\"Accept-Language\"] = LOCALE;\n\nconst API_URL = PROD_API_URL;\n// process.env.NODE_ENV !== \"development\" ? PROD_API_URL : MOCK_API_URL;\n\nexport const post = (path, body = {}, headers) => {\n  return axios.post(`${PROD_API_URL}/${path}`, body, { headers });\n};\n\nexport const get = (path, query = \"\", headers) => {\n  return axios.get(`${API_URL}/${path}${query !== \"\" ? `?${query}` : \"\"}`, {\n    headers,\n  });\n};\n\nexport const getRoles = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/role\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getStatuses = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/status\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getPrefixes = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/prefix\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getOrganizations = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/organization\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getDistricts = async (token, amphurId) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/district?amphurId=\" + amphurId, \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getAmphurs = async (token, provinceId) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/amphur?provinceId=\" + provinceId, \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getProvinces = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  try {\n    const response = await get(\"api/master/province\", \"\", headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const getMappingAddress = async (token) => {\n  if(ls.get(\"address\") === null){\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n    try {\n      const response = await get(\"api/master/mappingAddress\", \"\", headers);\n      ls.set(\"address\", response.data);\n      return response;\n    } catch (err) {\n      return err.response;\n    }\n  }else{\n    return {'status': 200, 'data': ls.get(\"address\")};\n  }\n  \n};\n\nexport const getProvinceId = (provinces, id) => {\n  return provinces.find((province) => province.value === id).key || -1;\n};\n\nexport const getAmphurId = (amphurs, id) => {\n  return amphurs.find((amphur) => amphur.value === id).key || -1;\n};\n\nexport const getDistrictId = (districts, id) => {\n  return districts.find((district) => district.value === id).key || -1;\n};\n\nexport const getRoleId = (roles, roleName) => {\n  return roles.find((role) => role.value === roleName).key || -1;\n};\n\nexport const getPrefixId = (prefixes, prefixName) => {\n  return prefixes.find((prefix) => prefix.value === prefixName).key || -1;\n};\n\nexport const getOrganizationId = (organizations, organizationName) => {\n  return (\n    organizations.find(\n      (organization) => organization.value === organizationName\n    ).key || -1\n  );\n};\n\n\nexport const subscription = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    const request = await post(\n      \"subscription\",\n      \"\",\n      headers\n    );console.log(request);\n    return request;\n  } catch (err) {\n    return err.response.data;\n  }\n};","/Users/tanikulsakulworrawit/Documents/overpass/src/views/users/Users.js",["1388","1389","1390"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CButtonGroup,\n  CForm,\n  CLabel,\n  CSelect,\n  CTooltip,\n  CLink,\n  CInput,\n  CFormGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport CIcon from \"@coreui/icons-react\";\nimport UserAddEdit from \"./UserAddEdit\";\nimport { deleteUser, getUsers } from \"src/services/UserService\";\nimport { LOGIN_FAILED_CODE, roleUserControl, userFullAccess } from \"src/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  getPrefixes,\n  getRoles,\n  getStatuses,\n} from \"src/services/CommonService\";\nimport { capitalize } from \"src/utils/common\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport \"./UserAddEdit.scss\";\n\nconst MySwal = withReactContent(Swal);\n\nconst getBadge = (status) => {\n  switch (status) {\n    case \"ACTIVE\":\n      return \"success\";\n    case \"INACTIVE\":\n      return \"danger\";\n    default:\n      return;\n  }\n};\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const userRole = useSelector((state) => state.authen.role);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(\"add\");\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [username, setUsername] = useState(\"\");\n  const prevUsername = usePrevious(username);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [lineId, setLineId] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [itemDetail, setItemDetail] = useState({});\n  const [roles, setRoles] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [prefixes, setPrefixes] = useState([]);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [sorterValue, setSorterValue] = useState();\n\n  const pageChange = (newPage) => {\n    if (newPage - 1 >= 0 && page !== newPage - 1) {\n      setPage(newPage - 1);\n    }\n  };\n  const showModal = (action, item) => {\n    setAction(action);\n    setModal(!modal);\n    if (action === \"edit\") {\n      setItemDetail(item);\n    }\n  };\n\n  const showDeleteModal = (item) => {\n    setUserId(item.id);\n    setUsername(item.username);\n    setDeleteModal(!deleteModal);\n  };\n\n  const handleClosedModal = () => {\n    setUserId(\"\");\n    setUsername(\"\");\n    setDeleteModal(false);\n  };\n\n  const handleReset = () => {\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setStatus(\"\");\n    setRole(\"\");\n    setEmail(\"\");\n    setLineId(\"\");\n    setMobileNo(\"\");\n  };\n\n  const handleSearch = () => {\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      filter: {\n        username,\n        firstName,\n        lastName,\n        status: status ? status : undefined,\n        role: role ? role : undefined,\n        email,\n        lineId,\n        mobileNo,\n      },\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getUsers(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteUser = (e) => {\n    setDeleteLoading(true);\n    setUsername(\"\");\n    deleteUser(accessToken, userId).then((response) => {\n      if (response.status === 200) {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Success\",\n          text: \"Deleted user successfully  \",\n          icon: \"success\",\n          didClose: () => {\n            setDeleteModal(false);\n            handleSearch();\n          },\n        });\n      } else {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Failed\",\n          text: \"Cannot delete user\",\n          icon: \"error\",\n          didClose: () => {\n            setDeleteModal(false);\n          },\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getRoles(accessToken).then(({ status, data }) => {\n      return status === 200 ? setRoles(data) : setRoles([]);\n    });\n    getStatuses(accessToken).then(({ status, data }) => {\n      return status === 200 ? setStatuses(data) : setStatuses([]);\n    });\n    getPrefixes(accessToken).then(({ status, data }) => {\n      return status === 200 ? setPrefixes(data) : setPrefixes([]);\n    });\n    handleSearch();\n  }, [page, itemsPerPage, sorterValue]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } else if (!['SUPER_ADMIN', 'ADMIN'].includes(userRole)) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  \n  return (\n    <>\n      <CRow>\n        <CCol xs={6} className=\"mb-3 d-flex align-items-center\">\n          <h2>Users</h2>\n        </CCol>\n        <CCol\n          xs={6}\n          className=\"d-block d-sm-flex align-items-center justify-content-end mb-4\"\n        >\n          <CButton color=\"primary\" onClick={() => showModal(\"add\")}>\n            <CIcon size=\"sm\" name=\"cil-user-plus\" className=\" mr-1\" />\n            Add User\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow className=\"justify-content-center\">\n        <CCol xs={12} md={12} xl={12}>\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} className=\"mb-3 font-weight-bold\">\n                  SEARCH\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"username\">Username:</CLabel>\n                    <CInput\n                      id=\"username\"\n                      placeholder=\"username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"firstName\">First Name:</CLabel>\n                    <CInput\n                      id=\"firstName\"\n                      placeholder=\"first name\"\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">Last Name:</CLabel>\n                    <CInput\n                      id=\"lastName\"\n                      placeholder=\"last name\"\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"status\">Status</CLabel>\n                    <CSelect\n                      custom\n                      name=\"status\"\n                      id=\"status\"\n                      value={status}\n                      onChange={(e) => setStatus(e.target.value)}\n                    >\n                      <option value=\"\"></option>\n                      {statuses.map((status) => (\n                        <option key={status.key} value={status.key}>\n                          {capitalize(status.value.toLowerCase())}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"role\">Role:</CLabel>\n                    <CSelect\n                      custom\n                      name=\"role\"\n                      id=\"role\"\n                      value={role}\n                      onChange={(e) => setRole(e.target.value)}\n                    >\n                      <option value=\"\"></option>\n                      \n                      {roles.map(\n                        (role) =>\n                        \n                          roleUserControl[userRole].includes(role.value) && (\n                            <option key={role.key} value={role.key}>\n                              {capitalize(role.value.toLowerCase())}\n                            </option>\n                          )\n                      )}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Email:</CLabel>\n                    <CInput\n                      id=\"email\"\n                      placeholder=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lineId\">Line ID:</CLabel>\n                    <CInput\n                      id=\"lineId\"\n                      placeholder=\"line id\"\n                      value={lineId}\n                      onChange={(e) => setLineId(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"mobileNo\">Mobile No:</CLabel>\n                    <TextMask\n                      placeholder=\"mobile no\"\n                      mask={[\n                        /[0]/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                      ]}\n                      Component={InputAdapter}\n                      className=\"form-control\"\n                      value={mobileNo}\n                      onChange={(e) => setMobileNo(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CCol\n                xs={12}\n                className=\"mt-3 d-block d-sm-flex justify-content-end\"\n              >\n                <CFormGroup>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"secondary\"\n                    className=\"px-4 text-black-50\"\n                    onClick={handleReset}\n                  >\n                    Reset\n                  </CButton>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"primary\"\n                    className=\"ml-3 px-3\"\n                    onClick={handleSearch}\n                  >\n                    Search\n                    <CIcon size=\"sm\" name=\"cil-search\" className=\"ml-2\" />\n                  </CButton>\n                </CFormGroup>\n              </CCol>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xl={12}>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                loading={loading}\n                items={items}\n                fields={[\n                  \"username\",\n                  \"prefix\",\n                  \"firstName\",\n                  \"lastName\",\n                  \"role\",\n                  \"status\",\n                  \"email\",\n                  \"lineId\",\n                  \"mobileNo\",\n                  {\n                    key: \"action\",\n                    label: \"\",\n                    _style: { width: \"1%\" },\n                    filter: false,\n                  },\n                ]\n                  .filter((field) =>\n                    userRole === \"ADMIN\" ? field : field !== \"role\"\n                  )}\n                hover\n                itemsPerPage={itemsPerPage}\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                  email: (item) =>\n                    item.email !== \"null\" ? <td>{item.email}</td> : \"\",\n                  lineId: (item) =>\n                    item.lineId !== \"null\" ? <td>{item.lineId}</td> : \"\",\n                  mobileNo: (item) =>\n                    item.mobileNo !== \"null\" ? <td>{item.mobileNo}</td> : \"\",\n                  \n                  action: (item) => (\n                    <td className=\"py-2\">\n                      <CButtonGroup className=\"mr-2\">\n                        <CTooltip content=\"Edit\">\n                          <CLink\n                            size=\"sm\"\n                            className=\"mr-3\"\n                            onClick={() => showModal(\"edit\", item)}\n                          >\n                            <CIcon\n                              size=\"sm\"\n                              name=\"cil-pencil\"\n                              className=\"text-dark\"\n                            />\n                          </CLink>\n                        </CTooltip>\n                        <CTooltip content=\"Delete\">\n                          <CLink\n                            size=\"sm\"\n                            className=\"mr-2\"\n                            onClick={() => showDeleteModal(item)}\n                          >\n                            <CIcon\n                              size=\"sm\"\n                              name=\"cil-trash\"\n                              className=\"text-dark\"\n                            />\n                          </CLink>\n                        </CTooltip>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n                sorter\n                sorterValue={sorterValue}\n                onSorterValueChange={setSorterValue}\n              />\n              <CRow>\n                <CCol xs={12} md={6}>\n                  <CForm inline className=\"mt-2\">\n                    <CLabel className=\"mr-2\">Show</CLabel>{\" \"}\n                    <CSelect\n                      size=\"sm\"\n                      value={itemsPerPage}\n                      onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                    </CSelect>\n                    <CLabel className=\"ml-2\">entries</CLabel>\n                  </CForm>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CPagination\n                    activePage={page + 1}\n                    onActivePageChange={pageChange}\n                    pages={Math.ceil(totalRecords / itemsPerPage)}\n                    doubleArrows={false}\n                    align=\"end\"\n                  />\n                </CCol>\n              </CRow>\n              <UserAddEdit\n                action={action}\n                modal={modal}\n                setModal={setModal}\n                itemDetail={itemDetail}\n                reloadData={handleSearch}\n                roles={roles}\n                statuses={statuses}\n                prefixes={prefixes}\n              />\n              <CModal\n                centered\n                show={deleteModal}\n                closeOnBackdrop={false}\n                onClosed={handleClosedModal}\n              >\n                {deleteLoading && (\n                  <div className={deleteLoading ? \"spinner-container\" : \"\"}>\n                    <div className=\"position-absolute spinner-center\">\n                      <div className=\"sk-grid mx-auto\">\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                      </div>\n                      <div className=\"text-center\">Loading....</div>\n                    </div>\n                  </div>\n                )}\n                <CModalHeader>\n                  <h5>Are you sure to delete user?</h5>\n                </CModalHeader>\n                <CModalBody>\n                  Deleting user <strong>{username}</strong> will permanently\n                  delete, this process cannot be recovered.\n                </CModalBody>\n                <CModalFooter>\n                  <CButton color=\"light\" onClick={handleClosedModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    color=\"danger\"\n                    onClick={handleDeleteUser}\n                    disabled={deleteLoading}\n                  >\n                    Confirm\n                  </CButton>{\" \"}\n                </CModalFooter>\n              </CModal>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Users;\n","/Users/tanikulsakulworrawit/Documents/overpass/src/views/users/User.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/widgets/Widgets.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/theme/typography/Typography.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/theme/colors/Colors.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/modals/Modals.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/badges/Badges.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/alerts/Alerts.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/icons/brands/Brands.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/icons/flags/Flags.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/dashboard/Dashboard.js",["1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433"],"import React, { lazy, useEffect, useState } from \"react\";\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n  CWidgetProgress,\n  CWidgetIcon,\n  CWidgetProgressIcon,\n  CWidgetSimple,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabs,\n  CTabContent,\n  CTabPane,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CFormText,\n  CLink,\n  CListGroupItem,\n  CListGroup,\n} from \"@coreui/react\";\nimport {\n  CChartBar,\n  CChartLine,\n  CChartDoughnut,\n  CChartRadar,\n  CChartPie,\n  CChartPolarArea,\n\n} from '@coreui/react-chartjs'\nimport CIcon from \"@coreui/icons-react\";\nimport { DocsLink } from 'src/reusable'\nimport MainChartExample from \"../charts/MainChartExample.js\";\nimport socketIOClient from 'socket.io-client'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\n\nconst DeviceStatus = lazy(() => import(\"../../reusable/DeviceStatus\"));\nconst WidgetsDropdown = lazy(() => import(\"../widgets/WidgetsDropdown.js\"));\nconst WidgetsBrand = lazy(() => import(\"../widgets/WidgetsBrand.js\"));\n\nconst Dashboard = () => {\n\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [overpassAll, setOverpassAll] = useState(0);\n  const [overpassByZone, setOverpassByZone] = useState(0);\n  const [overpassOnByMonth, setOverpassOnByMonth] = useState({});\n  const [overpassOffByMonth, setOverpassOffByMonth] = useState({});\n  const [overpassOn, setOverpassOn] = useState(0);\n  const [overpassOff, setOverpassOff] = useState(0);\n\n\n  const send = () => {\n    \n    const input = '';\n    const socket = socketIOClient(`http://localhost:5001`, {\n      path: '/zengcode-websocket',\n      origins: '*:*',\n      // transports: ['polling'],\n      transportOptions: {\n        polling: {\n            extraHeaders: {\n              'Authorization': `Bearer ${accessToken}`,\n            }\n        }\n        }\n    })\n    socket.emit('sent-message', input)\n  }\n  const getData = foodItems => {\n    console.log(foodItems);\n  };\n\n  // รอรับข้อมูลเมื่อ server มีการ update\n  const response = () => {\n    const endpoint = \"http://localhost:5001/topic/greetings\";\n    const message = [];\n    const temp = message\n    const socket = socketIOClient(`http://localhost:5001`, {\n      path: '/topic/greetings',\n      origins: '*:*',\n      // transports: ['polling'],\n      transportOptions: {\n        polling: {\n            extraHeaders: {\n              'Authorization': `Bearer ${accessToken}`,\n            }\n        }\n        }\n    })\n    socket.on(\"disconnect\", () => {\n      console.log(\"Client disconnected\");\n    });\n    socket.on(\"FromAPI\", getData);\n   /* socket.on('get_data', (messageNew) => {\n      //temp.push(messageNew);\n      console.log(messageNew);\n    })*/\n  }\n  useEffect(() => {\n    /*var thisheaders={\n      'Authorization': `Bearer ${accessToken}`,\n      \n  };\n    var sock = new SockJS('http://localhost:5001/websocket');\n    let stompClient = Stomp.over(sock);\n    sock.onopen = function() {\n      console.log('open');\n    }\n    \n    stompClient.connect(thisheaders, function (frame) {\n      console.log('Connected: ' + frame);\n      stompClient.subscribe('/topic/greetings', function (greeting) {\n        console.log(greeting);\n        //you can execute any function here\n      });\n    });*/\n  });\n\n  return (\n    <>\n      <h3 className=\"mb-4\">Device Activity</h3>\n      <CRow>\n        <CCol xs=\"3\" sm=\"3\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center><h1>1</h1></center>\n              <center className=\"text-warning\">เขตพื้นที่ติดตั้งอุปกรณ์</center>\n            </CCardBody>\n            <CCardFooter className=\"bg-warning text-white\">\n              <center>10 มกราคม 2564 11:47</center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol xs=\"3\" sm=\"3\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center><h1>1</h1></center>\n              <center className=\"text-info\">รวมอุปกรณ์ไฟฟ้าทั้งหมด</center>\n            </CCardBody>\n            <CCardFooter className=\"bg-warning text-white\">\n              <center>10 มกราคม 2564 11:47</center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol xs=\"3\" sm=\"3\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center><h1>1</h1></center>\n              <center className=\"text-success\">อุปกรณ์หลอดไฟฟ้าติด</center>\n            </CCardBody>\n            <CCardFooter className=\"bg-warning text-white\">\n              <center>10 มกราคม 2564 11:47</center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol xs=\"3\" sm=\"3\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center><h1>1</h1></center>\n              <center className=\"text-danger\">อุปกรณ์หลอดไฟฟ้าดับ</center>\n            </CCardBody>\n            <CCardFooter className=\"bg-secondary text-white\">\n              <center>10 มกราคม 2564 11:47</center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n      <CCol xs=\"12\" sm=\"12\" md=\"12\">\n        <CCard>\n          <CCardBody>\n              <CCard>\n                <CCardHeader>\n                  Navs\n                  <small> tabs</small>\n                </CCardHeader>\n                <CCardBody>\n                <CTabs activeTab=\"home\">\n                <CNav variant=\"tabs\">\n                  <CNavItem>\n                    <CNavLink data-tab=\"home\">\n                      ปริมาณข้อมูลรายเดือน\n                    </CNavLink>\n                  </CNavItem>\n                  <CNavItem>\n                    <CNavLink data-tab=\"profile\" className={\"text-mute\"}>\n                      อัตราอุปกรณ์ไฟฟ้าติด-ดับ\n                    </CNavLink>\n                  </CNavItem>\n                </CNav>\n                <CTabContent>\n                  <CTabPane data-tab=\"home\">\n                    <CRow>\n                  <CCol xs=\"8\" sm=\"8\" md=\"8\">\n                  <CChartBar\n                    datasets={[\n                      {\n                        label: 'อุปกรณ์ไฟฟ้าติด',\n                        backgroundColor: '#f87979',\n                        data: [40, 20, 12, 39, 10, 40, 39, 80, 40, 20, 12, 11]\n                      },\n                      {\n                        label: 'อุปกรณ์ไฟฟ้าดับ',\n                        backgroundColor: '#f87979',\n                        data: [40, 20, 12, 39, 10, 40, 39, 80, 40, 20, 12, 11]\n                      }\n                    ]}\n                    labels=\"months\"\n                    options={{\n                      tooltips: {\n                        enabled: true\n                      }\n                    }}\n                  />\n                  </CCol>\n                  <CCol xs=\"4\" sm=\"4\" md=\"4\">\n                  <CListGroup>\n                    <CListGroupItem><b className={\"float-left\"}>Top Referrals</b><b className=\"float-right\"><CLink href=\"https://coreui.io\"\n                              target=\"_blank\"\n                            >View Report</CLink></b></CListGroupItem>\n                    <CListGroupItem>\n                      <span className=\"float-left\">หัวเรื่อง/แหล่งที่มา</span>\n                      <span className=\"float-right\">จำนวน</span>\n                    </CListGroupItem>\n                    <CListGroupItem>\n                      <span className=\"float-left\">อุปกรณ์ไฟฟ้าติดสูงสุด</span>\n                      <span className=\"float-right\">2 จุด</span>\n                    </CListGroupItem>\n                    <CListGroupItem>\n                      <span className=\"float-left\">อุปกรณ์ไฟฟ้าดับสูงสุด</span>\n                      <span className=\"float-right\">2 จุด</span>\n                    </CListGroupItem>\n                    <CListGroupItem>\n                      <span className=\"float-left\">อุปกรณ์ไฟฟ้าเสียร้อยละ</span>\n                      <span className=\"float-right\">2 จุด</span>\n                    </CListGroupItem>\n                    <CListGroupItem>\n                      <span className=\"float-left\">แจ้งเตือนข้อมูลสะสม</span>\n                      <span className=\"float-right\">จำนวน</span>\n                    </CListGroupItem>\n                  </CListGroup>\n                  \n                    \n          </CCol>\n          </CRow>\n                  </CTabPane>\n                  <CTabPane data-tab=\"profile\">\n                    456\n                  </CTabPane>\n                </CTabContent>\n              </CTabs>\n                  \n                </CCardBody>\n              </CCard>\n            \n          </CCardBody>\n          \n        </CCard>\n        </CCol>\n      </CRow> \n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/Charts.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/brand-buttons/BrandButtons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/button-groups/ButtonGroups.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/tooltips/Tooltips.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/popovers/Popovers.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/switches/Switches.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/progress-bar/ProgressBar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/paginations/Pagnations.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/tabs/Tabs.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/navs/Navs.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/list-groups/ListGroups.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/cards/Cards.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/collapses/Collapses.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/navbars/Navbars.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/jumbotrons/Jumbotrons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/carousels/Carousels.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/buttons/buttons/Buttons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/base/breadcrumbs/Breadcrumbs.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/AdvancedTables.js",["1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444"],"import React from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport DemoTable from './DemoTable'\nimport SelectTable from './SelectTable'\nimport BackendTable from './BackendTable'\nimport DownloadTable from './DownloadTable'\nimport { DocsLink } from 'src/reusable'\n\n/*const AdvancedTables = () => {\n  return (\n    <CRow>\n      <CCol sm=\"12\">\n        <CCard>\n          <CCardHeader>\n            <CIcon name=\"cil-grid\"/> Advanced CDataTable application\n            <DocsLink name=\"CDataTable\"/>\n          </CCardHeader>\n          <DemoTable/>\n        </CCard>\n\n        <CCard>\n          <CCardHeader>\n            Backend integration example\n          </CCardHeader>\n          <BackendTable/>\n        </CCard>\n\n        <CCard>\n          <CCardHeader>\n            Table with selectable rows\n          </CCardHeader>\n          <SelectTable/>\n        </CCard>\n\n        <CCard>\n          <CCardHeader>\n            Current table items download to xlsx/csv table\n          </CCardHeader>\n          <DownloadTable/>\n        </CCard>\n\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default AdvancedTables\n*/","/Users/tanikulsakulworrawit/Documents/overpass/src/config/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/ChartBarSimple.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/ChartLineSimple.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/widgets/WidgetsBrand.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/widgets/WidgetsDropdown.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/utils/common.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/services/UserService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/users/UserAddEdit.js",["1445","1446","1447","1448"],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CRow,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CSelect,\n  CForm,\n  CInvalidFeedback,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport { getRoleId, getPrefixId } from \"../../services/CommonService\";\nimport { addUser, editUser } from \"src/services/UserService\";\nimport { useSelector } from \"react-redux\";\nimport { getMappingOverPassAll } from \"src/services/MappingService\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { capitalize } from \"src/utils/common\";\nimport { roleUserControl, userFullAccess } from \"src/config\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Redirect } from \"react-router-dom\";\n\nconst MySwal = withReactContent(Swal);\n\nconst UserAddEdit = (props) => {\n  const {\n    action,\n    modal,\n    setModal,\n    itemDetail,\n    reloadData,\n    roles,\n    statuses,\n    prefixes,\n  } = props;\n  const formikRef = useRef();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const isEdit = action === \"add\" ? false : true;\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [loading, setLoading] = useState(false);\n  const userRole = useSelector((state) => state.authen.role);\n  const [groupList, setGroupList] = useState([]);\n\n  const addUserSchema = () => {\n    let schema = {\n      username: Yup.string()\n        .min(2, \"Username has to be at least 2 characters\")\n        .required(\"Username is required!\"),\n      prefix: Yup.string().required(\"Prefix is required!\"),\n      firstName: Yup.string().required(\"Firstname is required!\"),\n      lastName: Yup.string().required(\"Lastname is required!\"),\n      email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email is required!\"),\n      lineId: Yup.string().required(\"Line ID is required!\"),\n      mobileNo: Yup.string()\n        .matches(/[0]{1}\\d{9}/, \"Mobile No must contain only numbers\")\n        .required(\"Mobile No is required!\"),\n      role: Yup.string().required(\"Role is required!\"),\n      groupId: Yup.string().required(\"Group is required!\"),\n      \n    };\n    if(isEdit){\n      schema = {...schema, status: Yup.string().required(\"Status is required!\"),}\n    }\n    return Yup.object().shape(schema);\n  };\n\n  const handleCloseEditModal = () => {\n    setModal(false);\n  };\n\n  const handleCloseAddModal = (e, handleReset) => {\n    handleReset();\n    setModal(false);\n  };\n\n  const handleAdd = (values, { resetForm }) => {\n    const {\n      username,\n      prefix,\n      firstName,\n      lastName,\n      role,\n      email,\n      lineId,\n      mobileNo,\n      groupId,\n      status\n    } = values;\n\n    let body = {\n      username,\n      prefix: Number(prefix),\n      firstName,\n      lastName,\n      role,\n      email,\n      lineId,\n      mobileNo,\n      groupId,\n      status\n    };\n\n    if (userFullAccess.includes(userRole)) {\n      body = {\n        ...body,\n      };\n    }\n    if(isEdit){\n      editUser(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Success\",\n            text: \"Edit user information successfully  \",\n            icon: \"success\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        } else {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm(initialValues);\n      });\n    }else{\n      addUser(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Success\",\n            text: \"Add user information successfully  \",\n            icon: \"success\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        } else {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm(initialValues);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getMappingOverPassAll(accessToken).then(({ status, data }) => {\n      return status === 200 ? setGroupList(data) : setGroupList([]);\n    });\n    formikRef.current.resetForm();\n    if(isEdit){\n      \n     formikRef.current.setFieldValue(\"username\", itemDetail.username);\n     formikRef.current.setFieldValue(\"prefix\", itemDetail.prefixId);\n     formikRef.current.setFieldValue(\"firstName\", itemDetail.firstName);\n     formikRef.current.setFieldValue(\"lastName\", itemDetail.lastName);\n     formikRef.current.setFieldValue(\"email\", itemDetail.email);\n     formikRef.current.setFieldValue(\"lineId\", itemDetail.lineId);\n     formikRef.current.setFieldValue(\"mobileNo\", itemDetail.mobileNo);\n     formikRef.current.setFieldValue(\"role\", itemDetail.role);\n     formikRef.current.setFieldValue(\"groupId\", itemDetail.groupId);\n     formikRef.current.setFieldValue(\"status\", itemDetail.status);\n    }\n  }, [modal]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } else if (!['SUPER_ADMIN', 'ADMIN'].includes(userRole)) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Formik\n      innerRef={formikRef}\n      enableReinitializing={true}\n      initialValues={{\n        username: \"\",\n        prefix: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        lineId: \"\",\n        mobileNo: \"\",\n        role: \"\",\n        groupId: \"\",\n        status: \"ACTIVE\"\n      }}\n      validationSchema={addUserSchema}\n      onSubmit={handleAdd}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset,\n      }) => (\n        <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n          <CModal size=\"lg\" centered show={modal} closeOnBackdrop={false}>\n            {loading && (\n              <div className={loading ? \"spinner-container\" : \"\"}>\n                <div className=\"position-absolute spinner-center\">\n                  <div className=\"sk-grid mx-auto\">\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                  </div>\n                  <div className=\"text-center\">Loading....</div>\n                </div>\n              </div>\n            )}\n            <CModalBody className=\"p-4\">\n              <CRow>\n                <CCol xs={12} className=\"mb-3 mt-2\">\n                  <h4>{(isEdit) ? \"แก้ไขผู้ใช้งาน\" : \"เพิ่มผู้ใช้งาน\"}</h4>\n                </CCol>\n                <CCol xs={12}>\n                  <CFormGroup>\n                    <CCol md=\"3\">\n                      <CLabel className=\"font-weight-bold\">Username:</CLabel>\n                    </CCol>\n                    <CCol xs={12} md={9}>\n                      <CInput\n                        id=\"username\"\n                        name=\"username\"\n                        placeholder=\"\"\n                        valid={!!values.username}\n                        invalid={touched.username && !!errors.username}\n                        value={values.username}\n                        disabled={isEdit}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.username}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Prefix:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CSelect\n                        custom\n                        name=\"prefix\"\n                        id=\"prefix\"\n                        valid={!!values.prefix}\n                        invalid={touched.prefix && !!errors.prefix}\n                        value={values.prefix}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {prefixes.map((prefix) => (\n                          <option key={prefix.key} value={prefix.key}>\n                            {prefix.value}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.prefix}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        First Name:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CInput\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        valid={!!values.firstName}\n                        invalid={touched.firstName && !!errors.firstName}\n                        placeholder=\"\"\n                        value={values.firstName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.firstName}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Last Name:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CInput\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        placeholder=\"\"\n                        valid={!!values.lastName}\n                        invalid={touched.lastName && !!errors.lastName}\n                        value={values.lastName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lastName}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Email:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CInput\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"\"\n                        valid={!!values.email}\n                        invalid={touched.email && !!errors.email}\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.email}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Line ID:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CInput\n                        id=\"lineId\"\n                        name=\"lineId\"\n                        placeholder=\"\"\n                        valid={!!values.lineId}\n                        invalid={touched.lineId && !!errors.lineId}\n                        value={values.lineId}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lineId}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Mobile No:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <TextMask\n                        placeholder=\"\"\n                        mask={[\n                          /[0]/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                        ]}\n                        id=\"mobileNo\"\n                        name=\"mobileNo\"\n                        Component={InputAdapter}\n                        className={`form-control ${\n                          errors.mobileNo && touched.mobileNo\n                            ? \"is-invalid\"\n                            : \"\"\n                        } ${values.mobileNo ? \"is-valid\" : \"\"}`}\n                        value={values.mobileNo}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.mobileNo}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Role:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CSelect\n                        custom\n                        name=\"role\"\n                        id=\"role\"\n                        valid={!!values.role}\n                        invalid={touched.role && !!errors.role}\n                        value={values.role}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {roles.map(\n                          (role) =>\n                            roleUserControl[userRole].includes(role.value) && (\n                              <option key={role.key} value={role.key}>\n                                {capitalize(role.value.toLowerCase())}\n                              </option>\n                            )\n                        )}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.role}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                {(isEdit) &&\n                  <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Status:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CSelect\n                        custom\n                        name=\"status\"\n                        id=\"status\"\n                        valid={!!values.status}\n                        invalid={touched.status && !!errors.status}\n                        value={values.status}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {statuses.map((status) => (\n                          <option key={status.key} value={status.value}>\n                            {status.value}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.status}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n\n                }\n                \n                <CCol xs={4}>\n                  <CFormGroup>\n                    <CCol xs={12}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Group:\n                      </CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CSelect\n                        custom\n                        name=\"groupId\"\n                        id=\"groupId\"\n                        valid={!!values.groupId}\n                        invalid={touched.groupId && !!errors.groupId}\n                        value={values.groupId}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"0\">Please select</option>\n                        {groupList.map((group) => (\n                          <option key={group.id} value={group.id}>\n                            {group.groupName}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.groupId}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n            </CModalBody>\n            <CModalFooter>\n              <CButton\n                type=\"reset\"\n                color=\"light\"\n                onClick={(e) => handleCloseAddModal(e, handleReset)}\n              >\n                Cancel\n              </CButton>\n              <CButton type=\"submit\" color=\"primary\" disabled={loading}>\n                Confirm\n              </CButton>{\" \"}\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      )}\n    </Formik>\n  )\n};\n\nexport default UserAddEdit;\n","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/DownloadTable.js",["1449","1450","1451","1452","1453"],"import React, { useState } from 'react'\nimport {\n  CCardBody,\n  CButton,\n  CDataTable\n} from '@coreui/react'\n/*import usersData from '../../users/UsersData.js'\n\nconst DemoTable = () => {\n  const [currentItems, setCurrentItems] = useState(usersData)\n\n  const csvContent = currentItems.map(item => Object.values(item).join(',')).join('\\n')\n    \n  const csvCode = 'data:text/csv;charset=utf-8,SEP=,%0A' + encodeURIComponent(csvContent)\n\n  return (\n    <CCardBody>\n      <CButton\n        color=\"primary\"\n        className=\"mb-2\"\n        href={csvCode} \n        download=\"coreui-table-data.csv\"\n        target=\"_blank\"\n      >\n        Download current items (.csv)\n      </CButton>\n      <CDataTable\n        items={usersData}\n        columnFilter\n        itemsPerPage={5}\n        hover\n        sorter\n        onFilteredItemsChange={setCurrentItems}\n      />    \n    </CCardBody>\n  )\n}\n\nexport default DemoTable\n*/","/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/BackendTable.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/SelectTable.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/tables/advanced-tables/DemoTable.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/charts/MainChartExample.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/DeviceStatus.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/notifications/toaster/Toaster.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/google-maps/GoogleMaps.js",["1454"],"import React from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CNavLink,\n  CRow,\n  CCol,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport { ProBadge, DocsLink } from 'src/reusable'\n\n\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\nconst apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n\nconst defaultZoom = 11\nconst defaultCenter = { lat: 37.431489, lng: -122.163719 }\nconst locations = [\n  {\n    lat: 37.431489,\n    lng: -122.163719,\n    label: 'S',\n    draggable: false,\n    title: 'Stanford',\n    www: 'https://www.stanford.edu/'\n  },\n  {\n    lat: 37.394694,\n    lng: -122.150333,\n    label: 'T',\n    draggable: false,\n    title: 'Tesla',\n    www: 'https://www.tesla.com/'\n  },\n  {\n    lat: 37.331681,\n    lng: -122.030100,\n    label: 'A',\n    draggable: false,\n    title: 'Apple',\n    www: 'https://www.apple.com/'\n  },\n  {\n    lat: 37.484722,\n    lng: -122.148333,\n    label: 'F',\n    draggable: false,\n    title: 'Facebook',\n    www: 'https://www.facebook.com/'\n  }\n]\n\nconst MarkerList = () => {\n  return locations.map((location, index) => {\n    return (\n      <MarkerWithInfoWindow key={index.toString()} location={location}/>\n    )\n  })\n}\n\nconst MarkerWithInfoWindow = ({location}) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n    <Marker \n      onClick={() => setIsOpen(!isOpen)} \n      position={location} \n      title={location.title} \n      label={location.label}\n    >\n      { isOpen &&\n        <InfoWindow onCloseClick={() => setIsOpen(false)}>\n          <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n        </InfoWindow>\n      }\n    </Marker>\n  )\n}\n\nconst GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n    return (\n      <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n        {<MarkerList locations={locations}/>}\n      </GoogleMap>\n    )\n  }\n))\n\nconst toKebabCase = (str) => {\n  return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()\n}\n\nconst ReactGoogleMaps = () => {\n  return [\n    <CCard>\n      <CCardHeader>\n        React Google Maps{' '}\n        <ProBadge/>\n        <DocsLink href=\"https://github.com/tomchentw/react-google-maps\"/>\n      </CCardHeader>\n      <CCardBody>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </CCardBody>\n    </CCard>,\n    <CCard>\n      <CCardHeader>\n        React Google Maps{' '}\n        <ProBadge/>\n        <DocsLink href=\"https://github.com/tomchentw/react-google-maps\"/>\n      </CCardHeader>\n      <CCardBody>\n      <CRow>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody borderColor=\"secondary\">\n            <CRow>\n            <CCol xs=\"3\" sm=\"3\" md=\"3\">\n      \n              <CIcon name=\"cil-location-pin\" size=\"2xl\"/>\n            \n            </CCol>\n            <CCol xs=\"9\" sm=\"9\" md=\"9\">\n              <CRow><b>District:</b> xxxxxxxxx</CRow>\n              <CRow><b>Point status Flase:</b> xxxxxxx</CRow>\n              <CRow><b>Update:</b> xxxxxxx</CRow>\n            </CCol>\n            </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody borderColor=\"secondary\">\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n              laoreet dolore magna aliquam erat volutpat.Ut wisi enim ad minim veniam, quis nostrud exerci tation\n              ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody borderColor=\"secondary\">\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n              laoreet dolore magna aliquam erat volutpat.Ut wisi enim ad minim veniam, quis nostrud exerci tation\n              ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody borderColor=\"secondary\">\n              Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n              laoreet dolore magna aliquam erat volutpat.Ut wisi enim ad minim veniam, quis nostrud exerci tation\n              ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n            </CCardBody>\n          </CCard>\n        </CCol>\n        </CRow>\n      </CCardBody>\n    </CCard>\n  ]\n}\n\nexport default ReactGoogleMaps\n","/Users/tanikulsakulworrawit/Documents/overpass/src/views/apps/invoicing/Invoice.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/draggable/Draggable.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/spinners/Spinners.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/calendar/Calendar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/basic-forms/BasicForms.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/validation-forms/ValidationForms.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/advanced-forms/AdvancedForms.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/editors/text-editors/TextEditors.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/editors/code-editors/CodeEditors.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/ProBadge.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/reusable/DocsLink.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/forms/advanced-forms/states.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/plugins/draggable/_layouts.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/editors/code-editors/_examples.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/overpass/Overpasses.js",["1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CButtonGroup,\n  CForm,\n  CLabel,\n  CSelect,\n  CTooltip,\n  CLink,\n  CInput,\n  CFormGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport CIcon from \"@coreui/icons-react\";\nimport OverpassAddEdit from \"./OverpassAddEdit\";\nimport { deleteOverpass, getOverpasses } from \"src/services/OverpassService\";\nimport { LOGIN_FAILED_CODE, roleUserControl, userFullAccess } from \"src/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  getMappingAddress,\n  getStatuses\n} from \"src/services/CommonService\";\nimport { capitalize } from \"src/utils/common\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport \"./OverpassAddEdit.scss\";\n\nconst MySwal = withReactContent(Swal);\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Overpasses = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(\"add\");\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [id, setId] = useState(\"\");\n  const prevUsername = usePrevious(id);\n  const [name, setName] = useState(\"\");\n  const [setpointWatt, setSetpointWatt] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [minWatt, setMinWatt] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [longtitude, setLongTitude] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [amphur, setAmphur] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [statuses, setStatuses] = useState([]);\n  const [province, setProvince] = useState(\"\");\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [postcode, setPostcode] = useState(\"\");\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [sorterValue, setSorterValue] = useState();\n  const [itemDetail, setItemDetail] = useState({});\n  const [provinces, setProvinces] = useState([]);\n  const [amphurs, setAmphurs] = useState([]);\n  const [districts, setDistricts] = useState([]);\n\n  const pageChange = (newPage) => {\n    if (newPage - 1 >= 0 && page !== newPage - 1) {\n      setPage(newPage - 1);\n    }\n  };\n  const showModal = (action, item) => {\n    setAction(action);\n    setModal(!modal);\n    if (action === \"edit\") {\n      setItemDetail(item);\n    }else{\n      setItemDetail({});\n    }\n  };\n\n  const showDeleteModal = (item) => {\n    setId(item.id);\n    setDeleteModal(!deleteModal);\n  };\n\n  const handleClosedModal = () => {\n    //setUserId(\"\");\n    //setUsername(\"\");\n    setDeleteModal(false);\n  };\n\n  const handleReset = () => {\n    /*setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setStatus(\"\");\n    setRole(\"\");\n    setEmail(\"\");\n    setLineId(\"\");\n    setMobileNo(\"\");*/\n  };\n\n  const handleSearch = (e, reload = false) => {\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      filter: {\n        id: reload ? prevUsername : id,\n        name,\n        location,\n        district,\n        amphur,\n        province,\n      },\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getOverpasses(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteOverpass = (e) => {\n    setDeleteLoading(true);\n    deleteOverpass(accessToken, id).then((response) => {\n      if (response.status === 200) {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Success\",\n          text: \"Deleted user successfully  \",\n          icon: \"success\",\n          didClose: () => {\n            setDeleteModal(false);\n            handleSearch(e, true);\n          },\n        });\n      } else {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Failed\",\n          text: \"Cannot delete user\",\n          icon: \"error\",\n          didClose: () => {\n            setDeleteModal(false);\n          },\n        });\n      }\n    });\n  };\n\n  const selectProvince = (e) => {\n    let id = e.target.value;\n    setAmphurs(provinces.find((val) => { return val.key == id }).amphur);\n    setDistricts([]);\n    setProvince(id);\n  };\n\n  const selectAmphur = (e) => {\n    let id = e.target.value;\n    setDistricts(amphurs.find((val) => { return val.key == id }).district);\n    setAmphur(id);\n  };\n\n  useEffect(() => {\n\n    if(provinces.length === 0){\n      getMappingAddress(accessToken).then(({ status, data }) => {\n        return status === 200 ? setProvinces(data) : setProvinces([]);\n      });\n    }\n    getStatuses(accessToken).then(({ status, data }) => {\n      return status === 200 ? setStatuses(data) : setStatuses([]);\n    });\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      setpointWatt,\n    };\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getOverpasses(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  }, [/*page, itemsPerPage, sorterValue*/]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } \n  \n  return (\n    <>\n      <CRow>\n        <CCol xs={6} className=\"mb-3 d-flex align-items-center\">\n          <h2>Overpass</h2>\n        </CCol>\n        <CCol\n          xs={6}\n          className=\"d-block d-sm-flex align-items-center justify-content-end mb-4\"\n        >\n          <CButton color=\"primary\" onClick={() => showModal(\"add\")}>\n            <CIcon size=\"sm\" name=\"cil-user-plus\" className=\" mr-1\" />\n            Add Overpass\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow className=\"justify-content-center\">\n        <CCol xs={12} md={12} xl={12}>\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} className=\"mb-3 font-weight-bold\">\n                  SEARCH\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"id\">Id:</CLabel>\n                    <CInput\n                      id=\"id\"\n                      placeholder=\"id\"\n                      value={id}\n                      onChange={(e) => setId(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"name\">Name:</CLabel>\n                    <CInput\n                      id=\"name\"\n                      placeholder=\"name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"province\">Province</CLabel>\n                    <CSelect\n                      custom\n                      name=\"province\"\n                      id=\"province\"\n                      onChange={selectProvince}\n                      value={province}\n                    >\n                      <option value=\"\"></option>\n                      {provinces.map((province) => (\n                        <option key={province.key} value={province.key}>\n                          {capitalize(province.value.toLowerCase())}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"amphur\">Amphur</CLabel>\n                    <CSelect\n                      custom\n                      name=\"amphur\"\n                      id=\"amphur\"\n                      value={amphur}\n                      onChange={selectAmphur}\n                    >\n                      <option value=\"\"></option>\n                      {amphurs.map((amphur) => (\n                        <option key={amphur.key} value={amphur.key}>\n                          {capitalize(amphur.value)}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={6} md={4} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"district\">District</CLabel>\n                    <CSelect\n                      custom\n                      name=\"district\"\n                      id=\"district\"\n                      value={district}\n                      onChange={(e) => setDistrict(e.target.value)}\n                    >\n                      <option value=\"\"></option>\n                      {districts.map((district) => (\n                        <option key={district.key} value={district.key}>\n                          {capitalize(district.value)}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CCol\n                xs={12}\n                className=\"mt-3 d-block d-sm-flex justify-content-end\"\n              >\n                <CFormGroup>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"secondary\"\n                    className=\"px-4 text-black-50\"\n                    onClick={handleReset}\n                  >\n                    Reset\n                  </CButton>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"primary\"\n                    className=\"ml-3 px-3\"\n                    onClick={handleSearch}\n                  >\n                    Search\n                    <CIcon size=\"sm\" name=\"cil-search\" className=\"ml-2\" />\n                  </CButton>\n                </CFormGroup>\n              </CCol>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xl={12}>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                loading={loading}\n                items={items}\n                fields={[\n                  \"id\",\n                  \"name\",\n                  \"location\",\n                  \"districtName\",\n                  \"amphurName\",\n                  \"provinceName\",\n                  \"postcode\",\n                  {\n                    key: \"action\",\n                    label: \"\",\n                    _style: { width: \"1%\" },\n                    filter: false,\n                  },\n                ]\n                }\n                hover\n                itemsPerPage={itemsPerPage}\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n\n                scopedSlots={{\n                  action: (item) => (\n                    <td className=\"py-2\">\n                      <CButtonGroup className=\"mr-2\">\n                        <CTooltip content=\"Edit\">\n                          <CLink\n                            size=\"sm\"\n                            className=\"mr-3\"\n                            onClick={() => showModal(\"edit\", item)}\n                          >\n                            <CIcon\n                              size=\"sm\"\n                              name=\"cil-pencil\"\n                              className=\"text-dark\"\n                            />\n                          </CLink>\n                        </CTooltip>\n                        <CTooltip content=\"Delete\">\n                          <CLink\n                            size=\"sm\"\n                            className=\"mr-2\"\n                            onClick={() => showDeleteModal(item)}\n                          >\n                            <CIcon\n                              size=\"sm\"\n                              name=\"cil-trash\"\n                              className=\"text-dark\"\n                            />\n                          </CLink>\n                        </CTooltip>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n                sorter\n                sorterValue={sorterValue}\n                onSorterValueChange={setSorterValue}\n              />\n              <CRow>\n                <CCol xs={12} md={6}>\n                  <CForm inline className=\"mt-2\">\n                    <CLabel className=\"mr-2\">Show</CLabel>{\" \"}\n                    <CSelect\n                      size=\"sm\"\n                      value={itemsPerPage}\n                      onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                    </CSelect>\n                    <CLabel className=\"ml-2\">entries</CLabel>\n                  </CForm>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CPagination\n                    activePage={page + 1}\n                    onActivePageChange={pageChange}\n                    pages={Math.ceil(totalRecords / itemsPerPage)}\n                    doubleArrows={false}\n                    align=\"end\"\n                  />\n                </CCol>\n              </CRow>\n              <OverpassAddEdit\n                action={action}\n                modal={modal}\n                setModal={setModal}\n                itemDetail={itemDetail}\n                reloadData={handleSearch}\n                provinces={provinces}\n                amphurs={[]}\n                districts={[]}\n                statuses={statuses}\n              />\n              <CModal\n                centered\n                show={deleteModal}\n                closeOnBackdrop={false}\n                onClosed={handleClosedModal}\n              >\n                {deleteLoading && (\n                  <div className={deleteLoading ? \"spinner-container\" : \"\"}>\n                    <div className=\"position-absolute spinner-center\">\n                      <div className=\"sk-grid mx-auto\">\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                      </div>\n                      <div className=\"text-center\">Loading....</div>\n                    </div>\n                  </div>\n                )}\n                <CModalHeader>\n                  <h5>Are you sure to delete user?</h5>\n                </CModalHeader>\n                <CModalBody>\n                  Deleting overpass <strong>{id}</strong> will permanently\n                  delete, this process cannot be recovered.\n                </CModalBody>\n                <CModalFooter>\n                  <CButton color=\"light\" onClick={handleClosedModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    color=\"danger\"\n                    onClick={handleDeleteOverpass}\n                    disabled={deleteLoading}\n                  >\n                    Confirm\n                  </CButton>{\" \"}\n                </CModalFooter>\n              </CModal>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Overpasses;\n","/Users/tanikulsakulworrawit/Documents/overpass/src/views/overpass/OverpassAddEdit.js",["1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486"],"/Users/tanikulsakulworrawit/Documents/overpass/src/services/OverpassService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/services/MappingService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/mapping-overpass/MappingForms.js",["1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529"],"/Users/tanikulsakulworrawit/Documents/overpass/src/views/maps/Maps.js",["1530","1531","1532","1533","1534","1535","1536","1537","1538"],"import React from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CNavLink,\n  CRow,\n  CCol,\n  CNav,\n  CNavItem,\n  CTabs,\n  CTabContent,\n  CTabPane,\n  CListGroup,\n  CListGroupItem,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CFormText,\n  CDropdown,\n  CDropdownToggle,\n  CInputGroup,\n  CDropdownMenu,\n  CDropdownItem,\n  CSelect,\n  CButton\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport { ProBadge, DocsLink } from 'src/reusable'\nimport './style.css';\nimport { Button } from '@material-ui/core'\n\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\nconst apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n\nconst defaultZoom = 11\nconst defaultCenter = { lat: 37.431489, lng: -122.163719 }\nconst locations = [\n  {\n    lat: 37.431489,\n    lng: -122.163719,\n    label: 'S',\n    draggable: false,\n    title: 'Stanford',\n    www: 'https://www.stanford.edu/'\n  },\n  {\n    lat: 37.394694,\n    lng: -122.150333,\n    label: 'T',\n    draggable: false,\n    title: 'Tesla',\n    www: 'https://www.tesla.com/'\n  },\n  {\n    lat: 37.331681,\n    lng: -122.030100,\n    label: 'A',\n    draggable: false,\n    title: 'Apple',\n    www: 'https://www.apple.com/'\n  },\n  {\n    lat: 37.484722,\n    lng: -122.148333,\n    label: 'F',\n    draggable: false,\n    title: 'Facebook',\n    www: 'https://www.facebook.com/'\n  }\n]\n\nconst MarkerList = () => {\n  return locations.map((location, index) => {\n    return (\n      <MarkerWithInfoWindow key={index.toString()} location={location}/>\n    )\n  })\n}\n\nconst MarkerWithInfoWindow = ({location}) => {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return (\n          \n    <Marker \n      onClick={() => setIsOpen(!isOpen)} \n      position={location} \n      title={location.title} \n      label={location.label}\n    >\n      { isOpen &&\n        <InfoWindow onCloseClick={() => setIsOpen(false)}>\n          <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n        </InfoWindow>\n      }\n    </Marker>\n  )\n}\n\nconst GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n    return (\n      <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n        {<MarkerList locations={locations}/>}\n      </GoogleMap>\n    )\n  }\n))\n\nconst toKebabCase = (str) => {\n  return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()\n}\n\nconst ReactGoogleMaps = () => {\n  return [\n    <CRow>\n      <CCol xs=\"9\" sm=\"9\" md=\"9\">\n    <CTabs activeTab=\"home\">\n    <CNav variant=\"tabs\">\n      <CNavItem>\n        <CNavLink data-tab=\"home\">\n          ปริมาณข้อมูลรายเดือน\n        </CNavLink>\n      </CNavItem>\n      <CNavItem>\n        <CNavLink data-tab=\"profile\" className={\"text-mute\"}>\n          อัตราอุปกรณ์ไฟฟ้าติด-ดับ\n        </CNavLink>\n      </CNavItem>\n    </CNav>\n    <CTabContent>\n      <CTabPane data-tab=\"home\">\n            <CCard>\n              <CCardHeader>\n                React Google Maps{' '}\n                <ProBadge/>\n                <DocsLink href=\"https://github.com/tomchentw/react-google-maps\"/>\n              </CCardHeader>\n              <CCardBody>\n                <GoogleMapsComponent\n                  key=\"map\"\n                  googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n                  loadingElement={<div style={{height: `100%`}}/>}\n                  containerElement={<div style={{height: `400px`}}/>}\n                  mapElement={<div style={{height: `100%`}}/>}\n                />\n              </CCardBody>\n            </CCard>\n      </CTabPane>\n      <CTabPane data-tab=\"profile\">\n        \n          <CCard>\n            <CCardHeader>\n              React Google Maps{' '}\n              <ProBadge/>\n              <DocsLink href=\"https://github.com/tomchentw/react-google-maps\"/>\n            </CCardHeader>\n            <CCardBody>\n            <CRow>\n              <CCol xs=\"12\" sm=\"6\" md=\"3\">\n                <CCard>\n                  <CCardBody borderColor=\"secondary\">\n                    <CRow>\n                      <CCol xs=\"3\" sm=\"3\" md=\"3\">\n                \n                        <CIcon name=\"cil-location-pin\" size=\"2xl\"/>\n                      \n                      </CCol>\n                      <CCol xs=\"9\" sm=\"9\" md=\"9\">\n                        <CRow><b>District:</b> xxxxxxxxx</CRow>\n                        <CRow><b>Point status Flase:</b> xxxxxxx</CRow>\n                        <CRow><b>Update:</b> xxxxxxx</CRow>\n                      </CCol>\n                      </CRow>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"6\" md=\"3\">\n                    <CCard>\n                      <CCardBody borderColor=\"secondary\">\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n                        laoreet dolore magna aliquam erat volutpat.Ut wisi enim ad minim veniam, quis nostrud exerci tation\n                        ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"6\" md=\"3\">\n                    <CCard>\n                      <CCardBody borderColor=\"secondary\">\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n                        laoreet dolore magna aliquam erat volutpat.Ut wisi enim ad minim veniam, quis nostrud exerci tation\n                        ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"6\" md=\"3\">\n                    <CCard>\n                      <CCardBody borderColor=\"secondary\">\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n                        laoreet dolore magna aliquam erat volutpat.Ut wisi enim ad minim veniam, quis nostrud exerci tation\n                        ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          \n      </CTabPane>\n    </CTabContent>\n  </CTabs>\n  </CCol>\n  <CCol xs=\"3\" sm=\"3\" md=\"3\">\n\n            <CListGroup className={\"margin-top\"}>\n              <CListGroupItem>\n                <b class=\"float-left\">ระบุตัวเลือกค้นหา</b>\n              </CListGroupItem>\n              \n              <CListGroupItem>\n                <CFormGroup className=\"pr-1\">\n                  <CLabel htmlFor=\"exampleInputName2\" className=\"pr-1\">รหัสอุปกรณ์ไฟฟ้า</CLabel>\n                  <CSelect custom name=\"ccmonth\" id=\"ccmonth\">\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </CSelect>\n                </CFormGroup>\n                <CFormGroup className=\"pr-1\">\n                  <CLabel htmlFor=\"exampleInputName2\" className=\"pr-1\">เขตพื้นที่จังหวัด</CLabel>\n                  <CSelect custom name=\"ccmonth\" id=\"ccmonth\">\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </CSelect>\n                </CFormGroup>\n                <CFormGroup className=\"pr-1\">\n                  <CLabel htmlFor=\"exampleInputName2\" className=\"pr-1\">เขตพื้นที่อำเภอ</CLabel>\n                  <CSelect custom name=\"ccmonth\" id=\"ccmonth\">\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </CSelect>\n                </CFormGroup>\n                <CButton size=\"md\" className=\"btn-facebook btn-brand mr-4 mb-4\"><CIcon size=\"sm\" name=\"cil-magnifying-glass\" /> {\"  \"}ค้นหา</CButton>\n              </CListGroupItem>\n              \n            </CListGroup>\n  </CCol>\n  </CRow>\n  ]\n  \n}\n\nexport default ReactGoogleMaps\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/index.js",[],["1539","1540"],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/serviceWorker.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/store.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/App.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/CommonService.js",["1541"],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/polyfill.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheLayout.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/page500/Page500.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/page404/Page404.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/register/Register.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/TheEmailApp.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/login/Login.js",["1542","1543"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CImg,\n  CInvalidFeedback,\n  CAlert,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { requestLogin } from \"../../../actions/authen\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport logos from \"../../../assets/icons/logo_inno_sq.png\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const authen = useSelector((state) => state.authen, shallowEqual);\n  const redirectTo = useSelector((state) => state.redirect.redirectTo);\n  const [errorMsg, setErrorMsg] = useState(authen && authen.error && authen.error.message);\n\n  const validationSchema = () => {\n    return Yup.object().shape({\n      userName: Yup.string().required(\"Username is required\"),\n      password: Yup.string().required(\"Password is required\"),\n    });\n  };\n\n  const validate = (getValidationSchema) => {\n    return (values) => {\n      const validationSchema = getValidationSchema(values);\n      try {\n        validationSchema.validateSync(values, { abortEarly: false });\n        return {};\n      } catch (error) {\n        return getErrorsFromValidationError(error);\n      }\n    };\n  };\n\n  const getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0;\n    return validationError.inner.reduce((errors, error) => {\n      return {\n        ...errors,\n        [error.path]: error.errors[FIRST_ERROR],\n      };\n    }, {});\n  };\n\n  const onSubmit = (values, { setSubmitting }) => {\n    const { userName, password, rememberMe } = values;\n    const rs = dispatch(requestLogin(userName, password, rememberMe)).then(data => {\n      if(data !== undefined && data.status === 401){\n        setErrorMsg(\"username หรือ password ไม่ถูกต้อง\")\n      }\n    });\n    setSubmitting(false);\n  };\n\n  if (redirectTo && redirectTo !== \"/\") {\n    return <Redirect to={redirectTo} push={true} />;\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"4\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CImg\n                    src={logos}\n                    shape=\"rounded\"\n                    fluid\n                    align=\"center\"\n                    className=\"mb-4 d-block\"\n                    width=\"100\"\n                    height=\"100\"\n                  />\n                  <h4 className=\"text-center\">Welcome Back,</h4>\n                  <p className=\"mb-4 text-center text-black-50\">\n                    Sign in to use your account\n                  </p>\n                  <CAlert color=\"danger\" show={!!errorMsg}>\n                    <CIcon size=\"sm\" name=\"cil-warning\" />\n                    <span className=\"ml-2\">{errorMsg}</span>\n                  </CAlert>\n                  <Formik\n                    initialValues={{\n                      userName: \"\",\n                      password: \"\",\n                      rememberMe: false,\n                    }}\n                    validate={validate(validationSchema)}\n                    onSubmit={onSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                      isValid,\n                    }) => (\n                      <CForm\n                        onSubmit={handleSubmit}\n                        noValidate\n                        name=\"signInForm\"\n                      >\n                        <CInputGroup className=\"mb-3\">\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-user\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <CInput\n                            type=\"text\"\n                            id=\"userName\"\n                            placeholder=\"Username\"\n                            autoComplete=\"username\"\n                            valid={!!values.userName}\n                            invalid={touched.userName && !!errors.userName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.userName}\n                          />\n                          <CInvalidFeedback>{errors.userName}</CInvalidFeedback>\n                        </CInputGroup>\n                        <CInputGroup className=\"mb-3\">\n                          <CInputGroupPrepend>\n                            <CInputGroupText>\n                              <CIcon name=\"cil-lock-locked\" />\n                            </CInputGroupText>\n                          </CInputGroupPrepend>\n                          <CInput\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            valid={!!values.password}\n                            invalid={touched.password && !!errors.password}\n                            required\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          <CInvalidFeedback>{errors.password}</CInvalidFeedback>\n                        </CInputGroup>\n                        {/* <CFormGroup\n                          variant=\"checkbox\"\n                          className=\"checkbox mb-3\"\n                        >\n                          <CInputCheckbox\n                            name=\"rememberMe\"\n                            onChange={handleChange}\n                            value={values.rememberMe}\n                          />\n                          <CLabel\n                            variant=\"checkbox\"\n                            className=\"form-check-label\"\n                            htmlFor=\"remember-me\"\n                          >\n                            Remember me\n                          </CLabel>\n                        </CFormGroup> */}\n                        <CButton\n                          type=\"submit\"\n                          color=\"primary\"\n                          block\n                          className=\"mb-3 font-weight-bold\"\n                          disabled={isSubmitting || !isValid}\n                        >\n                          {isSubmitting ? \"Signing In...\" : \"Sign In\"}\n                        </CButton>\n                        {/*<div className=\"d-flex justify-content-center\">\n                          <Link to=\"/reset-password\">\n                            <CButton className=\"px-0 text-black-50 text-decoration-none shadow-none\">\n                              Forgot Password?\n                            </CButton>\n                          </Link>\n                      </div>*/}\n                      </CForm>\n                    )}\n                  </Formik>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/pages/reset-password/ResetPassword.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/sygnet.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/logo-negative.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/assets/icons/logo.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/config/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/actions/authen.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheAside.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheSidebar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/actions/redirect.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/AuthenService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/config/types.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/Template.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/compose/Compose.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/inbox/Inbox.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/email/message/Message.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/_nav.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/redirect.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/sidebar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reducers/authen.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdownTasks.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeader.js",["1544"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CSubheader,\n  CBreadcrumbRouter,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport logos from \"../assets/icons/logo_inno.png\";\n// routes config\nimport routes from \"../routes\";\n\nimport {\n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n} from \"./index\";\n\nconst TheHeader = () => {\n  const dispatch = useDispatch();\n  const sidebarShow = useSelector((state) => state.sidebar.sidebarShow);\n\n  const toggleSidebar = () => {\n    const val = [true, \"responsive\"].includes(sidebarShow)\n      ? false\n      : \"responsive\";\n    dispatch({ type: \"set\", sidebarShow: val });\n  };\n\n  const toggleSidebarMobile = () => {\n    const val = [false, \"responsive\"].includes(sidebarShow)\n      ? true\n      : \"responsive\";\n    dispatch({ type: \"set\", sidebarShow: val });\n  };\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" src={logos} />\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\" />\n\n      <CHeaderNav className=\"px-3\">\n        <TheHeaderDropdownMssg/>\n        <TheHeaderDropdown />\n        \n      </CHeaderNav>\n\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n          routes={routes}\n        />\n      </CSubheader>\n    </CHeader>\n  );\n};\n\nexport default TheHeader;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdownNotif.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdownMssg.js",["1545","1546","1547","1548","1549","1550","1551","1552"],"import React from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { useSelector } from \"react-redux\";\n\nconst TheHeaderDropdownMssg = () => {\n  const itemsCount = 4\n  const name = useSelector((state) => state.authen.name);\n  return (<>\n    ยินดีต้อนรับ {name}\n    {/*<CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-envelope-open\" /><CBadge shape=\"pill\" color=\"info\">{itemsCount}</CBadge>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n        >\n          <strong>You have {itemsCount} messages</strong>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/7.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-success\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">John Doe</small>\n              <small className=\"text-muted float-right mt-1\">Just now</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">\n              <span className=\"fa fa-exclamation text-danger\"></span> Important message\n            </div>\n            <div className=\"small text-muted text-truncate\">\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/6.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-warning\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">Jane Dovve</small>\n              <small className=\"text-muted float-right mt-1\">5 minutes ago</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/5.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-danger\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">Janet Doe</small>\n              <small className=\"text-muted float-right mt-1\">1:52 PM</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n\n        <CDropdownItem href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                  src={'avatars/4.jpg'}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-info\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">Joe Doe</small>\n              <small className=\"text-muted float-right mt-1\">4:03 AM</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\">Lorem ipsum dolor sit amet</div>\n            <div className=\"small text-muted text-truncate\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...\n            </div>\n          </div>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\" className=\"text-center border-top\"><strong>View all messages</strong></CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>*/}\n    </>\n  )\n}\n\nexport default TheHeaderDropdownMssg","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheFooter.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheHeaderDropdown.js",["1553"],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CButton,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CForm,\n  CInvalidFeedback,\n  CRow,\n  CCol,\n  CSelect,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { redirect } from \"src/actions/redirect\";\nimport { Redirect } from \"react-router-dom\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport {\n  changePassword,\n  getUserByAuthen,\n  updateUserProfile,\n} from \"src/services/UserService\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { getPrefixes } from \"src/services/CommonService\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Swal from \"sweetalert2\";\nimport { PATH_IMAGE_PROFILE } from \"src/config\"\n\nconst TheHeaderDropdown = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const redirectTo = useSelector((state) => state.redirect.redirectTo);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [modalChangePassword, setModalChangePassword] = useState(false);\n  const [modalUser, setModalUser] = useState(false);\n  const [prefixes, setPrefixes] = useState([]);\n  const formikRef = useRef();\n  const MySwal = withReactContent(Swal);\n  const imageProfile = useSelector((state) => state.authen.imageProfile);\n  const [pictureProfile, setPictureProfile] = useState(null);\n\n  const editUserProfileSchema = () => {\n    let schema = {\n      username: Yup.string()\n        .min(2, \"Username has to be at least 2 characters\")\n        .required(\"Username is required!\"),\n      prefix: Yup.string().required(\"Prefix is required!\"),\n      firstName: Yup.string().required(\"Firstname is required!\"),\n      lastName: Yup.string().required(\"Lastname is required!\"),\n      email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email is required!\"),\n      lineId: Yup.string().required(\"Line ID is required!\"),\n      mobileNo: Yup.string()\n        .matches(/[0]{1}\\d{9}/, \"Mobile No must contain only numbers\")\n        .required(\"Mobile No is required!\"),\n    };\n    return Yup.object().shape(schema);\n  };\n\n  const addUserSchema = () => {\n    let schema = {\n      newPassword: Yup.string().required(\"กรุณาระบุ password\"),\n    };\n\n    return Yup.object().shape(schema);\n  };\n\n  const handleChangePassword = (values, { resetForm }) => {\n    changePassword(accessToken, values.newPassword)\n      .then((response) => {\n        if (response.status === 200) {\n          setModalChangePassword(!modalChangePassword);\n        } else {\n        }\n      })\n      .then(() => {});\n  };\n\n  const handleSignOut = (e) => {\n    e.preventDefault();\n    dispatch(redirect(\"/\"));\n    dispatch(setLoginExpired());\n  };\n\n  const handleEditProfile = (values, { resetForm }) => {\n    const { prefix, firstName, lastName, email, lineId, mobileNo } = values;\n\n    let body = {\n      prefix,\n      firstName,\n      lastName,\n      email,\n      lineId,\n      mobileNo,\n    };\n    \n    updateUserProfile(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          MySwal.fire({\n            title: \"Success\",\n            text: \"Edit user information successfully  \",\n            icon: \"success\",\n            didClose: () => {\n              setModalUser(false);\n            },\n          });\n        } else {\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModalUser(false);\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm(initialValues);\n      });\n  };\n\n  const editUser = () => {\n    getPrefixes(accessToken).then(({ status, data }) => {\n      return status === 200 ? setPrefixes(data) : setPrefixes([]);\n    });\n\n    getUserByAuthen(accessToken).then((user) => {\n      formikRef.current.setFieldValue(\"username\", user.data.username);\n      formikRef.current.setFieldValue(\"prefix\", user.data.prefixId);\n      formikRef.current.setFieldValue(\"firstName\", user.data.firstName);\n      formikRef.current.setFieldValue(\"lastName\", user.data.lastName);\n      formikRef.current.setFieldValue(\n        \"email\",\n        user.data.email === null ? \"\" : user.data.email\n      );\n      formikRef.current.setFieldValue(\n        \"lineId\",\n        user.data.lineId === null ? \"\" : user.data.lineId\n      );\n      formikRef.current.setFieldValue(\n        \"mobileNo\",\n        user.data.mobileNo === null ? \"\" : user.data.mobileNo\n      );\n      setModalUser(!modalUser);\n    });\n  };\n\n  useEffect(() => {\n    setPictureProfile((imageProfile === \"\" || imageProfile === null) ? \"/avatars/avatar.jpg\" : PATH_IMAGE_PROFILE + \"/\" + imageProfile);\n  },[])\n  \n  if (!isAuth) {\n    return <Redirect to={redirectTo} push={true} />;\n  }\n  \n\n  return (\n    \n     <>\n      <CDropdown inNav className=\"c-header-nav-items mx-2\" direction=\"down\">\n        <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n          <div className=\"c-avatar\">\n          \n            <CImg\n              src={pictureProfile}\n              className=\"c-avatar-img\"\n            />\n          </div>\n        </CDropdownToggle>\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          {/*<CDropdownItem header tag=\"div\" color=\"light\" className=\"text-center\">\n          <strong>Account</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-bell\" className=\"mfe-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"mfs-auto\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"mfs-auto\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-task\" className=\"mfe-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"mfs-auto\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"mfs-auto\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem header tag=\"div\" color=\"light\" className=\"text-center\">\n          <strong>Settings</strong>\n        </CDropdownItem>*/}\n          <CDropdownItem>\n            <div onClick={() => setModalChangePassword(!modalChangePassword)}>\n              <CIcon name=\"cil-user\" className=\"mfe-2\" />\n              เปลี่ยน password\n            </div>\n          </CDropdownItem>\n          <CDropdownItem>\n            <div onClick={() => editUser()}>\n              <CIcon name=\"cil-user\" className=\"mfe-2\" />\n              แก้ไขข้อมูลส่วนตัว\n            </div>\n          </CDropdownItem>\n          {/*<CDropdownItem>\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" />\n          Settings\n        </CDropdownItem>*/}\n          <CDropdownItem onClick={handleSignOut}>\n            <CIcon name=\"cil-account-logout\" className=\"mfe-2\" />\n            Sign out\n          </CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n\n      <CModal\n        show={modalChangePassword}\n        onClose={() => setModalChangePassword(!modalChangePassword)}\n        size=\"sm\"\n      >\n        <Formik\n          enableReinitializing={true}\n          initialValues={{\n            newPassword: \"\",\n          }}\n          validationSchema={addUserSchema}\n          onSubmit={handleChangePassword}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            handleReset,\n          }) => (\n            <CForm onSubmit={handleSubmit} noValidate>\n              <CModalHeader closeButton>\n                <CModalTitle>Change password</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <CFormGroup>\n                  <CLabel>New password</CLabel>\n                  <CInput\n                    type=\"password\"\n                    name=\"newPassword\"\n                    valid={!!values.newPassword}\n                    invalid={touched.newPassword && !!errors.newPassword}\n                    value={values.newPassword}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <CInvalidFeedback>{errors.newPassword}</CInvalidFeedback>\n                </CFormGroup>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"primary\" type=\"submit\">\n                  Submit\n                </CButton>{\" \"}\n                <CButton\n                  color=\"secondary\"\n                  onClick={() => setModalChangePassword(!modalChangePassword)}\n                >\n                  Cancel\n                </CButton>\n              </CModalFooter>\n            </CForm>\n          )}\n        </Formik>\n      </CModal>\n      <Formik\n        innerRef={formikRef}\n        enableReinitializing={true}\n        initialValues={{\n          username: \"\",\n          prefix: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          lineId: \"\",\n          mobileNo: \"\",\n        }}\n        validationSchema={editUserProfileSchema}\n        onSubmit={handleEditProfile}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        }) => (\n          <CForm onSubmit={handleSubmit} noValidate>\n            <CModal size=\"lg\" centered show={modalUser} closeOnBackdrop={true}>\n              <CModalBody className=\"p-4\">\n                <CRow>\n                  <CCol xs={12} md={4} lg={3}>\n                    <h4>แก้ไขข้อมูลส่วนตัว</h4>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol>\n                    <CFormGroup>\n                      <CCol md=\"3\">\n                        <CLabel className=\"font-weight-bold\">Username:</CLabel>\n                      </CCol>\n                      <CCol xs={12} md={9} lg={8}>\n                        <CInput\n                          id=\"username\"\n                          name=\"username\"\n                          placeholder=\"\"\n                          valid={!!values.username}\n                          invalid={touched.username && !!errors.username}\n                          value={values.username}\n                          disabled={true}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        <CInvalidFeedback>{errors.username}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs={12} md={4} lg={4}>\n                    <CFormGroup>\n                      <CCol>\n                        <CLabel\n                          className=\"font-weight-bold\"\n                          htmlFor=\"text-input\"\n                        >\n                          คำนำหน้า:\n                        </CLabel>\n                      </CCol>\n                      <CCol>\n                        <CSelect\n                          custom\n                          name=\"prefix\"\n                          id=\"prefix\"\n                          valid={!!values.prefix}\n                          invalid={touched.prefix && !!errors.prefix}\n                          value={values.prefix}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        >\n                          <option value=\"\">Please select</option>\n                          {prefixes.map((prefix) => (\n                            <option key={prefix.key} value={prefix.key}>\n                              {prefix.value}\n                            </option>\n                          ))}\n                        </CSelect>\n                        <CInvalidFeedback>{errors.prefix}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs={12} md={4} lg={4}>\n                    <CFormGroup>\n                      <CCol>\n                        <CLabel\n                          className=\"font-weight-bold\"\n                          htmlFor=\"text-input\"\n                        >\n                          ชื่อ:\n                        </CLabel>\n                      </CCol>\n                      <CCol>\n                        <CInput\n                          id=\"firstName\"\n                          name=\"firstName\"\n                          valid={!!values.firstName}\n                          invalid={touched.firstName && !!errors.firstName}\n                          placeholder=\"\"\n                          value={values.firstName}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        <CInvalidFeedback>{errors.firstName}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs={12} md={4} lg={4}>\n                    <CFormGroup>\n                      <CCol>\n                        <CLabel\n                          className=\"font-weight-bold\"\n                          htmlFor=\"text-input\"\n                        >\n                          นามสกุล:\n                        </CLabel>\n                      </CCol>\n                      <CCol>\n                        <CInput\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          placeholder=\"\"\n                          valid={!!values.lastName}\n                          invalid={touched.lastName && !!errors.lastName}\n                          value={values.lastName}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        <CInvalidFeedback>{errors.lastName}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs={12} md={4} lg={4}>\n                    <CFormGroup>\n                      <CCol>\n                        <CLabel\n                          className=\"font-weight-bold\"\n                          htmlFor=\"text-input\"\n                        >\n                          Email:\n                        </CLabel>\n                      </CCol>\n                      <CCol>\n                        <CInput\n                          id=\"email\"\n                          name=\"email\"\n                          placeholder=\"\"\n                          valid={!!values.email}\n                          invalid={touched.email && !!errors.email}\n                          value={values.email}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        <CInvalidFeedback>{errors.email}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs={12} md={4} lg={4}>\n                    <CFormGroup>\n                      <CCol>\n                        <CLabel\n                          className=\"font-weight-bold\"\n                          htmlFor=\"text-input\"\n                        >\n                          Line ID:\n                        </CLabel>\n                      </CCol>\n                      <CCol>\n                        <CInput\n                          id=\"lineId\"\n                          name=\"lineId\"\n                          placeholder=\"\"\n                          valid={!!values.lineId}\n                          invalid={touched.lineId && !!errors.lineId}\n                          value={values.lineId}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        <CInvalidFeedback>{errors.lineId}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol xs={12} md={4} lg={4}>\n                    <CFormGroup>\n                      <CCol>\n                        <CLabel\n                          className=\"font-weight-bold\"\n                          htmlFor=\"text-input\"\n                        >\n                          Mobile No:\n                        </CLabel>\n                      </CCol>\n                      <CCol>\n                        <TextMask\n                          placeholder=\"\"\n                          mask={[\n                            /[0]/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                            /\\d/,\n                          ]}\n                          id=\"mobileNo\"\n                          name=\"mobileNo\"\n                          Component={InputAdapter}\n                          className={`form-control ${\n                            errors.mobileNo && touched.mobileNo\n                              ? \"is-invalid\"\n                              : \"\"\n                          } ${values.mobileNo ? \"is-valid\" : \"\"}`}\n                          value={values.mobileNo}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        <CInvalidFeedback>{errors.mobileNo}</CInvalidFeedback>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n              </CModalBody>\n              <CModalFooter>\n                <CButton\n                  type=\"reset\"\n                  color=\"light\"\n                  onClick={(e) => setModalUser(!modalUser)}\n                >\n                  Cancel\n                </CButton>\n                <CButton type=\"submit\" color=\"primary\">\n                  Confirm\n                </CButton>{\" \"}\n              </CModalFooter>\n            </CModal>\n          </CForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default TheHeaderDropdown;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/containers/TheContent.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/routes.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/mapping-overpass/MappingList.js",["1554"],"import React, { useState, useEffect } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CButtonGroup,\n  CForm,\n  CLabel,\n  CSelect,\n  CFormGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CCollapse,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { LOGIN_FAILED_CODE } from \"src/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getMappingAddress } from \"src/services/CommonService\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport { redirect } from \"../../actions/redirect\";\nimport {\n  getsearchGroupMappingOverpasses,\n  getMappingOverPassAll,\n  deleteMappingOverpasses,\n} from \"src/services/MappingService\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MySwal = withReactContent(Swal);\n\nconst MappingList = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [groupId, setGroupId] = useState(\"\");\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [id, setId] = useState(\"\");\n  const [deleteGroupName, setDeleteGroupName] = useState(\"\");\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [sorterValue, setSorterValue] = useState();\n  const [provinces, setProvinces] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [groupList, setGroupList] = useState([]);\n  const [reload, setReload] = useState(false);\n  const history = useHistory();\n\n  const pageChange = (newPage) => {\n    if (newPage - 1 >= 0 && page !== newPage - 1) {\n      setPage(newPage - 1);\n    }\n  };\n\n  const showDeleteModal = (item) => {\n    setId(item.groupId);\n    setDeleteGroupName(item.groupName);\n    setDeleteModal(!deleteModal);\n  };\n\n  const handleClosedModal = () => {\n    setDeleteModal(false);\n  };\n\n  const handleSearch = () => {\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      filter: {\n        id: groupId,\n      },\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getsearchGroupMappingOverpasses(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteOverpass = (e) => {\n    setDeleteLoading(true);\n    const body = new FormData();\n    body.append(\"id\", id);\n    deleteMappingOverpasses(accessToken, body).then((response) => {\n      if (response.status === 200) {\n        setDeleteLoading(false);\n        setReload(reload ? false : true);\n        MySwal.fire({\n          title: \"Success\",\n          text: \"ลบกลุ่มสำเร็จ  \",\n          icon: \"success\",\n          didClose: () => {\n            setDeleteModal(false);\n            handleSearch();\n          },\n        });\n      } else {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Failed\",\n          text: \"ไม่สามารถลบได้ เนื่องจากมีผู้ใช้งานผูกกับกลุ่มนี้อยู่\",\n          icon: \"error\",\n          didClose: () => {\n            setDeleteModal(false);\n          },\n        });\n      }\n    });\n  };\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [...details, index];\n    }\n    setDetails(newDetails);\n  };\n\n  useEffect(() => {\n    if (provinces.length === 0) {\n      getMappingAddress(accessToken).then(({ status, data }) => {\n        return status === 200 ? setProvinces(data) : setProvinces([]);\n      });\n    }\n\n    getMappingOverPassAll(accessToken).then(({ status, data }) => {\n      return status === 200 ? setGroupList(data) : setGroupList([]);\n    });\n\n    handleSearch();\n  }, [reload]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const getoAdd = () => {\n    dispatch(redirect(\"/mapping-overpass/add\"));\n    history.push({\n      pathname: \"/mapping-overpass/add\",\n    });\n  };\n\n  const getoEdit = (item) => {\n    dispatch(redirect(`/mapping-overpass/edit/${item.groupId}`));\n    history.push({\n      pathname: `/mapping-overpass/edit/${item.groupId}`,\n      //data: { 'mode': 'edit', 'data': item }\n    });\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={6} md={6} lg={6} className=\"mb-3 d-flex align-items-center\">\n          <h2>จับกลุ่มสะพานลอย</h2>\n        </CCol>\n        <CCol\n          xs={6}\n          className=\"d-block d-sm-flex align-items-center justify-content-end mb-4\"\n        >\n          <CButton color=\"primary\" onClick={() => getoAdd()}>\n            <CIcon size=\"sm\" name=\"cil-user-plus\" className=\" mr-1\" />\n            เพิ่มกลุ่มสะพานลอย\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow className=\"justify-content-center\">\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol className=\"mb-3 font-weight-bold\">ค้นหา</CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"province\">ชื่อกลุ่ม</CLabel>\n                    <CSelect\n                      custom\n                      name=\"group\"\n                      id=\"group\"\n                      onChange={(e) => setGroupId(e.target.value)}\n                    >\n                      <option value=\"\"></option>\n                      {groupList.map((g) => (\n                        <option key={g.id} value={g.id}>\n                          {g.groupName}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"secondary\"\n                    className=\"px-4 text-black-50\"\n                  >\n                    Reset\n                  </CButton>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"primary\"\n                    className=\"ml-3 px-3\"\n                    onClick={handleSearch}\n                  >\n                    Search\n                    <CIcon size=\"sm\" name=\"cil-search\" className=\"ml-2\" />\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                loading={loading}\n                items={items}\n                fields={[\n                  {\n                    key: \"groupName\",\n                    _style: { width: \"89%\" },\n                    label: \"ชื่อกลุ่ม\",\n                  },\n                  {\n                    key: \"show_details\",\n                    label: \"\",\n                    _style: { width: \"1%\" },\n                    filter: false,\n                  },\n                  {\n                    key: \"edit\",\n                    label: \"\",\n                    _style: { width: \"10%\" },\n                    filter: false,\n                  },\n                ]}\n                scopedSlots={{\n                  show_details: (item) => {\n                    return (\n                      <td className=\"py-2\">\n                        <CButton\n                          color=\"primary\"\n                          variant=\"outline\"\n                          shape=\"square\"\n                          size=\"sm\"\n                          onClick={() => {\n                            toggleDetails(item.groupId);\n                          }}\n                        >\n                          {details.includes(item.groupId) ? \"Hide\" : \"Show\"}\n                        </CButton>\n                      </td>\n                    );\n                  },\n                  edit: (item) => {\n                    return (\n                      <td className=\"py-2\">\n                        <CButtonGroup className=\"mr-2\">\n                          <CButton\n                            size=\"sm\"\n                            className=\"btn-github btn-brand mr-1 mb-1\"\n                            onClick={() => getoEdit(item)}\n                          >\n                            <CIcon size=\"sm\" name=\"cil-pencil\" />\n                          </CButton>\n                          <CButton\n                            size=\"sm\"\n                            className=\"btn-youtube btn-brand mr-1 mb-1\"\n                            onClick={() => showDeleteModal(item)}\n                          >\n                            <CIcon size=\"sm\" name=\"cil-trash\" />\n                          </CButton>\n                        </CButtonGroup>\n                      </td>\n                    );\n                  },\n                  details: (item) => {\n                    return (\n                      <CCollapse show={details.includes(item.groupId)}>\n                        <CCardBody>\n                          <CDataTable\n                            items={item.overpasses}\n                            fields={[\n                              { key: \"id\", label: \"ID\", filter: false },\n                              {\n                                key: \"name\",\n                                label: \"ชื่อสะพานลอย\",\n                                filter: false,\n                              },\n                              {\n                                key: \"location\",\n                                label: \"สถานที่\",\n                                filter: false,\n                              },\n                              {\n                                key: \"districtName\",\n                                label: \"แขวง/ตำบล\",\n                                filter: false,\n                              },\n                              {\n                                key: \"amphurName\",\n                                label: \"เขต/อำเภอ\",\n                                filter: false,\n                              },\n                              {\n                                key: \"provinceName\",\n                                label: \"จังหวัด\",\n                                filter: false,\n                              },\n                            ]}\n                          ></CDataTable>\n                        </CCardBody>\n                      </CCollapse>\n                    );\n                  },\n                }}\n                hover\n                itemsPerPage={itemsPerPage}\n                sorter\n                sorterValue={sorterValue}\n                onSorterValueChange={setSorterValue}\n              />\n              <CRow>\n                <CCol xs={12} md={6}>\n                  <CForm inline className=\"mt-2\">\n                    <CLabel className=\"mr-2\">Show</CLabel>{\" \"}\n                    <CSelect\n                      size=\"sm\"\n                      value={itemsPerPage}\n                      onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                    </CSelect>\n                    <CLabel className=\"ml-2\">entries</CLabel>\n                  </CForm>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CPagination\n                    activePage={page + 1}\n                    onActivePageChange={pageChange}\n                    pages={Math.ceil(totalRecords / itemsPerPage)}\n                    doubleArrows={false}\n                    align=\"end\"\n                  />\n                </CCol>\n              </CRow>\n\n              <CModal\n                centered\n                show={deleteModal}\n                closeOnBackdrop={false}\n                onClosed={handleClosedModal}\n              >\n                {deleteLoading && (\n                  <div className={deleteLoading ? \"spinner-container\" : \"\"}>\n                    <div className=\"position-absolute spinner-center\">\n                      <div className=\"sk-grid mx-auto\">\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                      </div>\n                      <div className=\"text-center\">Loading....</div>\n                    </div>\n                  </div>\n                )}\n                <CModalHeader>\n                  <h5>คุณต้องการลบ ?</h5>\n                </CModalHeader>\n                <CModalBody>\n                  ลบกลุ่ม <strong>{deleteGroupName}</strong>\n                </CModalBody>\n                <CModalFooter>\n                  <CButton color=\"light\" onClick={handleClosedModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    color=\"danger\"\n                    onClick={() => {\n                      handleDeleteOverpass();\n                    }}\n                    disabled={deleteLoading}\n                  >\n                    Confirm\n                  </CButton>{\" \"}\n                </CModalFooter>\n              </CModal>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default MappingList;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/maps/Maps.js",["1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570"],"import React, { useEffect, useState, useRef, useMemo, useLayoutEffect } from \"react\";\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CNavLink,\n  CRow,\n  CCol,\n  CNav,\n  CNavItem,\n  CTabs,\n  CTabContent,\n  CTabPane,\n  CListGroup,\n  CListGroupItem,\n  CFormGroup,\n  CLabel,\n  CSelect,\n  CButton,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport \"./style.css\";\nimport { useSelector } from \"react-redux\";\nimport { getMappingAddress } from \"src/services/CommonService\";\nimport {\n  searchOverpassesByUserId,\n} from \"src/services/OverpassService\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Swal from \"sweetalert2\";\nimport { API_KEY_GOOGLE_MAP } from \"../../config\"\nimport ApexCharts from 'apexcharts'\nimport SemiCircleProgressBar from \"react-progressbar-semicircle\";\n\n// To use the Google Maps JavaScript API, you must register your app project on the Google API Console and get a Google API key which you can add to your app\n\nconst ReactGoogleMaps = () => {\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [provinces, setProvinces] = useState([]);\n  const [amphurs, setAmphurs] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [selectDistrict, setSelectDistrict] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [overpasses, setOverpasses] = useState([]);\n  const [overpassDetails, setOverpassDetails] = useState([]);\n  const [graphDetail, setGraphDetail] = useState([]);\n\n  // local\n  //const apiKey = \"AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA\";\n\n  const [defaultCenter, setDefaultCenter] = useState({\n    lat: parseFloat(13.8583),\n    lng: parseFloat(100.4688)\n  });\n  const [modal, setModal] = useState(false);\n  const provinceRef = useRef();\n  const amphurRef = useRef();\n  const districtRef = useRef();\n  const overpassRef = useRef();\n  const defaultZoom = 11;\n\n  const MySwal = withReactContent(Swal);\n\n  const handleSearch = () => {\n    const body = new FormData();\n    body.append(\"provinceId\", provinceRef.current.value);\n    body.append(\"amphurId\", amphurRef.current.value);\n    body.append(\"districtId\", districtRef.current.value);\n    body.append(\"overpassId\", overpassRef.current.value);\n    searchOverpassesByUserId(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          //setLoading(false);\n          setLocationData(response.data);\n          setOverpassDetails(response.data);\n          if (response.data.length === 0) {\n            MySwal.fire({\n              //title: \"Success\",\n              text: \"ไม่พบข้อมูลในระบบ\",\n              icon: \"success\",\n              didClose: () => {\n                //setModal(false);\n              },\n            });\n          }\n        } else {\n          //setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              //setModal(false);\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm();\n      });\n  };\n\n  const MarkerList = () => {\n    return locations.map((location, index) => {\n      return (\n        <MarkerWithInfoWindow key={index.toString()} location={location} />\n      );\n    });\n  };\n\n  const MarkerWithInfoWindow = ({ location }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    return (\n      <Marker\n        onClick={() => setIsOpen(!isOpen)}\n        position={location}\n        title={location.title}\n        label={location.label}\n      >\n        {isOpen && (\n          <InfoWindow onCloseClick={() => setIsOpen(false)}>\n            <CNavLink href={location.www} target=\"_blank\">\n              {location.title}\n            </CNavLink>\n          </InfoWindow>\n        )}\n      </Marker>\n    );\n  };\n\n  const GoogleMapsComponent = withScriptjs(\n    withGoogleMap(() => {\n      return (\n        <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n          {<MarkerList locations={locations} />}\n        </GoogleMap>\n      );\n    })\n  );\n\n  const googleMap = useMemo(() => {\n    return (\n      <GoogleMapsComponent\n        key=\"map\"\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${API_KEY_GOOGLE_MAP}`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `400px` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    );\n  }, [locations]);\n\n  const selectProvince = (id) => {\n    let a = provinces.find((val) => {\n      return val.key == id;\n    });\n    setAmphurs(a ? a.amphur : []);\n  };\n\n  const selectAmphur = (id) => {\n    let ds = amphurs.find((val) => {\n      return val.key == id;\n    });\n    setDistricts(ds ? ds.district : []);\n  };\n\n  const setLocationData = (data) => {\n    let response = [];\n    data.forEach((item) => {\n      if (response.length == 0)\n        setDefaultCenter({\n          lat: parseFloat(item.latitude),\n          lng: parseFloat(item.longtitude),\n        });\n      response[response.length] = {\n        lat: parseFloat(item.latitude),\n        lng: parseFloat(item.longtitude),\n        label: \"S\",\n        draggable: false,\n        title: item.name,\n      };\n    });\n    setLocations(response);\n  };\n\n  const xxx = () => {\n    var options = {\n      series: [76],\n      chart: {\n      type: 'radialBar',\n      offsetY: -20,\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {\n      radialBar: {\n        startAngle: -90,\n        endAngle: 90,\n        track: {\n          background: \"#e7e7e7\",\n          strokeWidth: '97%',\n          margin: 5, // margin is in pixels\n          dropShadow: {\n            enabled: true,\n            top: 2,\n            left: 0,\n            color: '#999',\n            opacity: 1,\n            blur: 2\n          }\n        },\n        dataLabels: {\n          name: {\n            show: false\n          },\n          value: {\n            offsetY: -2,\n            fontSize: '22px'\n          }\n        }\n      }\n    },\n    grid: {\n      padding: {\n        top: -10\n      }\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shade: 'light',\n        shadeIntensity: 0.4,\n        inverseColors: false,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 50, 53, 91]\n      },\n    },\n    labels: ['Average Results'],\n    };\n    var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n    //console.log(chart.render());\n    return chart.render()\n    \n  }\n\n  const getOverpassDetailsPage = useMemo(() => {\n    let buffer = [];\n    let row = [];\n    let key = 0;\n    let j = 0;\n    overpassDetails.forEach((item, i) => {\n      let details = [];\n      let color = \"\";\n      let text = \"\"\n      if (item.overpassStatus === \"ON\") {\n        color = \"success\";\n        text = \"text-success\"\n      } else if (item.overpassStatus === \"OFF\") {\n        color = \"danger\";\n        text = \"text-danger\"\n      } else if (item.overpassStatus === \"WARNING\") {\n        color = \"warning\";\n        text = \"text-warning\"\n      } else {\n        color = \"secondary\";\n        text = \"text-secondary\"\n      }\n\n      let status = [];\n      status.push(<b key={key++}>สถานะ: </b>);\n      \n      if (item.overpassStatus !== undefined && item.overpassStatus !== null && item.overpassStatus !== \"\") {\n        status.push(<i className={text} key={key++}><b key={key++}>{item.overpassStatus}</b></i>);\n      } else {\n        status.push(<i key={key++}>ไม่มีการติดตั้งอุปกรณ์</i>);\n      }\n      details.push(status);\n      details.push(<br key={key++}/>);\n\n      if (item.location !== null && item.location !== \"\") {\n        details.push(<b key={key++}>สถานที่: </b>);\n        details.push(item.location);\n        details.push(<br key={key++} />);\n      }\n      if (item.districtName !== null && item.districtName != \"\") {\n        details.push(<b key={key++}>แขวง/ตำบล: </b>);\n        details.push(item.districtName);\n        details.push(<br key={key++} />);\n      }\n      if (item.amphurName !== null && item.amphurName != \"\") {\n        details.push(<b key={key++}>เขต/อำเภอ: </b>);\n        details.push(item.amphurName);\n        details.push(<br key={key++} />);\n      }\n      if (item.provinceName !== null && item.provinceName != \"\") {\n        details.push(<b key={key++}>จังหวัด: </b>);\n        details.push(item.provinceName);\n        details.push(<br key={key++}/>);\n      }\n      let percent = 0;\n      let textDisplay = \"\";\n      let stroke = \"#e55353\";\n      textDisplay = percent + \"/\" + item.lightBulbCnt + \" หลอด\";\n      if(item.overpassStatus === 'ON'){\n        percent = 100;\n        textDisplay = item.lightBulbCnt + \"/\" + item.lightBulbCnt + \" หลอด\";\n        stroke = \"#02B732\";\n      }else if(item.overpassStatus === 'WARNING'){\n        let full = item.lightBulbCnt * item.lightBulb.watt;\n        percent = Math.floor(item.watt / item.lightBulb.watt)\n        console.log(Math.floor(65.1));\n        textDisplay = percent + \"/\" + item.lightBulbCnt + \" หลอด\";\n        stroke = \"#f9b115\"\n      }\n      buffer.push(\n        <CCol xs=\"12\" sm=\"6\" md=\"4\" key={key++}>\n          <CCard accentColor={color} key={key++}>\n            <CCardHeader key={key++}>\n              <b key={key++}>{item.name}</b>\n            </CCardHeader>\n            <CCardBody key={key++}>\n            <SemiCircleProgressBar percentage={percent} showPercentValue showPercentValue={false} stroke={stroke} />\n            <div style={{textAlign: \"center\"}}>{textDisplay}</div><br/>\n              {details}</CCardBody>\n          </CCard>\n        </CCol>\n      );\n      \n      j++\n      if (j === 3) {\n        row.push(<CRow key={key++}>{buffer}</CRow>);\n        buffer = [];\n        j = 0;\n      }\n    });\n    if(buffer.length > 0){\n      row.push(<CRow key={key++}>{buffer}</CRow>);\n      buffer = [];\n    }\n    return row;\n  }, [overpassDetails]);\n\n  useLayoutEffect(() => {\n    //console.log(document.getElementById(\"#chart\"))\n  })\n  const ccc = () => {\n    console.log(document.getElementById(\"#chart\"))\n  }\n  useEffect(() => {\n    if (provinces.length === 0) {\n      getMappingAddress(accessToken).then(({ status, data }) => {\n        return status === 200 ? setProvinces(data) : setProvinces([]);\n      });\n    }\n    const body = new FormData();\n    searchOverpassesByUserId(accessToken, body).then(({ status, data }) => {\n      if (status === 200) {\n        setLocationData(data);\n        setOverpasses(data);\n        setOverpassDetails(data);\n      } else {\n        setLocationData([]);\n      }\n    });\n    \n  }, []);\n\n  return <>\n  <div id=\"chart\">\n</div>\n    <CRow>\n      <CCol xs=\"12\" md=\"9\" sm=\"12\" className=\"mb-4\">\n        <CTabs activeTab=\"home\">\n          <CNav variant=\"tabs\">\n            <CNavItem>\n              <CNavLink data-tab=\"home\">แผนที่จุดสะพานลอย</CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink data-tab=\"profile\" className={\"text-mute\"}>\n                รายละเอียดสะพานลอยตามพื้นที่\n              </CNavLink>\n            </CNavItem>\n          </CNav>\n          <CTabContent>\n            <CTabPane data-tab=\"home\">\n              <CCard>\n                <CCardBody>{googleMap}</CCardBody>\n              </CCard>\n            </CTabPane>\n            <CTabPane data-tab=\"profile\">\n              <CCard>\n                <CCardBody>{getOverpassDetailsPage}{ccc()}</CCardBody>\n              </CCard>\n            </CTabPane>\n          </CTabContent>\n        </CTabs>\n      </CCol>\n      <CCol xs=\"12\" sm=\"12\" md=\"3\">\n        <CListGroup className={\"margin-top\"}>\n          <CListGroupItem>\n            <b className=\"float-left\">ระบุตัวเลือกค้นหา</b>\n          </CListGroupItem>\n\n          <CListGroupItem>\n            <CFormGroup className=\"pr-1\">\n              <CLabel htmlFor=\"exampleInputName1\" className=\"pr-1\">\n                สะพานลอย\n              </CLabel>\n              <CSelect\n                custom\n                name=\"overpass\"\n                id=\"overpass\"\n                innerRef={overpassRef}\n              >\n                <option value=\"\">Please select</option>\n                {overpasses.map((o) => (\n                  <option key={o.id} value={o.id}>\n                    {o.name}\n                  </option>\n                ))}\n              </CSelect>\n            </CFormGroup>\n            <CFormGroup className=\"pr-1\">\n              <CLabel htmlFor=\"exampleInputName2\" className=\"pr-1\">\n                เขตพื้นที่จังหวัด\n              </CLabel>\n              <CSelect\n                custom\n                name=\"province\"\n                id=\"province\"\n                innerRef={provinceRef}\n                onChange={(e) => {\n                  selectProvince(e.target.value);\n                }}\n              >\n                <option value=\"\">Please select</option>\n                {provinces.map((province) => (\n                  <option key={province.key} value={province.key}>\n                    {province.value.toLowerCase()}\n                  </option>\n                ))}\n              </CSelect>\n            </CFormGroup>\n            <CFormGroup className=\"pr-1\">\n              <CLabel htmlFor=\"amphur\" className=\"pr-1\">\n                เขต/อำเภอ\n              </CLabel>\n              <CSelect\n                custom\n                name=\"amphur\"\n                id=\"amphur\"\n                innerRef={amphurRef}\n                onChange={(e) => {\n                  selectAmphur(e.target.value);\n                }}\n              >\n                <option value=\"\">Please select</option>\n                {amphurs.map((amphur) => (\n                  <option key={amphur.key} value={amphur.key}>\n                    {amphur.value.toLowerCase()}\n                  </option>\n                ))}\n              </CSelect>\n            </CFormGroup>\n            <CFormGroup className=\"pr-1\">\n              <CLabel htmlFor=\"amphur\" className=\"pr-1\">\n                แขวง/ตำบล\n              </CLabel>\n              <CSelect\n                custom\n                name=\"district\"\n                id=\"district\"\n                innerRef={districtRef}\n                onChange={(e) => {\n                  setSelectDistrict(e.target.value);\n                }}\n              >\n                <option value=\"\">Please select</option>\n                {districts.map((district) => (\n                  <option key={district.key} value={district.key}>\n                    {district.value.toLowerCase()}\n                  </option>\n                ))}\n              </CSelect>\n            </CFormGroup>\n            <CButton\n              size=\"md\"\n              className=\"btn-facebook btn-brand mr-4 mb-4\"\n              onClick={handleSearch}\n            >\n              <CIcon size=\"sm\" name=\"cil-magnifying-glass\" /> {\"  \"}ค้นหา\n            </CButton>\n          </CListGroupItem>\n        </CListGroup>\n      </CCol>\n    </CRow>\n  </>\n};\n\nexport default ReactGoogleMaps;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/mapping-overpass/MappingForms.js",["1571","1572","1573","1574"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow,\n  CSwitch,\n  CDataTable,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useSelector } from \"react-redux\";\nimport { capitalize } from \"src/utils/common\";\nimport { getMappingAddress } from \"src/services/CommonService\";\nimport {\n  getOverpassesByCond,\n} from \"src/services/OverpassService\";\nimport {\n  insertMappingOverpasses,\n  updateMappingOverpasses,\n  getOverpassByGroupId,\n} from \"src/services/MappingService\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport { Redirect } from \"react-router-dom\";\n\nconst MySwal = withReactContent(Swal);\n\nconst MappingForms = ({ match, history }) => {\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [province, setProvince] = useState(\"\");\n  const [amphur, setAmphur] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [provinces, setProvinces] = useState([]);\n  const [amphurs, setAmphurs] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [selectedOverpass, setSelectedOverpass] = useState([]);\n  const [selectedOverpassTmp, setSelectedOverpassTmp] = useState([]);\n  const [selectedValue, setSelectedValue] = useState([]);\n  const [options, setOptions] = useState([]);\n  const formikRef = useRef();\n  const selectProvinceRef = useRef();\n  const selectAmphurRef = useRef();\n  const selectDistrictRef = useRef();\n  const checkallOverpass = useRef();\n  const [disableDraft, setDisableDraft] = useState(true);\n  const [disableConfirm, setDisableConfirm] = useState(true);\n  const multiselectRef = React.createRef();\n  const isEdit = match.params.mode === \"edit\" ? true : false;\n  const [reload, setReload] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const userRole = useSelector((state) => state.authen.role);\n  \n  const schema = () => {\n    let schema = {\n      groupName: Yup.string().required(\"Name is required!\"),\n      lineNotifyToken: Yup.string().required(\"Line Notify token is required!\"),\n      email: Yup.string().required(\"Email is required!\"),\n    };\n\n    return Yup.object().shape(schema);\n  };\n\n  const handleAdd = (values) => {\n    \n    const body = {\n      groupId: values.groupId,\n      overpasses: selectedOverpass,\n      groupName: values.groupName,\n      lineNotiToken: values.lineNotifyToken,\n      email: values.email,\n    };\n    console.log(body);\n    //return false;\n    if (!isEdit) {\n      insertMappingOverpasses(accessToken, body)\n        .then((response) => {\n          if (response.status === 200) {\n            MySwal.fire({\n              title: \"Success\",\n              text: \"Mapping กลุ่มสะพานลอยสำเร็จ  \",\n              icon: \"success\",\n              didClose: () => {\n                history.push(\"/mapping-overpass\");\n              },\n            });\n          } else {\n            MySwal.fire({\n              title: \"Failed\",\n              text: response.data,\n              icon: \"error\",\n              didClose: () => {},\n            });\n          }\n        })\n        .then(() => {});\n    } else {\n      updateMappingOverpasses(accessToken, body)\n        .then((response) => {\n          if (response.status === 200) {\n            MySwal.fire({\n              title: \"Success\",\n              text: \"Mapping กลุ่มสะพานลอยสำเร็จ  \",\n              icon: \"success\",\n              didClose: () => {\n                history.push(\"/mapping-overpass\");\n              },\n            });\n          } else {\n            MySwal.fire({\n              title: \"Failed\",\n              text: response.data,\n              icon: \"error\",\n              didClose: () => {\n                //setModal(false);\n                //reloadData();\n              },\n            });\n          }\n        })\n        .then(() => {});\n    }\n  };\n\n  const selectProvince = (e) => {\n    let id = e.target.value;\n    getOverpassesByCond(accessToken, id).then(({ status, data }) => {\n      return status === 200\n        ? setOptionsVal(data, \"province\")\n        : setOptionsVal([], \"province\");\n    });\n\n    setAmphurs(\n      provinces.find((val) => {\n        return val.key == id;\n      }).amphur\n    );\n    setDistricts([]);\n    setProvince(id);\n    setSelectedValue([]);\n  };\n\n  const selectAmphur = (e) => {\n    let id = e.target.value;\n    getOverpassesByCond(accessToken, province, id).then(({ status, data }) => {\n      return status === 200\n        ? setOptionsVal(data, \"amphur\")\n        : setOptionsVal([], \"amphur\");\n    });\n    setDistricts(\n      amphurs.find((val) => {\n        return val.key == id;\n      }).district\n    );\n    setAmphur(id);\n  };\n\n  const selectDistrict = (e) => {\n    let id = e.target.value;\n    getOverpassesByCond(accessToken, province, amphur, id).then(\n      ({ status, data }) => {\n        return status === 200\n          ? setOptionsVal(data, \"district\")\n          : setOptionsVal([], \"district\");\n      }\n    );\n    setDistrict(id);\n  };\n\n  const onSelect = (selectedList, selectedItem) => {\n    console.log(selectedItem);\n    setSelectedOverpassTmp(Object.values(selectedList));\n    setDisableDraft(false);\n  };\n\n  const onRemove = (selectedList, removedItem) => {\n    setSelectedOverpassTmp(Object.values(selectedList));\n    setDisableDraft(selectedList.length > 0 ? false : true);\n  };\n\n  const clickRemove = (id) => {\n    let arr = [];\n    selectedOverpass.forEach((item) => {\n      if (item.id !== id) {\n        arr.push(item);\n      }\n    });\n    setSelectedOverpass(arr);\n    setDisableConfirm(false);\n  };\n\n  const clickDraft = () => {\n    selectedOverpassTmp.forEach((item, i) => {\n      selectedOverpass.push(item);\n    });\n    setSelectedOverpassTmp([]);\n    setSelectedValue([]);\n    multiselectRef.current.resetSelectedValues();\n    setProvince(\"\");\n    setAmphur(\"\");\n    setDistrict(\"\");\n    setDisableConfirm(false);\n    setDisableDraft(true);\n  };\n\n  const cancelDraft = () => {\n    setProvince(\"\");\n    setAmphur(\"\");\n    setDistrict(\"\");\n    setSelectedOverpassTmp([]);\n    setOptions([]);\n    setSelectedValue([]);\n    multiselectRef.current.resetSelectedValues();\n    setDisableDraft(true);\n    checkallOverpass.current.checked = false;\n  };\n\n  const checkedAll = (e) => {\n    if (e.target.checked) {\n      setProvince(\"\");\n      setAmphur(\"\");\n      setDistrict(\"\");\n      setSelectedValue([]);\n      setSelectedOverpassTmp([]);\n      selectProvinceRef.current.disabled = true;\n      selectAmphurRef.current.disabled = true;\n      selectDistrictRef.current.disabled = true;\n      multiselectRef.current.disabled = true;\n      setDisableDraft(false);\n      getOverpassesByCond(accessToken, 0, 0, 0).then(({ status, data }) => {\n        return status === 200 ? setOptionsVal(data, \"\") : setOptionsVal([], \"\");\n      });\n      setChecked(true);\n      //checkallOverpass.current.disabled = true;\n    } else {\n      selectProvinceRef.current.disabled = false;\n      selectAmphurRef.current.disabled = false;\n      selectDistrictRef.current.disabled = false;\n      setSelectedValue([]);\n      setOptions([]);\n      setChecked(false);\n      setDisableDraft(true);\n    }\n  };\n\n  const setOptionsVal = (data, type) => {\n    let arr = [];\n    let select = [];\n    selectedOverpass.forEach((k, j) => {\n      select.push(k.id);\n    });\n    let j = 0;\n    if (type === \"province\") {\n      data.forEach((val, i) => {\n        if (select.indexOf(val.id) === -1) {\n          arr[j] = val;\n          arr[j].cat = val.amphurName;\n          j++;\n        }\n      });\n    } else if (type === \"amphur\" || type === \"district\" || type === \"\") {\n      data.forEach((val, i) => {\n        if (select.indexOf(val.id) === -1) {\n          arr[j] = val;\n          arr[j] = { ...arr[j], cat: val.districtName };\n          j++;\n        }\n      });\n    }\n    setOptions(arr);\n  };\n\n  useEffect(() => {\n    if (checked) {\n      setSelectedValue(options);\n      setSelectedOverpassTmp(options);\n    }\n  }, [options]);\n\n  useEffect(() => {\n    if (provinces.length === 0) {\n      getMappingAddress(accessToken).then(({ status, data }) => {\n        return status === 200 ? setProvinces(data) : setProvinces([]);\n      });\n    }\n    setSelectedOverpass([]);\n    if (isEdit) {\n      getOverpassByGroupId(accessToken, match.params.id).then(\n        ({ status, data }) => {\n          formikRef.current.setFieldValue(\"groupName\", data.groupName);\n          formikRef.current.setFieldValue(\"groupId\", data.groupId);\n          formikRef.current.setFieldValue(\"email\", data.email);\n          formikRef.current.setFieldValue(\n            \"lineNotifyToken\",\n            data.lineNotifyToken\n          );\n\n          if(status === 200){\n            setSelectedOverpass(data.overpasses)\n            setDisableConfirm(false)\n          }else{\n            setSelectedOverpass([]);\n          }\n        }\n      );\n    }\n    selectProvinceRef.current.disabled = false;\n    selectAmphurRef.current.disabled = false;\n    selectDistrictRef.current.disabled = false;\n    checkallOverpass.current.disabled = false;\n  }, [reload]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } else if (![\"SUPER_ADMIN\", \"ADMIN\"].includes(userRole)) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Formik\n      innerRef={formikRef}\n      enableReinitializing={true}\n      initialValues={{\n        groupId: 0,\n        groupName: \"\",\n        overpasses: {},\n        lineNotifyToken: \"\",\n        email: \"\"\n      }}\n      validationSchema={schema}\n      onSubmit={handleAdd}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      }) => (\n        <>\n          <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n            <CRow>\n              <CCol>\n                <CCard>\n                  <CCardHeader>\n                    <h5>จับกลุ่มสะพานลอย</h5>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CRow>\n                      <CCol>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"groupName\">ชื่อกลุ่ม</CLabel>\n\n                          <CInput\n                            id=\"groupName\"\n                            name=\"groupName\"\n                            valid={!!values.groupName}\n                            invalid={touched.groupName && !!errors.groupName}\n                            value={values.groupName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                          />\n                          <CInvalidFeedback>\n                            {errors.groupName}\n                          </CInvalidFeedback>\n                        </CFormGroup>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol xs={12} md={4} lg={4}>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"province\">จังหวัด</CLabel>\n                          <CSelect\n                            custom\n                            name=\"province\"\n                            id=\"province\"\n                            onChange={selectProvince}\n                            value={province}\n                            innerRef={selectProvinceRef}\n                          >\n                            <option value=\"\">-- Please Select --</option>\n                            {provinces.map((province) => (\n                              <option key={province.key} value={province.key}>\n                                {capitalize(province.value.toLowerCase())}\n                              </option>\n                            ))}\n                          </CSelect>\n                        </CFormGroup>\n                      </CCol>\n                      <CCol xs={12} md={4} lg={4}>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"amphur\">อำเภอ/เขค</CLabel>\n                          <CSelect\n                            custom\n                            name=\"amphur\"\n                            id=\"amphur\"\n                            value={amphur}\n                            onChange={selectAmphur}\n                            innerRef={selectAmphurRef}\n                          >\n                            <option value=\"\">-- Please Select --</option>\n                            {amphurs.map((amphur) => (\n                              <option key={amphur.key} value={amphur.key}>\n                                {capitalize(amphur.value)}\n                              </option>\n                            ))}\n                          </CSelect>\n                        </CFormGroup>\n                      </CCol>\n                      <CCol xs={12} md={4} lg={4}>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"district\">ตำบล/แขวง</CLabel>\n                          <CSelect\n                            custom\n                            name=\"district\"\n                            id=\"district\"\n                            value={district}\n                            onChange={selectDistrict}\n                            innerRef={selectDistrictRef}\n                          >\n                            <option value=\"\">-- Please Select --</option>\n                            {districts.map((district) => (\n                              <option key={district.key} value={district.key}>\n                                {capitalize(district.value)}\n                              </option>\n                            ))}\n                          </CSelect>\n                        </CFormGroup>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol>\n                        <CFormGroup>\n                          <CSwitch\n                            className=\"mr-1\"\n                            color=\"success\"\n                            id=\"checkallOverpass\"\n                            defaultChecked={false}\n                            shape=\"pill\"\n                            innerRef={checkallOverpass}\n                            onChange={(e) => {\n                              checkedAll(e);\n                            }}\n                          />\n                          <CLabel\n                            variant=\"checkbox\"\n                            htmlFor=\"radio1\"\n                            style={{ position: \"absolute\", marginLeft: \"10px\" }}\n                          >\n                            เลือกทั้งหมด\n                          </CLabel>\n                        </CFormGroup>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"id\">สะพานลอย</CLabel>\n                          <Multiselect\n                            options={options} // Options to display in the dropdown\n                            selectedValues={selectedValue} // Preselected value to persist in dropdown\n                            onSelect={onSelect} // Function will trigger on select event\n                            onRemove={onRemove} // Function will trigger on remove event\n                            displayValue=\"name\" // Property name to display in the dropdown options\n                            multiple={true}\n                            hidePlaceholder={true}\n                            groupBy=\"cat\"\n                            closeOnSelect={false}\n                            showCheckbox={true}\n                            ref={multiselectRef}\n                          />\n                        </CFormGroup>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol xs={12} md={6} lg={6}>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"lineNotifyToken\">\n                            Line Notify Token\n                          </CLabel>\n\n                          <CInput\n                            id=\"lineNotifyToken\"\n                            name=\"lineNotifyToken\"\n                            valid={!!values.lineNotifyToken}\n                            invalid={\n                              touched.lineNotifyToken &&\n                              !!errors.lineNotifyToken\n                            }\n                            value={values.lineNotifyToken}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                          />\n                          <CInvalidFeedback>\n                            {errors.lineNotifyToken}\n                          </CInvalidFeedback>\n                        </CFormGroup>\n                      </CCol>\n                      <CCol xs={12} md={6} lg={6}>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"email\">\n                            Email\n                          </CLabel>\n\n                          <CInput\n                            id=\"email\"\n                            name=\"email\"\n                            valid={!!values.email}\n                            invalid={\n                              touched.email &&\n                              !!errors.email\n                            }\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                          />\n                          <CInvalidFeedback>\n                            {errors.email}\n                          </CInvalidFeedback>\n                        </CFormGroup>\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol>\n                        <CButton\n                          type=\"button\"\n                          className=\"btn-github btn-brand mr-1 mb-1 btn btn-xl\"\n                          onClick={clickDraft}\n                          disabled={disableDraft}\n                        >\n                          Draft\n                        </CButton>\n                        <CButton\n                          type=\"button\"\n                          className=\"btn btn-secondary mr-1 mb-1 btn-xl\"\n                          onClick={cancelDraft}\n                        >\n                          Cancel\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol>\n                <CCard>\n                  <CCardBody>\n                    <CRow>\n                      <CCol xs=\"12\">\n                        <CDataTable\n                          items={selectedOverpass}\n                          fields={[\n                            { key: \"id\", label: \"ID\", filter: false },\n                            {\n                              key: \"name\",\n                              label: \"ชื่อสะพานลอย\",\n                              filter: false,\n                            },\n                            {\n                              key: \"location\",\n                              label: \"สถานที่\",\n                              filter: false,\n                            },\n                            {\n                              key: \"districtName\",\n                              label: \"แขวง/ตำบล\",\n                              filter: false,\n                            },\n                            {\n                              key: \"amphurName\",\n                              label: \"เขต/อำเภอ\",\n                              filter: false,\n                            },\n                            {\n                              key: \"provinceName\",\n                              label: \"จังหวัด\",\n                              filter: false,\n                            },\n                            { key: \"delete\", label: \"ลบ\", filter: false },\n                          ]}\n                          scopedSlots={{\n                            delete: (item) => (\n                              <td>\n                                <CButton\n                                  size=\"sm\"\n                                  className=\"btn-youtube btn-brand mr-1 mb-1\"\n                                  onClick={() => clickRemove(item.id)}\n                                >\n                                  <CIcon size=\"sm\" name=\"cil-trash\" />\n                                </CButton>\n                              </td>\n                            ),\n                          }}\n                          bordered\n                          itemsPerPage={5}\n                          pagination\n                        />\n                      </CCol>\n                    </CRow>\n                    <CRow>\n                      <CCol>\n                        <CButton\n                          type=\"submit\"\n                          className=\"mr-1 mb-1 btn btn-xl\"\n                          color=\"primary\"\n                          disabled={disableConfirm}\n                        >\n                          Submit\n                        </CButton>\n                        <CButton\n                          type=\"button\"\n                          className=\"btn btn-secondary mr-1 mb-1 btn-xl\"\n                          onClick={() => {\n                            setReload(reload ? false : true);\n                          }}\n                        >\n                          Cancel\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </CForm>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default MappingForms;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/overpass/Overpasses.js",["1575","1576","1577","1578","1579","1580","1581","1582"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CButtonGroup,\n  CForm,\n  CLabel,\n  CSelect,\n  CInput,\n  CFormGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport OverpassAddEdit from \"./OverpassAddEdit\";\nimport { deleteOverpass, getOverpasses } from \"src/services/OverpassService\";\nimport { LOGIN_FAILED_CODE } from \"src/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getMappingAddress, getStatuses } from \"src/services/CommonService\";\nimport { capitalize } from \"src/utils/common\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport \"./OverpassAddEdit.scss\";\n\nconst MySwal = withReactContent(Swal);\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Overpasses = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(\"add\");\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [id, setId] = useState(\"\");\n  const prevUsername = usePrevious(id);\n  const [name, setName] = useState(\"\");\n  const [setpointWatt, setSetpointWatt] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [amphur, setAmphur] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [statuses, setStatuses] = useState([]);\n  const [province, setProvince] = useState(\"\");\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [sorterValue, setSorterValue] = useState();\n  const [itemDetail, setItemDetail] = useState({});\n  const [provinces, setProvinces] = useState([]);\n  const [amphurs, setAmphurs] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [deleteOverpassName, setDeleteOverpassName] = useState(\"\");\n  const [deleteId, setDeleteId] = useState(\"\");\n\n  const pageChange = (newPage) => {\n    if (newPage - 1 >= 0 && page !== newPage - 1) {\n      setPage(newPage - 1);\n    }\n  };\n  const showModal = (action, item) => {\n    setAction(action);\n    setModal(!modal);\n    if (action === \"edit\") {\n      setItemDetail(item);\n    } else {\n      setItemDetail({});\n    }\n  };\n\n  const showDeleteModal = (item) => {\n    setId(item.id);\n    setDeleteOverpassName(item.name);\n    setDeleteModal(!deleteModal);\n  };\n\n  const handleClosedModal = () => {\n    setDeleteModal(false);\n  };\n\n  const handleReset = () => {\n    console.log(\"xxxxx\")\n    setProvince(\"\");\n    setAmphur(\"\");\n    setDistrict(\"\");\n    setName(\"\");\n  };\n\n  const handleSearch = (reload = false) => {\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      filter: {\n        name,\n        location,\n        district,\n        amphur,\n        province,\n      },\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getOverpasses(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteOverpass = () => {\n    setDeleteLoading(true);\n    deleteOverpass(accessToken, id).then((response) => {\n      if (response.status === 200) {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Success\",\n          text: \"ลบสะพานลอยสำเร็จ  \",\n          icon: \"success\",\n          didClose: () => {\n            setDeleteModal(false);\n            handleSearch(true);\n          },\n        });\n      } else {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Failed\",\n          text: \"ไม่สามารถลบสะพานลอยได้ เนื่องจากมีกลุ่มผูกกับสะพานลอยนี้อยู่\",\n          icon: \"error\",\n          didClose: () => {\n            setDeleteModal(false);\n          },\n        });\n      }\n    });\n  };\n\n  const selectProvince = (e) => {\n    let id = e.target.value;\n    setAmphurs(\n      provinces.find((val) => {\n        return val.key == id;\n      }).amphur\n    );\n    setDistricts([]);\n    setProvince(id);\n  };\n\n  const selectAmphur = (e) => {\n    let id = e.target.value;\n    setDistricts(\n      amphurs.find((val) => {\n        return val.key == id;\n      }).district\n    );\n    setAmphur(id);\n  };\n\n  useEffect(\n    () => {\n      if (provinces.length === 0) {\n        getMappingAddress(accessToken).then(({ status, data }) => {\n          return status === 200 ? setProvinces(data) : setProvinces([]);\n        });\n      }\n      getStatuses(accessToken).then(({ status, data }) => {\n        return status === 200 ? setStatuses(data) : setStatuses([]);\n      });\n      setLoading(true);\n      let body = {\n        page,\n        limit: itemsPerPage,\n        setpointWatt,\n      };\n      if (sorterValue && Object.keys(sorterValue).length !== 0) {\n        const { column, asc } = sorterValue;\n        body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n      }\n\n      getOverpasses(accessToken, body).then((users) => {\n        if (users.code && users.code === LOGIN_FAILED_CODE) {\n          dispatch(setLoginExpired());\n          return;\n        }\n        setItems(users.data);\n        setItemsPerPage(itemsPerPage);\n        setTotalRecords(Number(users.totalRecords));\n        setLoading(false);\n      });\n    },\n    [\n      /*page, itemsPerPage, sorterValue*/\n    ]\n  );\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={6} md={6} lg={6}>\n          <h2>ข้อมูลสะพานลอย</h2>\n        </CCol>\n        <CCol\n          xs={6}\n          md={6}\n          lg={6}\n          className=\"d-block d-sm-flex align-items-right justify-content-end mb-4\"\n        >\n          <CButton color=\"primary\" onClick={() => showModal(\"add\")}>\n            <CIcon size=\"sm\" name=\"cil-user-plus\" className=\" mr-1\" />\n            เพิ่มสะพานลอย\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow className=\"justify-content-center\">\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol className=\"mb-3 font-weight-bold\">\n                  <h4>ค้นหา</h4>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={3} lg={3} sm=\"12\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"name\">ชื่อสะพานลอย:</CLabel>\n                    <CInput\n                      id=\"name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={3} lg={3} sm=\"12\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"province\">จังหวัด</CLabel>\n                    <CSelect\n                      custom\n                      name=\"province\"\n                      id=\"province\"\n                      onChange={selectProvince}\n                      value={province}\n                    >\n                      <option value=\"\">All</option>\n                      {provinces.map((province) => (\n                        <option key={province.key} value={province.key}>\n                          {capitalize(province.value.toLowerCase())}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={3} lg={3} sm=\"12\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"amphur\">อำเภอ/เขต</CLabel>\n                    <CSelect\n                      custom\n                      name=\"amphur\"\n                      id=\"amphur\"\n                      value={amphur}\n                      onChange={selectAmphur}\n                    >\n                      <option value=\"\">All</option>\n                      {amphurs.map((amphur) => (\n                        <option key={amphur.key} value={amphur.key}>\n                          {capitalize(amphur.value)}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={3} lg={3} sm=\"12\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"district\">ตำบล/แขวง</CLabel>\n                    <CSelect\n                      custom\n                      name=\"district\"\n                      id=\"district\"\n                      value={district}\n                      onChange={(e) => setDistrict(e.target.value)}\n                    >\n                      <option value=\"\">All</option>\n                      {districts.map((district) => (\n                        <option key={district.key} value={district.key}>\n                          {capitalize(district.value)}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CCol className=\"mt-3 d-block d-sm-flex justify-content-end\">\n                <CFormGroup>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"secondary\"\n                    className=\"px-4 text-black-50\"\n                    onClick={handleReset}\n                  >\n                    Reset\n                  </CButton>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"primary\"\n                    className=\"ml-3 px-3\"\n                    onClick={handleSearch}\n                  >\n                    Search\n                    <CIcon size=\"sm\" name=\"cil-search\" className=\"ml-2\" />\n                  </CButton>\n                </CFormGroup>\n              </CCol>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                loading={loading}\n                items={items}\n                fields={[\n                  {\n                    key: \"id\",\n                    label: \"ID\",\n                  },\n                  {\n                    key: \"name\",\n                    label: \"ชื่อสะพานลอย\",\n                  },\n                  {\n                    key: \"location\",\n                    label: \"สถานที่\",\n                  },\n                  {\n                    key: \"districtName\",\n                    label: \"ตำบล/แขวง\",\n                  },\n                  {\n                    key: \"amphurName\",\n                    label: \"อำเภอ/เขค\",\n                  },\n                  {\n                    key: \"provinceName\",\n                    label: \"จังหวัด\",\n                  },\n                  {\n                    key: \"status\",\n                    label: \"สถานะ\",\n                  },\n                  {\n                    key: \"action\",\n                    label: \"\",\n                    _style: { width: \"1%\" },\n                    filter: false,\n                  },\n                ]}\n                hover\n                itemsPerPage={itemsPerPage}\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n\n                scopedSlots={{\n                  action: (item) => (\n                    <td className=\"py-2\">\n                      <CButtonGroup className=\"mr-2\">\n                        <CButton\n                          size=\"sm\"\n                          className=\"btn-github btn-brand mr-1 mb-1\"\n                          onClick={() => showModal(\"edit\", item)}\n                        >\n                          <CIcon size=\"sm\" name=\"cil-pencil\" />\n                        </CButton>\n                        <CButton\n                          size=\"sm\"\n                          className=\"btn-youtube btn-brand mr-1 mb-1\"\n                          onClick={() => showDeleteModal(item)}\n                        >\n                          <CIcon size=\"sm\" name=\"cil-trash\" />\n                        </CButton>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                  districtName: (item) => (\n                      <td>{(item.districtName === null || item.districtName === 'null') ? \"\" : item.districtName}</td>\n                  ),\n                  location: (item) => (\n                    <td>{(item.location === null || item.location === 'null') ? \"\" : item.location}</td>\n                )\n  \n                }}\n                sorter\n                sorterValue={sorterValue}\n                onSorterValueChange={setSorterValue}\n              />\n              <CRow>\n                <CCol xs={12} md={6}>\n                  <CForm inline className=\"mt-2\">\n                    <CLabel className=\"mr-2\">Show</CLabel>{\" \"}\n                    <CSelect\n                      size=\"sm\"\n                      value={itemsPerPage}\n                      onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                    </CSelect>\n                    <CLabel className=\"ml-2\">entries</CLabel>\n                  </CForm>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CPagination\n                    activePage={page + 1}\n                    onActivePageChange={pageChange}\n                    pages={Math.ceil(totalRecords / itemsPerPage)}\n                    doubleArrows={false}\n                    align=\"end\"\n                  />\n                </CCol>\n              </CRow>\n              <OverpassAddEdit\n                action={action}\n                modal={modal}\n                setModal={setModal}\n                itemDetail={itemDetail}\n                reloadData={handleSearch}\n                provinces={provinces}\n                amphurs={[]}\n                districts={[]}\n                statuses={statuses}\n                handleReset={handleReset}\n              />\n              <CModal\n                centered\n                show={deleteModal}\n                closeOnBackdrop={false}\n                onClosed={handleClosedModal}\n              >\n                {deleteLoading && (\n                  <div className={deleteLoading ? \"spinner-container\" : \"\"}>\n                    <div className=\"position-absolute spinner-center\">\n                      <div className=\"sk-grid mx-auto\">\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                      </div>\n                      <div className=\"text-center\">Loading....</div>\n                    </div>\n                  </div>\n                )}\n                <CModalHeader>\n                  <h5>คุณต้องการลบ ?</h5>\n                </CModalHeader>\n                <CModalBody>\n                  ลบสะพานลอย <strong>{deleteOverpassName}</strong>\n                </CModalBody>\n                <CModalFooter>\n                  <CButton color=\"light\" onClick={handleClosedModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    color=\"danger\"\n                    onClick={() => {handleDeleteOverpass()}}\n                    disabled={deleteLoading}\n                  >\n                    Confirm\n                  </CButton>{\" \"}\n                </CModalFooter>\n              </CModal>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Overpasses;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/users/Users.js",["1583","1584","1585"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CButton,\n  CButtonGroup,\n  CForm,\n  CLabel,\n  CSelect,\n  CInput,\n  CFormGroup,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport CIcon from \"@coreui/icons-react\";\nimport UserAddEdit from \"./UserAddEdit\";\nimport { deleteUser, getUsers } from \"src/services/UserService\";\nimport { LOGIN_FAILED_CODE, roleUserControl } from \"src/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getPrefixes, getRoles, getStatuses } from \"src/services/CommonService\";\nimport { capitalize } from \"src/utils/common\";\nimport { setLoginExpired } from \"src/actions/authen\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\nimport \"./UserAddEdit.scss\";\n\nconst MySwal = withReactContent(Swal);\n\nconst getBadge = (status) => {\n  switch (status) {\n    case \"ACTIVE\":\n      return \"success\";\n    case \"INACTIVE\":\n      return \"danger\";\n    default:\n      return;\n  }\n};\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const userRole = useSelector((state) => state.authen.role);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [action, setAction] = useState(\"add\");\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [username, setUsername] = useState(\"\");\n  const [usernameShow, setUsernameShow] = useState(\"\");\n  const prevUsername = usePrevious(username);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [lineId, setLineId] = useState(\"\");\n  const [mobileNo, setMobileNo] = useState(\"\");\n  const [itemDetail, setItemDetail] = useState({});\n  const [roles, setRoles] = useState([]);\n  const [statuses, setStatuses] = useState([]);\n  const [prefixes, setPrefixes] = useState([]);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [sorterValue, setSorterValue] = useState({});\n\n  const pageChange = (newPage) => {\n    if (newPage - 1 >= 0 && page !== newPage - 1) {\n      setPage(newPage - 1);\n    }\n  };\n  const showModal = (action, item) => {\n    setAction(action);\n    setModal(!modal);\n    if (action === \"edit\") {\n      setItemDetail(item);\n    }\n  };\n\n  const showDeleteModal = (item) => {\n    setUserId(item.id);\n    setUsernameShow(item.username);\n    setDeleteModal(!deleteModal);\n  };\n\n  const handleClosedModal = () => {\n    setUserId(\"\");\n    setUsername(\"\");\n    setDeleteModal(false);\n  };\n\n  const handleReset = () => {console.log('xxxxxx')\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setStatus(\"\");\n    setRole(\"\");\n    setEmail(\"\");\n    setLineId(\"\");\n    setMobileNo(\"\");\n  };\n\n  const handleSearch = () => {\n    setLoading(true);\n    let body = {\n      page,\n      limit: itemsPerPage,\n      filter: {\n        username,\n        firstName,\n        lastName,\n        status: status ? status : undefined,\n        role: role ? role : undefined,\n        email,\n        lineId,\n        mobileNo,\n      },\n    };\n\n    if (sorterValue && Object.keys(sorterValue).length !== 0) {\n      const { column, asc } = sorterValue;\n      body = { ...body, sort: column, order: asc ? \"asc\" : \"desc\" };\n    }\n\n    getUsers(accessToken, body).then((users) => {\n      if (users.code && users.code === LOGIN_FAILED_CODE) {\n        dispatch(setLoginExpired());\n        return;\n      }\n      setItems(users.data);\n      setItemsPerPage(itemsPerPage);\n      setTotalRecords(Number(users.totalRecords));\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteUser = () => {\n    setDeleteLoading(true);\n    deleteUser(accessToken, userId).then((response) => {\n      if (response.status === 200) {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Success\",\n          text: \"ลบผู้ใช้งานสำเร็จ  \",\n          icon: \"success\",\n          didClose: () => {\n            setDeleteModal(false);\n            handleSearch();\n          },\n        });\n      } else {\n        setDeleteLoading(false);\n        MySwal.fire({\n          title: \"Failed\",\n          text: \"ไม่สามารถลบผูใช้งานระบบได้\",\n          icon: \"error\",\n          didClose: () => {\n            setDeleteModal(false);\n          },\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getRoles(accessToken).then(({ status, data }) => {\n      return status === 200 ? setRoles(data) : setRoles([]);\n    });\n    getStatuses(accessToken).then(({ status, data }) => {\n      return status === 200 ? setStatuses(data) : setStatuses([]);\n    });\n    getPrefixes(accessToken).then(({ status, data }) => {\n      return status === 200 ? setPrefixes(data) : setPrefixes([]);\n    });\n    handleSearch();\n  }, [page, itemsPerPage, sorterValue]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } else if (![\"SUPER_ADMIN\", \"ADMIN\"].includes(userRole)) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={6} md={6} sm={6} className=\"mb-3 d-flex align-items-center\">\n          <h2>ผู้ใช้งานระบบ</h2>\n        </CCol>\n        <CCol\n          xs={6}\n          md={6}\n          sm={6}\n          className=\"d-block d-sm-flex align-items-right justify-content-end mb-4\"\n        >\n          <CButton color=\"primary\" onClick={() => showModal(\"add\")}>\n            <CIcon size=\"sm\" name=\"cil-user-plus\" className=\" mr-1\" />\n            เพิ่มผู้ใช้งาน\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow className=\"justify-content-center\">\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol className=\"mb-3 font-weight-bold\">ค้นหา</CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"username\">Username:</CLabel>\n                    <CInput\n                      id=\"username\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"firstName\">ชื่อ:</CLabel>\n                    <CInput\n                      id=\"firstName\"\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">นามสกุล:</CLabel>\n                    <CInput\n                      id=\"lastName\"\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"status\">Status</CLabel>\n                    <CSelect\n                      custom\n                      name=\"status\"\n                      id=\"status\"\n                      value={status}\n                      onChange={(e) => setStatus(e.target.value)}\n                    >\n                      <option value=\"\">Please Select</option>\n                      {statuses.map((status) => (\n                        <option key={status.key} value={status.key}>\n                          {capitalize(status.value.toLowerCase())}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"role\">Role:</CLabel>\n                    <CSelect\n                      custom\n                      name=\"role\"\n                      id=\"role\"\n                      value={role}\n                      onChange={(e) => setRole(e.target.value)}\n                    >\n                      <option value=\"\">Please Select</option>\n\n                      {roles.map(\n                        (role) =>\n                          roleUserControl[userRole].includes(role.value) && (\n                            <option key={role.key} value={role.key}>\n                              {capitalize(role.value.toLowerCase())}\n                            </option>\n                          )\n                      )}\n                    </CSelect>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Email:</CLabel>\n                    <CInput\n                      id=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lineId\">Line ID:</CLabel>\n                    <CInput\n                      id=\"lineId\"\n                      value={lineId}\n                      onChange={(e) => setLineId(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={6} lg={3}>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"mobileNo\">Mobile No:</CLabel>\n                    <TextMask\n                      mask={[\n                        /[0]/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                        /\\d/,\n                      ]}\n                      Component={InputAdapter}\n                      className=\"form-control\"\n                      value={mobileNo}\n                      onChange={(e) => setMobileNo(e.target.value)}\n                    />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CCol\n                xs={12}\n                md={12}\n                lg={12}\n                className=\"mt-3 d-block d-sm-flex justify-content-end\"\n              >\n                <CFormGroup>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"secondary\"\n                    className=\"px-4 text-black-50\"\n                    onClick={handleReset}\n                  >\n                    Reset\n                  </CButton>\n                  <CButton\n                    variant=\"outline\"\n                    color=\"primary\"\n                    className=\"ml-3 px-3\"\n                    onClick={handleSearch}\n                  >\n                    Search\n                    <CIcon size=\"sm\" name=\"cil-search\" className=\"ml-2\" />\n                  </CButton>\n                </CFormGroup>\n              </CCol>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs={12} md={12} lg={12}>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                loading={loading}\n                items={items}\n                fields={[\n                  {\n                    key: \"username\",\n                    label: \"Username\",\n                  },\n                  {\n                    key: \"prefix\",\n                    label: \"ชื่อนำหน้า\",\n                  },\n                  {\n                    key: \"firstName\",\n                    label: \"ชื่อ\",\n                  },\n                  {\n                    key: \"lastName\",\n                    label: \"นามสกุล\",\n                  },\n                  {\n                    key: \"role\",\n                    label: \"Role\",\n                  },\n                  {\n                    key: \"status\",\n                    label: \"Status\",\n                  },\n                  {\n                    key: \"email\",\n                    label: \"Email\",\n                  },\n                  {\n                    key: \"lineId\",\n                    label: \"Line ID\",\n                  },\n                  {\n                    key: \"mobileNo\",\n                    label: \"Mobile No\",\n                  },\n                  {\n                    key: \"groupName\",\n                    label: \"กลุ่มสะพานลอย\",\n                  },\n                  {\n                    key: \"action\",\n                    label: \"\",\n                    _style: { width: \"1%\" },\n                    filter: false,\n                  },\n                ].filter((field) =>\n                  userRole === \"ADMIN\" ? field : field !== \"role\"\n                )}\n                hover\n                itemsPerPage={itemsPerPage}\n                // clickableRows\n                // onRowClick={(item) => history.push(`/users/${item.id}`)}\n\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                  email: (item) =>\n                    item.email !== \"null\" ? <td>{item.email}</td> : \"\",\n                  lineId: (item) =>\n                    item.lineId !== \"null\" ? <td>{item.lineId}</td> : \"\",\n                  mobileNo: (item) =>\n                    item.mobileNo !== \"null\" ? <td>{item.mobileNo}</td> : \"\",\n\n                  action: (item) => (\n                    <td className=\"py-2\">\n                      <CButtonGroup className=\"mr-2\">\n                        <CButton\n                          size=\"sm\"\n                          className=\"btn-github btn-brand mr-1 mb-1\"\n                          onClick={() => showModal(\"edit\", item)}\n                        >\n                          <CIcon size=\"sm\" name=\"cil-pencil\" />\n                        </CButton>\n                        <CButton\n                          size=\"sm\"\n                          className=\"btn-youtube btn-brand mr-1 mb-1\"\n                          onClick={() => showDeleteModal(item)}\n                        >\n                          <CIcon size=\"sm\" name=\"cil-trash\" />\n                        </CButton>\n                      </CButtonGroup>\n                    </td>\n                  ),\n                }}\n                sorter\n                sorterValue={sorterValue}\n                //onSorterValueChange={setSorterValue}\n              />\n              <CRow>\n                <CCol xs={12} md={6}>\n                  <CForm inline className=\"mt-2\">\n                    <CLabel className=\"mr-2\">Show</CLabel>{\" \"}\n                    <CSelect\n                      size=\"sm\"\n                      value={itemsPerPage}\n                      onChange={(e) => setItemsPerPage(Number(e.target.value))}\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                    </CSelect>\n                    <CLabel className=\"ml-2\">entries</CLabel>\n                  </CForm>\n                </CCol>\n                <CCol xs={12} md={6}>\n                  <CPagination\n                    activePage={page + 1}\n                    onActivePageChange={pageChange}\n                    pages={Math.ceil(totalRecords / itemsPerPage)}\n                    doubleArrows={false}\n                    align=\"end\"\n                  />\n                </CCol>\n              </CRow>\n              <UserAddEdit\n                action={action}\n                modal={modal}\n                setModal={setModal}\n                itemDetail={itemDetail}\n                reloadData={handleSearch}\n                roles={roles}\n                statuses={statuses}\n                prefixes={prefixes}\n                handleReset={handleReset}\n              />\n              <CModal\n                centered\n                show={deleteModal}\n                closeOnBackdrop={false}\n                onClosed={handleClosedModal}\n              >\n                {deleteLoading && (\n                  <div className={deleteLoading ? \"spinner-container\" : \"\"}>\n                    <div className=\"position-absolute spinner-center\">\n                      <div className=\"sk-grid mx-auto\">\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                        <div className=\"sk-grid-cube\"></div>\n                      </div>\n                      <div className=\"text-center\">Loading....</div>\n                    </div>\n                  </div>\n                )}\n                <CModalHeader>\n                  <h5>คุณต้องการลบ ?</h5>\n                </CModalHeader>\n                <CModalBody>\n                  ลบผู้ใช้งาน <strong>{usernameShow}</strong>\n                </CModalBody>\n                <CModalFooter>\n                  <CButton color=\"light\" onClick={handleClosedModal}>\n                    Cancel\n                  </CButton>\n                  <CButton\n                    color=\"danger\"\n                    onClick={handleDeleteUser}\n                    disabled={deleteLoading}\n                  >\n                    Confirm\n                  </CButton>{\" \"}\n                </CModalFooter>\n              </CModal>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Users;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/widgets/Widgets.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/dashboard/Dashboard.js",["1586","1587","1588","1589","1590","1591","1592","1593"],"import React, { useEffect, useState } from \"react\";\nimport Moment from \"react-moment\";\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CRow,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabs,\n  CTabContent,\n  CTabPane,\n  CLink,\n  CListGroupItem,\n  CListGroup,\n} from \"@coreui/react\";\nimport {\n  CChartBar,\n  CChartDoughnut,\n} from \"@coreui/react-chartjs\";\nimport { useSelector } from \"react-redux\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { PROD_API_URL } from \"../../config\";\nimport {\n  getDataOverpass,\n} from \"src/services/DashboardService\";\nimport { COLOR_AMPHUR } from \"../../config\"\nimport Chart from \"react-apexcharts\";\n\nconst Dashboard = () => {\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const overpassGroup = useSelector((state) => state.authen.overpassGroup);\n  const [overpassData, setOverpassData] = useState({});\n  const [graph, setGraph] = useState([]);\n  const [backgroundColorDonut, setBackgroundColorDonut] = useState([]);\n  const [dataDonut, setDataDonut] = useState([]);\n  const [labelsDonut, setLabelsDonut] = useState([]);\n  const [overpassOnMax, setOverpassOnMax] = useState(0);\n  const [overpassOffMax, setOverpassOffMax] = useState(0);\n  const [overpassOffAverage, setOverpassOffAverage] = useState(0);\n  const [graphOptions, setGraphOptions] = useState({options: {}, series: []});\n  const [graphSeries, setGraphSeries] = useState([]);\n\n  const genDataSets = (body) => {\n    let data = [];\n    let max = 0;\n    let _array = []\n    let chk = false;\n    if (body !== []) {\n      data[0] =\n        body.overpassOffByMonth.Jan === null ? 0 : body.overpassOffByMonth.Jan;\n      data[1] =\n        body.overpassOffByMonth.Feb === null ? 0 : body.overpassOffByMonth.Feb;\n      data[2] =\n        body.overpassOffByMonth.Mar === null ? 0 : body.overpassOffByMonth.Mar;\n      data[3] =\n        body.overpassOffByMonth.Apr === null ? 0 : body.overpassOffByMonth.Apr;\n      data[4] =\n        body.overpassOffByMonth.May === null ? 0 : body.overpassOffByMonth.May;\n      data[5] =\n        body.overpassOffByMonth.Jan === null ? 0 : body.overpassOffByMonth.Jun;\n      data[6] =\n        body.overpassOffByMonth.Jul === null ? 0 : body.overpassOffByMonth.Jul;\n      data[7] =\n        body.overpassOffByMonth.Aug === null ? 0 : body.overpassOffByMonth.Aug;\n      data[8] =\n        body.overpassOffByMonth.Sep === null ? 0 : body.overpassOffByMonth.Sep;\n      data[9] =\n        body.overpassOffByMonth.Oct === null ? 0 : body.overpassOffByMonth.Oct;\n      data[10] =\n        body.overpassOffByMonth.Nov === null ? 0 : body.overpassOffByMonth.Nov;\n      data[11] =\n        body.overpassOffByMonth.Dec === null ? 0 : body.overpassOffByMonth.Dec;\n      if (graph.length > 0) {\n        data.forEach((item, i) => {\n          if (item !== graph.graphOff.data[i]) {\n            chk = true;\n          }\n        });\n      }\n    }\n    _array = data;\n    \n    const dataOff = data\n    const graphOff = {\n      label: \"สะพานลอยที่ไฟฟ้ามีปัญหา\",\n      backgroundColor: \"#e55353\",\n      data: data,\n      name: \"graphOff\",\n    };\n\n    data = [];\n    if (body !== []) {\n      data[0] =\n        body.overpassOnByMonth.Jan === null ? 0 : body.overpassOnByMonth.Jan;\n      data[1] =\n        body.overpassOnByMonth.Feb === null ? 0 : body.overpassOnByMonth.Feb;\n      data[2] =\n        body.overpassOnByMonth.Mar === null ? 0 : body.overpassOnByMonth.Mar;\n      data[3] =\n        body.overpassOnByMonth.Apr === null ? 0 : body.overpassOnByMonth.Apr;\n      data[4] =\n        body.overpassOnByMonth.May === null ? 0 : body.overpassOnByMonth.May;\n      data[5] =\n        body.overpassOnByMonth.Jan === null ? 0 : body.overpassOnByMonth.Jun;\n      data[6] =\n        body.overpassOnByMonth.Jul === null ? 0 : body.overpassOnByMonth.Jul;\n      data[7] =\n        body.overpassOnByMonth.Aug === null ? 0 : body.overpassOnByMonth.Aug;\n      data[8] =\n        body.overpassOnByMonth.Sep === null ? 0 : body.overpassOnByMonth.Sep;\n      data[9] =\n        body.overpassOnByMonth.Oct === null ? 0 : body.overpassOnByMonth.Oct;\n      data[10] =\n        body.overpassOnByMonth.Nov === null ? 0 : body.overpassOnByMonth.Nov;\n      data[11] =\n        body.overpassOnByMonth.Dec === null ? 0 : body.overpassOnByMonth.Dec;\n      if (graph.length > 0) {\n        data.forEach((item, i) => {\n          if (item !== graph.graphOn.data[i]) {\n            chk = true;\n          }\n        });\n      }\n    }\n    _array.concat(data)\n    max = (Math.max.apply(Math,_array))\n    const graphOn = {\n      label: \"สะพานลอยที่ไฟฟ้าปกติ\",\n      backgroundColor: \"#58ACFA\",\n      data: data,\n      name: \"graphOn\",\n    };\n    const dataOn = data\n    const po = {\n      \n      options: {\n        chart: {\n          id: \"basic-bar\"\n        },\n        xaxis: {\n          categories: ['ม.ค','ก.พ','มี.ค','เม.ย','พ.ค','มิ.ย','ก.ค','ส.ค','ก.ย','ต.ค','พ.ย','ธ.ค'],\n        },\n        yaxis: {\n          min: 0,\n          max: max + 5,\n          forceNiceScale: true,\n          decimalsInFloat: undefined\n        },\n        colors: [\"#e55353\", \"#58ACFA\"],\n      },\n      \n      series: [\n        {\n          name: \"สะพานลอยที่มีหลอดไฟดับ\",\n          data: dataOff\n        },\n        {\n          name: \"สะพานลอยที่ไฟฟ้าปกติ\",\n          data: dataOn\n        }\n      ]\n    };\n    \n    \n    //if (chk) {\n      setGraphOptions(po)\n      //setGraph([graphOff, graphOn]);\n      setOverpassOnMax(body.overpassOnMax);\n      setOverpassOffMax(body.overpassOffMax);\n      setOverpassOffAverage(body.overpassOffAverage);\n    //}\n  };\n\n  const genDataDonutChart = (body) => {\n    let backgroundColor = []\n    let data = []\n    let labels = []\n    if(body.donutChart !== undefined && body.donutChart.length > 0){\n      body.donutChart.forEach((item, i) => {\n        backgroundColor[i] = COLOR_AMPHUR[item.amphur_id];\n        data[i] = item.cnt;\n        labels[i] = item.amphur_name;\n      })\n      setBackgroundColorDonut(backgroundColor)\n      setDataDonut(data)\n      setLabelsDonut(labels)\n     \n    }else{\n      backgroundColor[0] = \"#807C7F\";\n      data[0] = 0;\n      labels[0] = \"ไม่มีอุปกรณ์ไฟฟ้าดับ\";\n      setBackgroundColorDonut(backgroundColor)\n      setDataDonut(data)\n      setLabelsDonut(labels)\n    }\n    \n  }\n\n  useEffect(() => {\n    getDataOverpass(accessToken).then(({ status, data }) => {\n      if(status === 200){\n        setOverpassData(data);\n        genDataSets(data);  \n        genDataDonutChart(data);\n      }\n    });\n\n    var thisheaders = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    var sock = new SockJS(`${PROD_API_URL}/websocket`);\n    let stompClient = Stomp.over(sock);\n    sock.onopen = function () {\n      console.log(\"open\");\n    };\n\n    stompClient.connect(thisheaders, function (frame) {\n      //console.log('Connected: ' + frame);\n      stompClient.subscribe(`/topic/greetings/${overpassGroup}`, function (data) {\n        if (data !== null) {\n          const obj = JSON.parse(JSON.stringify(data));\n          let body = JSON.parse(JSON.stringify(obj.body));\n          body = JSON.parse(body);\n          setOverpassData(body);\n          genDataSets(body);\n          genDataDonutChart(body);\n        } else {\n          setOverpassData([]);\n          genDataSets([]);\n        }\n      });\n    });\n  }, []);\n\n  return (\n    <>\n    \n      <h3 className=\"mb-4\">แผงงานวิเคราะห์ข้อมูล</h3>\n      <CRow>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center>\n                <h1>\n                  {\"overpassByZone\" in overpassData\n                    ? (overpassData.overpassByZone.cnt === null) ? 0 : overpassData.overpassByZone.cnt\n                    : 0}\n                </h1>\n              </center>\n              <center><b>เขตพื้นที่ติดตั้งอุปกรณ์</b></center>\n            </CCardBody>\n            <CCardFooter className=\"bg-secondary text-black\">\n              <center>\n                <Moment format=\"DD/MM/YYYY HH:mm:ss\">\n                  {\"overpassByZone\" in overpassData &&\n                  overpassData.overpassByZone.update_dt !== null\n                    ? overpassData.overpassByZone.update_dt\n                    : new Date()}\n                </Moment>\n              </center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center>\n                <h1>\n                  {\"overpassAll\" in overpassData\n                    ? (overpassData.overpassAll.cnt === null) ? 0 : overpassData.overpassAll.cnt \n                    : 0}\n                </h1>\n              </center>\n              <center className=\"text-info\"><b>สะพานลอยทั้งหมด</b></center>\n            </CCardBody>\n            <CCardFooter className=\"bg-info text-white\">\n              <center>\n                <Moment format=\"DD/MM/YYYY HH:mm:ss\">\n                  {\"overpassAll\" in overpassData &&\n                  overpassData.overpassAll.effective_date !== null\n                    ? overpassData.overpassAll.effective_date\n                    : new Date()}\n                </Moment>\n              </center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center>\n                <h1>\n                  {\"overpassOn\" in overpassData\n                    ? (overpassData.overpassOn.cnt === null) ? 0 : overpassData.overpassOn.cnt\n                    : 0}\n                </h1>\n              </center>\n              <center className=\"text-success\"><b>สะพานลอยที่เปิดไฟ</b></center>\n            </CCardBody>\n            <CCardFooter className=\"bg-success\">\n              <center>\n                <Moment format=\"DD/MM/YYYY HH:mm:ss\">\n                  {\"overpassOn\" in overpassData &&\n                  overpassData.overpassOn.effective_date !== null\n                    ? overpassData.overpassOn.effective_date\n                    : new Date()}\n                </Moment>\n              </center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"6\" md=\"3\">\n          <CCard>\n            <CCardBody>\n              <center>\n                <h1>\n                  {\"overpassOff\" in overpassData\n                    ? (overpassData.overpassOff.cnt === null) ? 0 : overpassData.overpassOff.cnt\n                    : 0}\n                </h1>\n              </center>\n              <center className=\"text-danger\"><b>สะพานลอยที่ปิดไฟ/มีไฟดับ</b></center>\n            </CCardBody>\n            <CCardFooter className=\"bg-danger text-white\">\n              <center>\n                <Moment format=\"DD/MM/YYYY HH:mm:ss\">\n                  {\"overpassOff\" in overpassData &&\n                  overpassData.overpassOff.effective_date !== null\n                    ? overpassData.overpassOff.effective_date\n                    : new Date()}\n                </Moment>\n              </center>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"9\" sm=\"12\" className=\"mb-4\">\n          <CCard>\n            <CCardBody>\n              <CCard>\n                <CCardBody>\n                  <CTabs activeTab=\"home\">\n                    <CNav variant=\"tabs\">\n                      <CNavItem>\n                        <CNavLink data-tab=\"home\">\n                          ปริมาณข้อมูลรายเดือน\n                        </CNavLink>\n                      </CNavItem>\n                      <CNavItem>\n                        <CNavLink data-tab=\"profile\" className={\"text-mute\"}>\n                          อัตราอุปกรณ์ไฟฟ้าดับ\n                        </CNavLink>\n                      </CNavItem>\n                    </CNav>\n                    <CTabContent>\n                      <CTabPane data-tab=\"home\">\n                        <CRow>\n                          <CCol>\n                          <Chart\n                              options={graphOptions.options}\n                              series={graphOptions.series}\n                              type=\"bar\"\n                              width=\"100%\"\n                              height='300px'\n                              yaxis={graphOptions.yaxis}\n                              \n                            />\n                          </CCol>\n                        </CRow>\n                      </CTabPane>\n                      <CTabPane data-tab=\"profile\">\n                        <CChartDoughnut\n                          datasets={[\n                            {\n                              backgroundColor: backgroundColorDonut,\n                              data: dataDonut\n                            }\n                          ]}\n                          labels={labelsDonut}\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CTabPane>\n                    </CTabContent>\n                  </CTabs>\n                </CCardBody>\n              </CCard>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"3\" sm=\"3\">\n          <CListGroup>\n            <CListGroupItem>\n              <b className={\"float-left\"}>Top Referrals</b>\n              <b className=\"float-right\">\n                <CLink\n                  href=\"\"\n                  target=\"_blank\"\n                >\n                  View Report\n                </CLink>\n              </b>\n            </CListGroupItem>\n            <CListGroupItem>\n              <span className=\"float-left\">\n                หัวเรื่อง/แหล่งที่มา\n              </span>\n              <span className=\"float-right\">จำนวน</span>\n            </CListGroupItem>\n            <CListGroupItem>\n              <span className=\"float-left\">\n                อุปกรณ์ไฟฟ้าติดสูงสุด\n              </span>\n              <span style={{marginLeft:\"2em\"}}>{overpassOnMax}</span>\n              <span className=\"float-right\"> จุด</span>\n            </CListGroupItem>\n            <CListGroupItem>\n              <span className=\"float-left\">\n                อุปกรณ์ไฟฟ้าดับสูงสุด\n              </span>\n              <span style={{marginLeft:\"2em\"}}>{overpassOffMax}</span>\n              <span className=\"float-right\"> จุด</span>\n            </CListGroupItem>\n            <CListGroupItem>\n              <span className=\"float-left\">\n                อุปกรณ์ไฟฟ้าเสียร้อยละ\n              </span>\n              <span style={{marginLeft:\"1.5em\"}}>{overpassOffAverage}</span>\n              <span className=\"float-right\">  </span>\n            </CListGroupItem>\n            {/*<CListGroupItem>\n              <span className=\"float-left\">\n                แจ้งเตือนข้อมูลสะสม\n              </span>\n              <span className=\"float-right\">จำนวน</span>\n            </CListGroupItem>*/}\n          </CListGroup>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/alerts/Alerts.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/icons/flags/Flags.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/Charts.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/theme/colors/Colors.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/badges/Badges.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/theme/typography/Typography.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/icons/brands/Brands.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/modals/Modals.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/button-groups/ButtonGroups.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/brand-buttons/BrandButtons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/buttons/buttons/Buttons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/tabs/Tabs.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/paginations/Pagnations.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/popovers/Popovers.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/switches/Switches.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/progress-bar/ProgressBar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/tooltips/Tooltips.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/navbars/Navbars.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/navs/Navs.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/list-groups/ListGroups.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/collapses/Collapses.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/jumbotrons/Jumbotrons.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/carousels/Carousels.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/cards/Cards.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/base/breadcrumbs/Breadcrumbs.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/widgets/WidgetsBrand.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/spinners/Spinners.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/widgets/WidgetsDropdown.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/MainChartExample.js",[],["1594","1595"],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/ChartBarSimple.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/charts/ChartLineSimple.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/utils/common.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/DeviceStatus.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/notifications/toaster/Toaster.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/google-maps/GoogleMaps.js",["1596"],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/draggable/Draggable.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/calendar/Calendar.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/advanced-forms/AdvancedForms.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/apps/invoicing/Invoice.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/basic-forms/BasicForms.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/validation-forms/ValidationForms.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/editors/code-editors/CodeEditors.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/editors/text-editors/TextEditors.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/UserService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/users/UserAddEdit.js",["1597","1598","1599","1600","1601"],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CRow,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CSelect,\n  CForm,\n  CInvalidFeedback,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport { addUser, editUser } from \"src/services/UserService\";\nimport { useSelector } from \"react-redux\";\nimport { getMappingOverPassAll } from \"src/services/MappingService\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { capitalize } from \"src/utils/common\";\nimport { roleUserControl, userFullAccess } from \"src/config\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Redirect } from \"react-router-dom\";\nimport UploadPreview from \"src/components/UploadPreview\"\n\n\nconst MySwal = withReactContent(Swal);\n\nconst UserAddEdit = (props) => {\n  const {\n    action,\n    modal,\n    setModal,\n    itemDetail,\n    reloadData,\n    roles,\n    statuses,\n    prefixes,\n    handleReset,\n  } = props;\n  const formikRef = useRef();\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const isEdit = action === \"add\" ? false : true;\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [loading, setLoading] = useState(false);\n  const userRole = useSelector((state) => state.authen.role);\n  const [groupList, setGroupList] = useState([]);\n  const [imageProfile, setImageProfile] = useState(null);\n\n  const addUserSchema = () => {\n    let schema = {\n      username: Yup.string()\n        .min(2, \"Username has to be at least 2 characters\")\n        .required(\"Username is required!\"),\n      prefix: Yup.string().required(\"Prefix is required!\"),\n      firstName: Yup.string().required(\"Firstname is required!\"),\n      lastName: Yup.string().required(\"Lastname is required!\"),\n      email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Email is required!\"),\n      lineId: Yup.string().required(\"Line ID is required!\"),\n      mobileNo: Yup.string()\n        .matches(/[0]{1}\\d{9}/, \"Mobile No must contain only numbers\")\n        .required(\"Mobile No is required!\"),\n      role: Yup.string().required(\"Role is required!\"),\n      groupId: Yup.string().required(\"Group is required!\"),\n      \n    };\n    if(isEdit){\n      schema = {...schema, status: Yup.string().required(\"Status is required!\"),}\n    }\n    return Yup.object().shape(schema);\n  };\n\n  const handleCloseAddModal = (e, handleReset) => {\n    handleReset();\n    setModal(false);\n  };\n\n  const handleAdd = (values, { resetForm }) => {\n    const {\n      username,\n      prefix,\n      firstName,\n      lastName,\n      role,\n      email,\n      lineId,\n      mobileNo,\n      groupId,\n      status\n    } = values;\n    let body = new FormData();\n    body.append(\"username\", username);\n    body.append(\"prefix\", prefix);\n    body.append(\"firstName\", firstName);\n    body.append(\"lastName\", lastName);\n    body.append(\"role\", role);\n    body.append(\"email\", email);\n    body.append(\"lineId\", lineId);\n    body.append(\"mobileNo\", mobileNo);\n    body.append(\"groupId\", groupId);\n    body.append(\"status\", status);\n    body.append(\"imageProfile\", imageProfile);\n\n    /*if (userFullAccess.includes(userRole)) {\n      body = {\n        ...body,\n      };\n    }*/\n    if(isEdit){\n      editUser(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          //handleReset();\n          setLoading(false);\n          MySwal.fire({\n            title: \"Success\",\n            text: \"Edit user information successfully  \",\n            icon: \"success\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        } else {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm(initialValues);\n      });\n    }else{\n      addUser(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          //handleReset();\n          setLoading(false);\n          MySwal.fire({\n            title: \"Success\",\n            text: \"Add user information successfully  \",\n            icon: \"success\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        } else {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm(initialValues);\n      });\n    }\n  };\n\n  const changeImageProfile = e => {\n    console.log(e)\n    setImageProfile(e)\n  }\n\n  useEffect(() => {\n    if(groupList.length === 0){\n      getMappingOverPassAll(accessToken).then(({ status, data }) => {\n        return status === 200 ? setGroupList(data) : setGroupList([]);\n      });\n    }\n    \n    formikRef.current.resetForm();\n    if(isEdit){\n      \n     formikRef.current.setFieldValue(\"username\", itemDetail.username);\n     formikRef.current.setFieldValue(\"prefix\", itemDetail.prefixId);\n     formikRef.current.setFieldValue(\"firstName\", itemDetail.firstName);\n     formikRef.current.setFieldValue(\"lastName\", itemDetail.lastName);\n     formikRef.current.setFieldValue(\"email\", itemDetail.email);\n     formikRef.current.setFieldValue(\"lineId\", itemDetail.lineId);\n     formikRef.current.setFieldValue(\"mobileNo\", itemDetail.mobileNo);\n     formikRef.current.setFieldValue(\"role\", itemDetail.role);\n     formikRef.current.setFieldValue(\"groupId\", itemDetail.groupId);\n     formikRef.current.setFieldValue(\"status\", itemDetail.status);\n     //formikRef.current.setFieldValue(\"imageProfile\", PATH_IMAGE_PROFILE + \"/\" + itemDetail.iamge);\n    }\n  }, [modal]);\n\n  if (!isAuth) {\n    return <Redirect to=\"/\" />;\n  } else if (!['SUPER_ADMIN', 'ADMIN'].includes(userRole)) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Formik\n      innerRef={formikRef}\n      enableReinitializing={true}\n      initialValues={{\n        username: \"\",\n        prefix: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        lineId: \"\",\n        mobileNo: \"\",\n        role: \"\",\n        groupId: \"\",\n        status: \"ACTIVE\",\n      }}\n      validationSchema={addUserSchema}\n      onSubmit={handleAdd}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset,\n      }) => (\n        <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n          <CModal size=\"lg\" centered show={modal} closeOnBackdrop={false}>\n            {loading && (\n              <div className={loading ? \"spinner-container\" : \"\"}>\n                <div className=\"position-absolute spinner-center\">\n                  <div className=\"sk-grid mx-auto\">\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                  </div>\n                  <div className=\"text-center\">Loading....</div>\n                </div>\n              </div>\n            )}\n            <CModalBody className=\"p-4\">\n              <CRow>\n                <CCol xs={12} md={4} lg={3}>\n                  <h4>{(isEdit) ? \"แก้ไขผู้ใช้งาน\" : \"เพิ่มผู้ใช้งาน\"}</h4>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n                  <CFormGroup>\n                    <CCol md=\"3\">\n                      <CLabel className=\"font-weight-bold\">Username:</CLabel>\n                    </CCol>\n                    <CCol xs={12} md={9} lg={8}>\n                      <CInput\n                        id=\"username\"\n                        name=\"username\"\n                        placeholder=\"\"\n                        valid={!!values.username}\n                        invalid={touched.username && !!errors.username}\n                        value={values.username}\n                        disabled={isEdit}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.username}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        คำนำหน้า:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"prefix\"\n                        id=\"prefix\"\n                        valid={!!values.prefix}\n                        invalid={touched.prefix && !!errors.prefix}\n                        value={values.prefix}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {prefixes.map((prefix) => (\n                          <option key={prefix.key} value={prefix.key}>\n                            {prefix.value}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.prefix}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        ชื่อ:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        valid={!!values.firstName}\n                        invalid={touched.firstName && !!errors.firstName}\n                        placeholder=\"\"\n                        value={values.firstName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.firstName}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        นามสกุล:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        placeholder=\"\"\n                        valid={!!values.lastName}\n                        invalid={touched.lastName && !!errors.lastName}\n                        value={values.lastName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lastName}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Email:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"\"\n                        valid={!!values.email}\n                        invalid={touched.email && !!errors.email}\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.email}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Line ID:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"lineId\"\n                        name=\"lineId\"\n                        placeholder=\"\"\n                        valid={!!values.lineId}\n                        invalid={touched.lineId && !!errors.lineId}\n                        value={values.lineId}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lineId}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Mobile No:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <TextMask\n                        placeholder=\"\"\n                        mask={[\n                          /[0]/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                          /\\d/,\n                        ]}\n                        id=\"mobileNo\"\n                        name=\"mobileNo\"\n                        Component={InputAdapter}\n                        className={`form-control ${\n                          errors.mobileNo && touched.mobileNo\n                            ? \"is-invalid\"\n                            : \"\"\n                        } ${values.mobileNo ? \"is-valid\" : \"\"}`}\n                        value={values.mobileNo}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.mobileNo}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Role:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"role\"\n                        id=\"role\"\n                        valid={!!values.role}\n                        invalid={touched.role && !!errors.role}\n                        value={values.role}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {roles.map(\n                          (role) =>\n                            roleUserControl[userRole].includes(role.value) && (\n                              <option key={role.key} value={role.key}>\n                                {capitalize(role.value.toLowerCase())}\n                              </option>\n                            )\n                        )}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.role}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                {(isEdit) &&\n                  <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Status:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"status\"\n                        id=\"status\"\n                        valid={!!values.status}\n                        invalid={touched.status && !!errors.status}\n                        value={values.status}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {statuses.map((status) => (\n                          <option key={status.key} value={status.value}>\n                            {status.value}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.status}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n\n                }\n                \n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Group:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"groupId\"\n                        id=\"groupId\"\n                        valid={!!values.groupId}\n                        invalid={touched.groupId && !!errors.groupId}\n                        value={values.groupId}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"0\">Please select</option>\n                        {groupList.map((group) => (\n                          <option key={group.id} value={group.id}>\n                            {group.groupName}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.groupId}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={12} lg={12}>\n                \n                 {/* <UploadPreview onInputChange={changeImageProfile}/>*/}\n                </CCol>\n              </CRow>\n            </CModalBody>\n            <CModalFooter>\n              <CButton\n                type=\"reset\"\n                color=\"light\"\n                onClick={(e) => handleCloseAddModal(e, handleReset)}\n              >\n                Cancel\n              </CButton>\n              <CButton type=\"submit\" color=\"primary\" disabled={loading}>\n                Confirm\n              </CButton>{\" \"}\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      )}\n    </Formik>\n  )\n};\n\nexport default UserAddEdit;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/MappingService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/OverpassService.js",["1602"],"import { post, get } from \"./CommonService\";\n\nexport const getOverpasses = async (token, body = {}) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  const filter = body.filter;\n\n  try {\n    const request = await post(\n      \"api/overpass/searchOverpass\",\n      filter ? { ...body } : { ...body, filter: {} },\n      headers\n    );\n    return request.data;\n  } catch (err) {\n    return err.response.data;\n  }\n};\n\nexport const searchOverpassesByUserId = async (token, body = {}) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n  const filter = body.filter;\n\n  try {\n    const request = await post(\n      \"api/overpass/searchOverpassesByUserId\",\n      body,\n      headers\n    );\n    return request;\n  } catch (err) {\n    return err.response.data;\n  }\n};\n\nexport const getOverpassesAll = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    const request = await get(\n      \"api/overpass\", \"\",\n      headers\n    );\n    return request;\n  } catch (err) {\n    return err.response.data;\n  }\n};\n\nexport const getOverpassesByCond = async (token, provinceId = null, amphurId = null, districtId = null) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    var array = [];\n    if(provinceId !== null && provinceId !== \"\"){\n      array.push(\"provinceId=\".concat(provinceId));\n    }\n    if(amphurId !== null && amphurId !== \"\"){\n      array.push(\"amphurId=\".concat(amphurId));\n    }\n    if(districtId !== null && districtId !== \"\"){\n      array.push(\"districtId=\".concat(districtId));\n    }\n    let q = \"\";\n    if(array.length > 0){\n      array.forEach((item, i) => {\n        q += item.concat(\"&\");\n      });\n      q = q.substring(0, q.length - 1);\n    }\n    const request = await get(\n      \"api/overpass\", q,\n      headers\n    );\n    return request;\n  } catch (err) {\n    return err.response.data;\n  }\n};\n\nexport const editOverpass = async (token, body = {}) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    const response = await post(\"api/overpass/update\", body, headers);\n    return response;\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport const addOverpass = async (token, body = {}) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    const response = await post(\"api/overpass/save\", body, headers);\n    return response;\n  } catch (err) {\n    return err.response.data;\n  }\n};\n\nexport const deleteOverpass = async (token, id) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  const body = new FormData();\n  body.append(\"id\", id);\n\n  try {\n    const response = await post(\"api/overpass/delete\", body, headers);\n    return response;\n  } catch (err) {\n    return err.response.data;\n  }\n};\n\nexport const getLightBulbAll = async (token) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    const request = await get(\n      \"api/overpass/getLightBulb\", \"\",\n      headers\n    );\n    return request;\n  } catch (err) {\n    return err.response.data;\n  }\n};\nexport const getOverpassStatusByGroupId = async (token, overpassGroup) => {\n  const headers = {\n    Authorization: `Bearer ${token}`,\n  };\n\n  try {\n    const request = await get(\n      \"api/overpass/getOverpassStatusByGroupId\", `groupId=${overpassGroup}`,\n      headers\n    );\n    return request;\n  } catch (err) {\n    return err.response.data;\n  }\n};","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/plugins/draggable/_layouts.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/editors/code-editors/_examples.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/index.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/forms/advanced-forms/states.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/overpass/OverpassAddEdit.js",["1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CRow,\n  CCol,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CSelect,\n  CForm,\n  CInvalidFeedback,\n} from \"@coreui/react\";\nimport { TextMask, InputAdapter } from \"react-text-mask-hoc\";\nimport { addOverpass, editOverpass, getLightBulbAll } from \"src/services/OverpassService\";\nimport { useSelector } from \"react-redux\";\n\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { capitalize } from \"src/utils/common\";\nimport { roleUserControl, userFullAccess } from \"src/config\";\nimport * as Yup from \"yup\";\nimport { Formik, Field } from \"formik\";\n\nconst MySwal = withReactContent(Swal);\n\nconst OverpassAddEdit = (props) => {\n  const {\n    action,\n    modal,\n    setModal,\n    itemDetail,\n    reloadData,\n    provinces,\n    statuses,\n    handleReset\n  } = props;\n\n  const formikRef = useRef();\n  const isEdit = action === \"add\" ? false : true;\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [loading, setLoading] = useState(false);\n  const [amphurs, setAmphurs] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [lightBulbs, setLightBulbs] = useState([]);\n\n  const addUserSchema = () => {\n    let schema = {\n      id: Yup.string()\n        //.min(2, \"Username has to be at least 2 characters\")\n        .required(\"ID is required!\"),\n      name: Yup.string().required(\"Name is required!\"),\n      province: Yup.string().required(\"Province is required!\"),\n      amphur: Yup.string().required(\"Amphur is required!\"),\n      //district: Yup.string().required(\"District is required!\"),\n      latitude: Yup.string().required(\"Latitude is required!\"),\n      longtitude: Yup.string().required(\"Longtitude is required!\"),\n      setpointWatt: Yup.string().required(\"Setpoint Watt is required!\"),\n      status: Yup.string().required(\"Status is required!\"),\n      lightBulbId: Yup.string().required(\"ระบุประเภทหลอดไฟ\"),\n      lightBulbCnt: Yup.string().required(\"ระบุจำนวนลอดไฟ\"),\n    };\n\n    return Yup.object().shape(schema);\n  };\n\n  const selectProvince = (id) => {\n    let a = provinces.find((val) => { return val.key == id });\n\n    formikRef.current.setFieldValue(\"province\", id);\n    formikRef.current.setFieldValue(\"postcode\", \"\");\n    setAmphurs(a ?  a.amphur : []);\n    setDistricts([]);\n  };\n  \n  const selectAmphur = (e) => {\n    let id = e.target.value;\n    let ds = amphurs.find((val) => { return val.key == id });\n    setDistricts(ds ? ds.district : []);\n    formikRef.current.setFieldValue(\"amphur\", id);\n    formikRef.current.setFieldValue(\"postcode\", amphurs.find((val) => { return val.key == id }).postCode);\n  };\n\n\n  const handleCloseAddModal = () => {\n   setModal(false);\n  };\n\n  const handleAdd = (values, { resetForm }) => {\n    \n   const {\n      id,\n      name,\n      location,\n      district,\n      amphur,\n      province,\n      latitude,\n      longtitude,\n      postcode,\n      status,\n      lightBulbId,\n      lightBulbCnt\n    } = values;\n\n    let body = {\n      id,\n      name,\n      location,\n      district,\n      amphur,\n      province,\n      postcode,\n      latitude,\n      longtitude,\n      status,\n      lightBulbId,\n      lightBulbCnt\n    };\n    \n    if(isEdit){\n      editOverpass(accessToken, body)\n      .then((response) => {\n        handleReset();\n        if (response.status === 200) {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Success\",\n            text: \"แก้ไขสะพานลอยสำเร็จ  \",\n            icon: \"success\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        } else {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        }\n      })\n      .then(() => {\n        //resetForm();\n      });\n    }else{\n      addOverpass(accessToken, body)\n      .then((response) => {\n        if (response.status === 200) {\n          handleReset();\n          setLoading(false);\n          MySwal.fire({\n            title: \"Success\",\n            text: \"เพิ่มสะพานลอยสำเร็จ  \",\n            icon: \"success\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        } else {\n          setLoading(false);\n          MySwal.fire({\n            title: \"Failed\",\n            text: response.data,\n            icon: \"error\",\n            didClose: () => {\n              setModal(false);\n              reloadData();\n            },\n          });\n        }\n      })\n      .then(() => {\n        resetForm();\n      });\n    }\n  };\n  useEffect(() => {\n    formikRef.current.resetForm();\n    getLightBulbAll(accessToken).then(({ status, data }) => {\n      return status === 200 ? setLightBulbs(data) : setLightBulbs([]);\n    });\n    if(isEdit){\n      if(itemDetail.province){\n        let a = provinces.find((val) => { return val.key == itemDetail.province });\n        setAmphurs(a.amphur);\n        let d = a.amphur.find((val) => { return val.key == itemDetail.amphur });\n        if(d !== null){\n          setDistricts(d.district);\n        }\n      }\n      formikRef.current.setFieldValue(\"id\", itemDetail.id);\n      formikRef.current.setFieldValue(\"name\", itemDetail.name);\n      formikRef.current.setFieldValue(\"setpointWatt\", itemDetail.setpointWatt);\n      formikRef.current.setFieldValue(\"latitude\", itemDetail.latitude);\n      formikRef.current.setFieldValue(\"longtitude\", itemDetail.longtitude);\n      formikRef.current.setFieldValue(\"district\", itemDetail.district);\n      formikRef.current.setFieldValue(\"amphur\", itemDetail.amphur);\n      formikRef.current.setFieldValue(\"province\", itemDetail.province);\n      formikRef.current.setFieldValue(\"postcode\", itemDetail.postcode);\n      formikRef.current.setFieldValue(\"location\", itemDetail.location);\n      formikRef.current.setFieldValue(\"status\", itemDetail.status);\n      formikRef.current.setFieldValue(\"lightBulbId\", itemDetail.lightBulbId);\n      formikRef.current.setFieldValue(\"lightBulbCnt\", itemDetail.lightBulbCnt);\n    }\n  }, [itemDetail, isEdit]);\n  \n  return (\n    <Formik\n      innerRef={formikRef}\n      enableReinitializing={true}\n      initialValues={{ \n        id: \"\",\n        name: \"\",\n        setpointWatt: 0,\n        latitude: \"\",\n        longtitude: \"\",\n        location: \"\",\n        district: \"\",\n        amphur: \"\",\n        province: \"\",\n        postcode: \"\",\n        status: \"\",\n        lightBulbId: \"\",\n        lightBulbCnt: 0,\n      }}\n      validationSchema={addUserSchema}\n      onSubmit={handleAdd}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      }) => \n      (\n        <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n          <CModal size=\"lg\" centered show={modal} closeOnBackdrop={false} onClose={handleCloseAddModal}>\n            {loading && (\n              <div className={loading ? \"spinner-container\" : \"\"}>\n                <div className=\"position-absolute spinner-center\">\n                  <div className=\"sk-grid mx-auto\">\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                    <div className=\"sk-grid-cube\"></div>\n                  </div>\n                  <div className=\"text-center\">Loading....</div>\n                </div>\n              </div>\n            )}\n            <CModalBody className=\"p-4\">\n              <CRow>\n                <CCol xs={6} md={6} lg={6} className=\"mb-3 mt-2\">\n                  <h4>{(isEdit) ? \"แก้ไขสะพานลอย\" : \"เพิ่มสะพานลอย\"}</h4>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol md=\"3\">\n                      <CLabel className=\"font-weight-bold\">ID:</CLabel>\n                    </CCol>\n                    <CCol xs={12}>\n                      <CInput\n                        id=\"id\"\n                        name=\"id\"\n                        placeholder=\"\"\n                        valid={!!values.id}\n                        invalid={touched.id && !!errors.id}\n                        value={values.id}\n                        disabled={isEdit}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.id}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        ชื่อสะพานลอย:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"name\"\n                        name=\"name\"\n                        valid={!!values.name}\n                        invalid={touched.name && !!errors.name}\n                        placeholder=\"\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol xs={8}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        สถานที่:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"location\"\n                        name=\"location\"\n                        valid={!!values.location}\n                        invalid={touched.location && !!errors.location}\n                        placeholder=\"\"\n                        value={values.location}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        จังหวัด:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"province\"\n                        id=\"province\"\n                        onChange={e => {\n                          handleChange(e);\n                          selectProvince(e.target.value);\n                        }}\n                        onBlur={handleBlur}\n                        valid={!!values.province}\n                        invalid={touched.province && !!errors.province}\n                        value={values.province}\n                      >\n                        <option value=\"\">Please select</option>\n                        {provinces.map((province) => (\n                          <option key={province.key} value={province.key}>\n                            {capitalize(province.value.toLowerCase())}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.province}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol xs={6}>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        อำเภอ/เขต:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"amphur\"\n                        id=\"amphur\"\n                        onChange={e => {\n                          handleChange(e);\n                          selectAmphur(e);\n                        }}\n                        onBlur={handleBlur}\n                        valid={!!values.amphur}\n                        invalid={touched.amphur && !!errors.amphur}\n                        value={values.amphur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {amphurs.map((amphur) => (\n                          <option key={amphur.key} value={amphur.key}>\n                            {capitalize(amphur.value.toLowerCase())}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.amphur}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        ตำบล/แขวง:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"district\"\n                        id=\"district\"\n                        onChange={e => {\n                          handleChange(e);\n                        }}\n                        onBlur={handleBlur}\n                        valid={!!values.amphurdistrict}\n                        invalid={touched.district && !!errors.district}\n                        value={values.district}\n                      >\n                        <option value=\"\">Please select</option>\n                        {districts.map((district) => (\n                          <option key={district.key} value={district.key}>\n                            {capitalize(district.value.toLowerCase())}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.district}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        รหัสไปรษณีย์:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"postcode\"\n                        name=\"postcode\"\n                        valid={!!values.postcode}\n                        invalid={touched.postcode && !!errors.postcode}\n                        placeholder=\"\"\n                        value={values.postcode}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        readOnly={!!values.postcode}\n                      />\n                      <CInvalidFeedback>{errors.postcode}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Latitude:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"latitude\"\n                        name=\"latitude\"\n                        valid={!!values.latitude}\n                        invalid={touched.latitude && !!errors.latitude}\n                        placeholder=\"\"\n                        value={values.latitude}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.latitude}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        Longtitude:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"longtitude\"\n                        name=\"longtitude\"\n                        valid={!!values.longtitude}\n                        invalid={touched.longtitude && !!errors.longtitude}\n                        placeholder=\"\"\n                        value={values.longtitude}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.longtitude}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        สถานะ:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"status\"\n                        id=\"status\"\n                        valid={!!values.status}\n                        invalid={touched.status && !!errors.status}\n                        value={values.status}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {statuses.map((status) => (\n                          <option key={status.key} value={status.value}>\n                            {status.value}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.status}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        ประเภทหลอดไฟ:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CSelect\n                        custom\n                        name=\"lightBulbId\"\n                        id=\"lightBulbId\"\n                        valid={!!values.lightBulbId}\n                        invalid={touched.lightBulbId && !!errors.lightBulbId}\n                        value={values.lightBulbId}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      >\n                        <option value=\"\">Please select</option>\n                        {lightBulbs.map((light) => (\n                          <option key={light.id} value={light.id}>\n                            {light.lightName}\n                          </option>\n                        ))}\n                      </CSelect>\n                      <CInvalidFeedback>{errors.lightBulbId}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n                <CCol xs={12} md={4} lg={4}>\n                  <CFormGroup>\n                    <CCol>\n                      <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n                        จำนวนหลอด:\n                      </CLabel>\n                    </CCol>\n                    <CCol>\n                      <CInput\n                        id=\"lightBulbCnt\"\n                        name=\"lightBulbCnt\"\n                        valid={!!values.lightBulbCnt}\n                        invalid={touched.lightBulbCnt && !!errors.lightBulbCnt}\n                        placeholder=\"\"\n                        value={values.lightBulbCnt}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lightBulbCnt}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n            </CModalBody>\n            <CModalFooter>\n              <CButton\n                type=\"reset\"\n                color=\"light\"\n                onClick={(e) => handleCloseAddModal()}\n              >\n                Cancel\n              </CButton>\n              <CButton type=\"submit\" color=\"primary\" disabled={loading}>\n                Confirm\n              </CButton>{\" \"}\n            </CModalFooter>\n          </CModal>\n        </CForm>\n      )}\n    </Formik>               \n  )\n};\n\nexport default OverpassAddEdit;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/DocsLink.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/reusable/ProBadge.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/DashboardService.js",["1614"],"import { post, get } from \"./CommonService\";\nimport axios from \"axios\";\n\nexport const getDataOverpass = async (token) => {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    try {\n      const request = await get(\n        \"api/dashboard/getDataOverpass\", \"\",\n        headers\n      );\n      return request;\n    } catch (err) {\n      return err.response.data;\n    }\n};\n\n\nexport const send = async () => {\n    const fetchOptions = {\n          \"collapse_key\" : \"type_a\",\n          \"notification\" : {\n              \"body\" : \"Body of Your Notification\",\n              \"title\": \"Title of Your Notification\",\n              \"icon\": \"http://www.liberaldictionary.com/wp-content/uploads/2019/02/icon-0326.jpg\"\n          },\n          \"data\" : {\n              \"body\" : \"Body of Your Notification in Data\",\n              \"title\": \"Title of Your Notification in Title\",\n              \"key_1\" : \"Value for key_1\",\n              \"key_2\" : \"Value for key_2\"\n          },\n          \"to\": \"eHmk3Bu1IU75wRI7ZTijSt:APA91bGtsfG4K7P_mNmuie03y27G8aoV9C26vLuSfC7rXmrh55CjE9fc7giaczYzuKtoAG5_LAZvfzh_qOCzVdS76jRsRjKwD2khSHL8WWkB92pexlGwVdwHLs35__Iy5_BFaFZGdWFx\"\n        \n      };\n      const headers = {\n        \"Authorization\": `key=AAAAT6THNjA:APA91bEpVPiz1LpQUG0pY73PKowO8UyPCeVaV3aFusud1zMGUoeevW4BP-rwoGPqA2R72geNPWyBz7fqnkcr214OxXZovTB0gK937kEK66vJlgDejCp7J0iLAhVnWJuPgmwnnHXpvIWo`,\n        \"content-type\": \"application/json\"\n      };\n      return axios.post(`https://fcm.googleapis.com/fcm/send`, fetchOptions, { headers });\n     \n};","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/init-fcm.js",["1615"],"import firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n\nlet messaging = null\nif (firebase.messaging.isSupported()) {\n    const initializedFirebaseApp = firebase.initializeApp({\n        // Project Settings => Add Firebase to your web app\n        \n       apiKey: \"AIzaSyApvsqcGtSylU6OcOyO4dnerDz8zflqgkU\",\n       authDomain: \"overpass-b5e6f.firebaseapp.com\",\n       projectId: \"overpass-b5e6f\",\n       storageBucket: \"overpass-b5e6f.appspot.com\",\n       messagingSenderId: \"342066935344\",\n       appId: \"1:342066935344:web:db7b2acc1ec56330bf5ff5\",\n       measurementId: \"G-X574B1ED6M\"\n   });\n   messaging = initializedFirebaseApp.messaging();\n}\n\n\nconst subscribeTokenToTopic = (token, topic) => {\n    const fcm_server_key = \"AAAAT6THNjA:APA91bEpVPiz1LpQUG0pY73PKowO8UyPCeVaV3aFusud1zMGUoeevW4BP-rwoGPqA2R72geNPWyBz7fqnkcr214OxXZovTB0gK937kEK66vJlgDejCp7J0iLAhVnWJuPgmwnnHXpvIWo\";\n    fetch('https://iid.googleapis.com/iid/v1/'+token+'/rel/topics/'+topic, {\n      method: 'POST',\n      headers: new Headers({\n        'Authorization': 'key='+fcm_server_key\n      })\n    }).then(response => {\n      if (response.status < 200 || response.status >= 400) {\n        throw 'Error subscribing to topic: '+response.status + ' - ' + response.text();\n      }\n      console.log('Subscribed to \"'+topic+'\"');\n    }).catch(error => {\n      console.error(error);\n    })\n  }\nexport { messaging, subscribeTokenToTopic };\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/repairs/Repairs.js",["1616","1617"],"import React, { useState, useEffect } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n  CLink,\n} from '@coreui/react'\nimport \n    { getOverpassStatusByGroupId }\n   from \"src/services/OverpassService\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport Moment from \"react-moment\";\n\nimport { Redirect } from \"react-router-dom\";\nimport { redirect } from \"../../actions/redirect\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Repairs = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const isAuth = useSelector((state) => state.authen.isAuth);\n    const accessToken = useSelector((state) => state.authen.access_token);\n    const overpassGroup = useSelector((state) => state.authen.overpassGroup);\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(1);\n    const [dataAll, setDataAll] = useState([]);\n    const [dataPage, setDataPage] = useState([]);\n    const limit = 20;\n\n    const handleChange = (event, value) => {\n        setPage(value);\n        setupData(value);\n    };\n\n    const setupData = (page) => {\n        if(dataAll.length > 0){\n            let arr = [];\n            let j = ((page * limit) >= dataAll.length) ? dataAll.length : page * limit;\n            console.log(j);\n            for(let i = (page - 1) * limit ; i < j; i++){\n                arr[arr.length] = dataAll[i];\n            }\n            setDataPage(arr);\n        }\n    }\n\n    const getoDetail = (id) => {\n        dispatch(redirect(`/repairs/${id}` ));\n        history.push({\n          pathname: `/repairs/${id}`\n        })\n    }\n\n    useEffect(() => { \n        setupData(1);\n    }, [dataAll])\n\n    useEffect(() => {\n \n        getOverpassStatusByGroupId(accessToken, overpassGroup).then(({ status, data }) => {\n          if(status === 200){\n              setCount(Math.ceil(data.length / limit));\n              setDataAll(data);\n          }\n        });\n    }, []);\n    if (!isAuth) {\n        return <Redirect to=\"/\" />;\n      } \n    return (\n        <CRow>\n        <CCol sm=\"12\" xl=\"12\">\n\n        <CCard>\n        <CCardHeader>\n            รายการแจ้งซ่อม\n        </CCardHeader>\n        <CCardBody>\n\n            <CListGroup>\n                {dataPage.map((value, index) => {\n                    return <CListGroupItem action  key={'g-' + index}>\n               \n                            <h5 className=\"d-flex w-100 justify-content-between\">\n                            \n                            <CLink\n                              onClick={() => getoDetail(value.id)}\n                              className={(value.status === 'OFF') ? \"text-danger\" : \"text-warning\"} \n                            >{value.topic}</CLink>\n                            </h5>\n                            <small>{value.effectiveDate}</small>\n                            \n                            <div className=\"mb-1\">\n                            <b>สถานที่</b>: {value.locationDisplay}\n                            </div>\n                            \n                            <div className=\"mb-1\" style={{display: (value.location !== \"\" && value.location !== null) ? \"\" : \"none\"}}>\n                            <b>Note</b>: {value.location}\n                            </div>\n                            <div className=\"mb-1\">\n                            <b>วันเวลาที่ได้รับแจ้ง</b>: <Moment format=\"DD/MM/YYYY HH:mm:ss\">{value.effectiveDate}</Moment>\n                            </div>\n                        </CListGroupItem>\n                    \n                })}\n                \n               \n            </CListGroup>\n            <div style={{marginTop: \"10px\"}}>\n            <Pagination count={count} page={page} onChange={handleChange} />\n            </div>\n        </CCardBody>\n        </CCard>\n        </CCol>\n        </CRow>\n    );\n}\nexport default Repairs","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/repairs/RepairDetail.js",["1618","1619","1620","1621","1622"],"import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CNavLink,\n  CFormGroup,\n  CLabel,\n  CTextarea,\n  CInput,\n  CButton,\n  CForm,\n  CInvalidFeedback\n} from \"@coreui/react\";\nimport { useSelector } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport {\n  insertAnswerOverpass,\n  getAnswerByOverpassStatusId,\n  getOverpassStatusById,\n} from \"src/services/answerService\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Swal from \"sweetalert2\";\nimport { API_KEY_GOOGLE_MAP } from \"../../config\";\nimport DatePicker from \"react-datepicker\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { convertTimestampToDatetime } from \"../../utils/common\"\n\nconst RepairDetail = (match) => {\n  const isAuth = useSelector((state) => state.authen.isAuth);\n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [header, setHeader] = useState({});\n  const [modal, setModal] = useState(false);\n  const formikRef = useRef();\n  const refFixedDate = useRef();\n  const [fixedDate, setFixedDate] = useState(new Date());\n  const MySwal = withReactContent(Swal);\n  const [disableRootCuase, setDisableRootCuase] = useState(false);\n  const [disableFixed, setDisableFixed] = useState(false);\n  const [disableFixedDate, setDisableFixedDate] = useState(false);\n  const [disableUserFixed, setDisableUserFixed] = useState(false);\n  const [disableSubmit, setDisableSubmit] = useState(false);\n\n  const addUserSchema = () => {\n    let schema = {\n      rootCuase: Yup.string().required(\"กรุณาระบุสาเหตุ\"),\n      fixed: Yup.string().required(\"กรุณาระบุว่าแก้ไขอย่างไร\"),\n      //fixedDate: Yup.string().required(\"กรุราระบุวันที่แก้ไข\"),\n      userFixed: Yup.string().required(\"กรุณาระบุผู้แก้ไข\"),\n    };\n\n    return Yup.object().shape(schema);\n  };\n\n  const handleAdd = (values, { resetForm }) => {\n    const {\n      rootCuase,\n      fixed,\n      userFixed\n     } = values;\n \n     let body = {\n      rootCuase,\n      fixed,\n      userFixed,\n      fixedDate: fixedDate.getTime(),\n      overpassStatusId: match.match.params.id\n     };\n     \n       insertAnswerOverpass(accessToken, body)\n       .then((response) => {\n         if (response.status === 200) {\n           //setLoading(false);\n           MySwal.fire({\n             title: \"Success\",\n             text: \"บันทึกข้อมูลสำเร็จ  \",\n             icon: \"success\",\n             didClose: () => {\n              setDisableRootCuase(true);\n              setDisableFixed(true);\n              setDisableFixedDate(true);\n              setDisableUserFixed(true);\n              setDisableSubmit(true);\n              setModal(false);\n               \n             },\n           });\n         } else {\n           //setLoading(false);\n           MySwal.fire({\n             title: \"Failed\",\n             text: response.data,\n             icon: \"error\",\n             didClose: () => {\n               setModal(false);\n              \n             },\n           });\n         }\n       })\n       .then(() => {\n         //resetForm();\n       });\n     \n   };\n  const MarkerList = (props) => {\n    return props.locations.map((lo, index) => {\n      return <MarkerWithInfoWindow key={index.toString()} location={lo} />;\n    });\n  };\n\n  const MarkerWithInfoWindow = ({ location }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    return (\n      <Marker\n        onClick={() => setIsOpen(!isOpen)}\n        position={location}\n        title={location.title}\n        label={location.label}\n      >\n        {isOpen && (\n          <InfoWindow onCloseClick={() => setIsOpen(false)}>\n            <CNavLink href={location.www} target=\"_blank\">\n              {location.title}\n            </CNavLink>\n          </InfoWindow>\n        )}\n      </Marker>\n    );\n  };\n\n  const GoogleMapsComponent = withScriptjs(\n    withGoogleMap((props) => {\n      return (\n        <GoogleMap defaultZoom={props.defaultZoom} defaultCenter={props.obj}>\n          {<MarkerList locations={props.locations} />}\n        </GoogleMap>\n      );\n    })\n  );\n\n  const googleMap = () => {\n    return (\n      <GoogleMapsComponent\n        key=\"map\"\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${API_KEY_GOOGLE_MAP}`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `400px` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    );\n  };\n\n  const genContent = useMemo(() => {\n    if (Object.keys(header).length > 0) {\n      return (\n        <CRow>\n          <CCol sm=\"12\" xl=\"12\">\n            <CCard>\n              <CCardHeader>\n                <h5\n                  className={\n                    header.status === \"OFF\" ? \"text-danger\" : \"text-warning\"\n                  }\n                >\n                  {header.topic}\n                </h5>\n              </CCardHeader>\n              <CCardBody>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"ccnumber\">\n                        <b>สถานที่</b> : {header.locationDisplay}\n                      </CLabel>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow\n                  style={{\n                    display:\n                      header.location !== \"\" && header.location !== null\n                        ? \"\"\n                        : \"none\",\n                  }}\n                >\n                  <CCol xs=\"12\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"ccnumber\">\n                        <b>Note</b>: {header.location}\n                      </CLabel>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n\n                <CRow>\n                  <CCol xs=\"12\">\n                    <CFormGroup>\n                      <b>วันเวลาที่ได้รับแจ้ง</b>:{\" \"}\n                      <Moment format=\"DD/MM/YYYY HH:mm:ss\">\n                        {header.effectiveDate}\n                      </Moment>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol xs=\"12\">\n                    <b>พิกัด</b>:\n                    <GoogleMapsComponent\n                      obj={{\n                        lat: parseFloat(header.latitude),\n                        lng: parseFloat(header.longtitude),\n                      }}\n                      locations={[\n                        {\n                          lat: parseFloat(header.latitude),\n                          lng: parseFloat(header.longtitude),\n                        },\n                      ]}\n                      defaultZoom={11}\n                      key=\"map\"\n                      googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${API_KEY_GOOGLE_MAP}`}\n                      loadingElement={<div style={{ height: `100%` }} />}\n                      containerElement={<div style={{ height: `400px` }} />}\n                      mapElement={<div style={{ height: `100%` }} />}\n                    />\n                  </CCol>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      );\n    }\n  }, [header]);\n\n  useEffect(() => {\n    getOverpassStatusById(accessToken, match.match.params.id).then(\n      ({ status, data }) => {\n        if (status === 200) {\n          console.log(data);\n          setHeader(data);\n          getAnswerByOverpassStatusId(accessToken, match.match.params.id).then(\n            ({ status, data }) => {\n              if (status === 200) {\n                console.log(data);\n                if(data.length > 0){\n                  formikRef.current.setFieldValue(\"rootCuase\", data[0].rootCuase);\n                  formikRef.current.setFieldValue(\"fixed\", data[0].fixed);\n                  formikRef.current.setFieldValue(\"userFixed\", data[0].userFixed);\n                  setFixedDate(convertTimestampToDatetime(data[0].fixedDate));\n                  setDisableRootCuase(true);\n                  setDisableFixed(true);\n                  setDisableFixedDate(true);\n                  setDisableUserFixed(true);\n                  setDisableSubmit(true);\n                  setModal(false);\n                }\n              }\n            }\n          );\n        }\n      }\n    );\n  }, []);\n\n  return (\n    <>\n      <div>{genContent}</div>\n      <Formik\n      innerRef={formikRef}\n      enableReinitializing={true}\n      initialValues={{ \n        rootCuase: \"\",\n        fixed: \"\",\n        userFixed: \"\",\n        //fixedDate: \"\",\n      }}\n      validationSchema={addUserSchema}\n      onSubmit={handleAdd}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleSubmit,\n        handleChange,\n        handleBlur\n      }) => \n      (\n        <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n\n      <CRow>\n        <CCol xs=\"12\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol xs=\"12\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"disabled-input\">\n                      <h5>สาเหตุ</h5>\n                    </CLabel>\n                    <CTextarea\n                      name=\"rootCuase\"\n                      id=\"rootCuase\"\n                      rows=\"9\"\n                      placeholder=\"\"\n                      valid={!!values.rootCuase}\n                      invalid={touched.rootCuase && !!errors.rootCuase}\n                      placeholder=\"\"\n                      value={values.rootCuase}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={disableRootCuase}\n                    />\n                    <CInvalidFeedback>{errors.rootCuase}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"disabled-input\">\n                      <h5>วิธีแก้ปัญหา</h5>\n                    </CLabel>\n                    <CTextarea\n                      name=\"fixed\"\n                      id=\"fixed\"\n                      rows=\"9\"\n                      valid={!!values.fixed}\n                      invalid={touched.fixed && !!errors.fixed}\n                      placeholder=\"\"\n                      value={values.fixed}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      disabled={disableFixed}\n                    />\n                    <CInvalidFeedback>{errors.fixed}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs=\"6\">\n                  <CFormGroup row>\n                    <CCol md=\"12\">\n                      <CLabel htmlFor=\"dateFixed\">วันที่แก้ไข</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"12\">\n                      <DatePicker\n                        selected={fixedDate}\n                        id=\"fixedDate\"\n                        name=\"fixedDate\"\n                        onChange={(e) => { setFixedDate(e);\n                        }}\n                        disabled={disableFixedDate}\n                        className=\"form-control\"\n                        showTimeSelect={true}\n                        dateFormat=\"Pp\"\n                        ref={refFixedDate}\n                      />\n                      <CInvalidFeedback>{errors.fixedDate}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n\n                <CCol xs=\"6\">\n                  <CFormGroup row>\n                    <CCol md=\"12\">\n                      <CLabel htmlFor=\"userFixed\">ผู้แก้ไข</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"12\">\n                      <CInput id=\"userFixed\" \n                        name=\"userFixed\"\n                        valid={!!values.userFixed}\n                        invalid={touched.userFixed && !!errors.userFixed}\n                        placeholder=\"\"\n                        value={values.userFixed}\n                        disabled={disableUserFixed}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                         />\n                      <CInvalidFeedback>{errors.userFixed}</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol>\n                  <CButton className=\"btn btn-primary\" type=\"submit\" disabled={disableSubmit}>\n                    บันทึก\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      </CForm>\n      )}\n    </Formik>               \n    </>\n  );\n};\n\nexport default RepairDetail;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/answerService.js",["1623"],"import { post, get } from \"./CommonService\";\n\nexport const insertAnswerOverpass = async (token, body = {}) => {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n    const filter = body.filter;\n  \n    try {\n      const request = await post(\n        \"api/answer/insertAnswerOverpass\",\n        body,\n        headers\n      );\n      return request;\n    } catch (err) {\n      return err.response.data;\n    }\n};\n\nexport const getAnswerByOverpassStatusId = async (token, id) => {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    try {\n      const request = await get(\n        \"api/answer/getAnswerByOverpassStatusId\", `id=${id}`,\n        headers\n      );\n      return request;\n    } catch (err) {\n      return err.response.data;\n    }\n  };\n\n  export const getOverpassStatusById = async (token, id) => {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    try {\n      const request = await get(\n        \"api/answer/getOverpassStatusById\", `id=${id}`,\n        headers\n      );\n      return request;\n    } catch (err) {\n      return err.response.data;\n    }\n  };","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/views/bulb/BulbLight.js",["1624"],"import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  saveLightBulb,\n  updateLightBulb,\n  getLightBulbList,\n  deleteLightBulb\n} from \"src/services/LightbulbService\";\nimport { useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport {\n  CCardBody,\n  CButton,\n  CDataTable,\n  CCard,\n  CForm,\n  CFormGroup,\n  CCol,\n  CLabel,\n  CInput,\n  CCardHeader,\n  CInvalidFeedback,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport \"spinkit/spinkit.min.css\";\n\nconst MySwal = withReactContent(Swal);\n\nconst BulbLight = () => {\n    \n  const accessToken = useSelector((state) => state.authen.access_token);\n  const [dataTable, setDataTable] = useState([]);\n  const formikRef = useRef();\n  const formikRefEdit = useRef();\n  const [deleteModal, setDeleteModal] = useState(false)\n  const [deleteName, setDeleteName] = useState(\"\")\n  const [deleteId, setDeleteId] = useState(\"\")\n  const [editModal, setEditModal] = useState(false)\n\n  const schema = () => {\n    let schema = {\n      lightName: Yup.string().required(\"Light bulb name is required!\"),\n      watt: Yup.string().required(\"Watt is required!\"),\n    };\n\n    return Yup.object().shape(schema);\n  };\n\n  const schemaEdit = () => {\n    let schema = {\n      lightNameEdit: Yup.string().required(\"Light bulb name is required!\"),\n      wattEdit: Yup.string().required(\"Watt is required!\"),\n    };\n\n    return Yup.object().shape(schema);\n  };\n\n  const clickRemove = (id, name) => {\n    setDeleteModal(true)\n    setDeleteId(id)\n    setDeleteName(name)\n  }\n\n  const confirmRemove = () => {\n    const body = {\n        id: deleteId\n      };\n      setDeleteModal(false)\n      deleteLightBulb(accessToken, body)\n        .then((response) => {\n        if (response.status === 200) {\n            MySwal.fire({\n                title: \"Success\",\n                text: \"ลบหลอดไฟสำเร็จ\",\n                icon: \"success\",\n                didClose: () => {\n                    getLightBulbList(accessToken).then(({ status, data }) => {\n                        if (status === 200) {\n                        setDataTable(data);\n                        }\n                    });\n                },\n            });\n        } else {\n            MySwal.fire({\n                title: \"Failed\",\n                text: \"มีสะพานลอยที่ใช้ค่าหลอดไฟนี้อยู่\",\n                icon: \"error\",\n                didClose: () => {},\n            });\n        }\n        })\n        .then(() => {});\n  };\n  const clickEdit = (item) => {\n    //setEditItem(item);\n    setEditModal(true)\n    \n    formikRefEdit.current.setFieldValue(\"lightNameEdit\", item.lightName)\n    formikRefEdit.current.setFieldValue(\"wattEdit\", item.watt)\n    formikRefEdit.current.setFieldValue(\"idEdit\", item.id)\n  };\n\n  const handleEdit = (values) => {\n    const body = {\n        id: values.idEdit,\n        lightName: values.lightNameEdit,\n        watt: values.wattEdit\n      };\n      updateLightBulb(accessToken, body)\n        .then((response) => {\n        setEditModal(false)\n        if (response.status === 200) {\n            \n            MySwal.fire({\n                title: \"Success\",\n                text: \"แก้ไขหลอดไฟสำเร็จ\",\n                icon: \"success\",\n                didClose: () => {\n                    getLightBulbList(accessToken).then(({ status, data }) => {\n                        if (status === 200) {\n                            setDataTable(data);\n                        }\n                    });\n                },\n            });\n        } else {\n            MySwal.fire({\n                title: \"Failed\",\n                text: response.data,\n                icon: \"error\",\n                didClose: () => {},\n            });\n        }\n        })\n        .then(() => {});\n  }\n\n  const handleAdd = (values) => {\n    const body = {\n        lightName: values.lightName,\n        watt: values.watt\n      };\n    \n      saveLightBulb(accessToken, body)\n        .then((response) => {\n        if (response.status === 200) {\n            MySwal.fire({\n                title: \"Success\",\n                text: \"เพิ่มหลอดไฟสำเร็จ\",\n                icon: \"success\",\n                didClose: () => {\n                    getLightBulbList(accessToken).then(({ status, data }) => {\n                        if (status === 200) {\n                        setDataTable(data);\n                        }\n                    });\n                },\n            });\n        } else {\n            MySwal.fire({\n                title: \"Failed\",\n                text: response.data,\n                icon: \"error\",\n                didClose: () => {},\n            });\n        }\n        })\n        .then(() => {});\n  };\n\n  useEffect(() => {\n    getLightBulbList(accessToken).then(({ status, data }) => {\n      if (status === 200) {\n        setDataTable(data);\n      }\n    });\n  }, []);\n  return (\n    <>\n      <CCard>\n        <CCardHeader>\n          <h5>เพิ่มหลอดไฟ</h5>\n        </CCardHeader>\n        <CCardBody>\n          <Formik\n            innerRef={formikRef}\n            enableReinitializing={true}\n            initialValues={{\n              watt: \"\",\n              lightName: \"\",\n            }}\n            validationSchema={schema}\n            onSubmit={handleAdd}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n                <CFormGroup row>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"lightName\">ชื่อหลอดไฟ</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput\n                        id=\"lightName\"\n                        name=\"lightName\"\n                        valid={!!values.lightName}\n                        invalid={touched.lightName && !!errors.lightName}\n                        value={values.lightName}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lightName}</CInvalidFeedback>\n                    </CCol>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"watt\">จำนวนวัตต์</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput\n                        id=\"watt\"\n                        name=\"watt\"\n                        valid={!!values.watt}\n                        invalid={touched.watt && !!errors.watt}\n                        value={values.watt}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.watt}</CInvalidFeedback>\n                    </CCol>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol xs=\"12\" md=\"6\">\n                    <CCol xs=\"12\" md=\"9\">\n                      <CButton\n                        type=\"submit\"\n                        className=\"mr-1 mb-1 btn btn-xl\"\n                        color=\"primary\"\n                      >\n                        Submit\n                      </CButton>\n                    </CCol>\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            )}\n          </Formik>\n        </CCardBody>\n      </CCard>\n      <CCard>\n        <CCardBody>\n          <CDataTable\n            items={dataTable}\n            fields={[\n              {\n                key: \"lightName\",\n                _style: { width: \"40%\" },\n                label: \"ชื่อหลอดไฟ\",\n              },\n              {\n                key: \"watt\",\n                _style: { width: \"10%\" },\n                filter: false,\n                label: \"จำนวนวัตต์\",\n              },\n              {\n                key: \"delete\",\n                label: \"แก้ไข/ลบ\",\n                filter: false,\n                _style: { width: \"5%\" },\n              },\n            ]}\n            scopedSlots={{\n              delete: (item) => (\n                <td>\n                  <CButton\n                    size=\"sm\"\n                    className=\"btn-github btn-brand mr-1 mb-1\"\n                    onClick={() => clickEdit(item)}\n                  >\n                    <CIcon size=\"sm\" name=\"cil-pencil\" />\n                  </CButton>\n                  <CButton\n                    size=\"sm\"\n                    className=\"btn-youtube btn-brand mr-1 mb-1\"\n                    onClick={() => clickRemove(item.id, item.lightName)}\n                  >\n                    <CIcon size=\"sm\" name=\"cil-trash\" />\n                  </CButton>\n                </td>\n              ),\n            }}\n            bordered\n            columnFilter\n            hover\n            sorter\n            pagination={false}\n          />\n        </CCardBody>\n      </CCard>\n      <CModal\n        centered\n        show={deleteModal}\n        closeOnBackdrop={false}\n        >\n        <CModalHeader>\n            <h5>คุณต้องการลบ ?</h5>\n        </CModalHeader>\n        <CModalBody>\n            ลบการตั้งค่าหลอดไฟ : <strong>{deleteName}</strong>\n        </CModalBody>\n        <CModalFooter>\n            <CButton color=\"light\" onClick={() => {setDeleteModal(false)}}>\n            Cancel\n            </CButton>\n            <CButton\n            color=\"danger\"\n            onClick={() => { confirmRemove() }}\n            >\n            Confirm\n            </CButton>{\" \"}\n        </CModalFooter>\n    </CModal>\n    <CModal\n        centered\n        show={editModal}\n        closeOnBackdrop={false}\n        >\n        <CModalBody>\n        <Formik\n            innerRef={formikRefEdit}\n            enableReinitializing={true}\n            initialValues={{\n              wattEdit: \"\",\n              lightNameEdit: \"\",\n              idEdit: \"\"\n            }}\n            validationSchema={schemaEdit}\n            onSubmit={handleEdit}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <CForm onSubmit={handleSubmit} noValidate name=\"addUserForm\">\n                <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"lightName\">ชื่อหลอดไฟ</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput\n                        id=\"lightNameEdit\"\n                        name=\"lightNameEdit\"\n                        valid={!!values.lightNameEdit}\n                        invalid={touched.lightNameEdit && !!errors.lightNameEdit}\n                        value={values.lightNameEdit}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.lightNameEdit}</CInvalidFeedback>\n                    </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"watt\">จำนวนวัตต์</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput\n                        id=\"wattEdit\"\n                        name=\"wattEdit\"\n                        valid={!!values.wattEdit}\n                        invalid={touched.wattEdit && !!errors.wattEdit}\n                        value={values.wattEdit}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <CInvalidFeedback>{errors.wattEdit}</CInvalidFeedback>\n                    </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  \n                    <CCol xs=\"12\" md=\"12\">\n                      <CButton\n                        type=\"submit\"\n                        className=\"mr-1 mb-1 btn btn-xl\"\n                        color=\"primary\"\n                      >\n                        Submit\n                      </CButton>\n                      <CButton className=\"mr-1 mb-1 btn btn-xl\" color=\"light\" onClick={() => {setEditModal(false)}}>\n                        Cancel\n                    </CButton>\n                    </CCol>\n                </CFormGroup>\n              </CForm>\n            )}\n          </Formik>\n        </CModalBody>\n    </CModal>\n    </>\n  );\n};\n\nexport default BulbLight;\n","/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/services/LightbulbService.js",[],"/Users/tanikulsakulworrawit/Documents/overpass-frontent/src/components/UploadPreview.js",["1625","1626"],"import React from \"react\";\nimport { CCol, CFormGroup, CLabel, CInputFile, CRow, CButton } from \"@coreui/react\";\n\nclass UploadPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { file: null , name: null };\n    this.onChange = this.onChange.bind(this);\n    this.resetFile = this.resetFile.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      file: URL.createObjectURL(event.target.files[0]),\n      name: event.target.files[0].name\n    });\n    this.props.onInputChange(event.target.files[0])\n  }\n\n  resetFile(event) {\n    event.preventDefault();\n    this.setState({ file: null, name: null });\n  }\n  render() {\n    return (\n      <CFormGroup>\n        <CCol>\n          <CLabel className=\"font-weight-bold\" htmlFor=\"text-input\">\n            Group:\n          </CLabel>\n        </CCol>\n        <CCol>\n        <CCol xs=\"12\"  sm=\"12\" md=\"6\">\n        \n          <CInputFile \n              id=\"file-input\" \n              name=\"ffile-input\" \n              onChange={this.onChange}\n            />\n            <CLabel htmlFor=\"file-input\" variant=\"custom-file\">\n            {this.state.name ? this.state.name : \"Choose Files...\"}\n            </CLabel>\n          </CCol>\n          <br/>\n          <CCol xs=\"12\" sm=\"12\" md=\"12\">\n          {this.state.file && (\n            <img\n            style={{ width: \"100px\", height: \"100px\" }}\n            src={this.state.file}\n          />\n          )}\n          </CCol>\n          <br />\n          <CCol xs=\"12\" sm=\"12\" md=\"12\">\n          {this.state.file && (\n            <CButton\n            type=\"reset\"\n            color=\"light\"\n            onClick={this.resetFile}\n          >\n            Remove picture\n          </CButton>\n            \n          )}\n          </CCol>\n          </CCol>\n          \n      </CFormGroup>\n    );\n  }\n}\n\nexport default UploadPreview;\n",{"ruleId":"1627","replacedBy":"1628"},{"ruleId":"1629","replacedBy":"1630"},{"ruleId":"1631","severity":1,"message":"1632","line":241,"column":6,"nodeType":"1633","endLine":241,"endColumn":39,"suggestions":"1634"},{"ruleId":"1627","replacedBy":"1635"},{"ruleId":"1629","replacedBy":"1636"},{"ruleId":"1637","severity":1,"message":"1638","line":2,"column":32,"nodeType":"1639","messageId":"1640","endLine":2,"endColumn":44},{"ruleId":"1637","severity":1,"message":"1641","line":5,"column":17,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1642","line":5,"column":27,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":33},{"ruleId":"1637","severity":1,"message":"1643","line":5,"column":35,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":44},{"ruleId":"1637","severity":1,"message":"1644","line":13,"column":10,"nodeType":"1639","messageId":"1640","endLine":13,"endColumn":22},{"ruleId":"1627","replacedBy":"1645"},{"ruleId":"1629","replacedBy":"1646"},{"ruleId":"1637","severity":1,"message":"1647","line":1,"column":8,"nodeType":"1639","messageId":"1640","endLine":1,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1648","line":2,"column":8,"nodeType":"1639","messageId":"1640","endLine":2,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1649","line":16,"column":7,"nodeType":"1639","messageId":"1640","endLine":16,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1638","line":2,"column":32,"nodeType":"1639","messageId":"1640","endLine":2,"endColumn":44},{"ruleId":"1637","severity":1,"message":"1650","line":28,"column":46,"nodeType":"1639","messageId":"1640","endLine":28,"endColumn":60},{"ruleId":"1637","severity":1,"message":"1651","line":77,"column":9,"nodeType":"1639","messageId":"1640","endLine":77,"endColumn":21},{"ruleId":"1631","severity":1,"message":"1652","line":204,"column":6,"nodeType":"1633","endLine":204,"endColumn":39,"suggestions":"1653"},{"ruleId":"1637","severity":1,"message":"1654","line":3,"column":3,"nodeType":"1639","messageId":"1640","endLine":3,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1655","line":4,"column":3,"nodeType":"1639","messageId":"1640","endLine":4,"endColumn":10},{"ruleId":"1637","severity":1,"message":"1656","line":5,"column":3,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1657","line":11,"column":3,"nodeType":"1639","messageId":"1640","endLine":11,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1658","line":13,"column":3,"nodeType":"1639","messageId":"1640","endLine":13,"endColumn":11},{"ruleId":"1637","severity":1,"message":"1659","line":14,"column":3,"nodeType":"1639","messageId":"1640","endLine":14,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1660","line":15,"column":3,"nodeType":"1639","messageId":"1640","endLine":15,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1661","line":16,"column":3,"nodeType":"1639","messageId":"1640","endLine":16,"endColumn":22},{"ruleId":"1637","severity":1,"message":"1662","line":17,"column":3,"nodeType":"1639","messageId":"1640","endLine":17,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1663","line":24,"column":3,"nodeType":"1639","messageId":"1640","endLine":24,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1664","line":25,"column":3,"nodeType":"1639","messageId":"1640","endLine":25,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1665","line":26,"column":3,"nodeType":"1639","messageId":"1640","endLine":26,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1666","line":27,"column":3,"nodeType":"1639","messageId":"1640","endLine":27,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1667","line":34,"column":3,"nodeType":"1639","messageId":"1640","endLine":34,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1668","line":35,"column":3,"nodeType":"1639","messageId":"1640","endLine":35,"endColumn":17},{"ruleId":"1637","severity":1,"message":"1669","line":36,"column":3,"nodeType":"1639","messageId":"1640","endLine":36,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1670","line":37,"column":3,"nodeType":"1639","messageId":"1640","endLine":37,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1671","line":38,"column":3,"nodeType":"1639","messageId":"1640","endLine":38,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1648","line":41,"column":8,"nodeType":"1639","messageId":"1640","endLine":41,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1672","line":42,"column":10,"nodeType":"1639","messageId":"1640","endLine":42,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1673","line":43,"column":8,"nodeType":"1639","messageId":"1640","endLine":43,"endColumn":24},{"ruleId":"1637","severity":1,"message":"1674","line":45,"column":10,"nodeType":"1639","messageId":"1640","endLine":45,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1675","line":46,"column":8,"nodeType":"1639","messageId":"1640","endLine":46,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1676","line":47,"column":8,"nodeType":"1639","messageId":"1640","endLine":47,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1677","line":49,"column":7,"nodeType":"1639","messageId":"1640","endLine":49,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1678","line":50,"column":7,"nodeType":"1639","messageId":"1640","endLine":50,"endColumn":22},{"ruleId":"1637","severity":1,"message":"1679","line":51,"column":7,"nodeType":"1639","messageId":"1640","endLine":51,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1680","line":56,"column":10,"nodeType":"1639","messageId":"1640","endLine":56,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1681","line":56,"column":23,"nodeType":"1639","messageId":"1640","endLine":56,"endColumn":37},{"ruleId":"1637","severity":1,"message":"1682","line":57,"column":10,"nodeType":"1639","messageId":"1640","endLine":57,"endColumn":24},{"ruleId":"1637","severity":1,"message":"1683","line":57,"column":26,"nodeType":"1639","messageId":"1640","endLine":57,"endColumn":43},{"ruleId":"1637","severity":1,"message":"1684","line":58,"column":10,"nodeType":"1639","messageId":"1640","endLine":58,"endColumn":27},{"ruleId":"1637","severity":1,"message":"1685","line":58,"column":29,"nodeType":"1639","messageId":"1640","endLine":58,"endColumn":49},{"ruleId":"1637","severity":1,"message":"1686","line":59,"column":10,"nodeType":"1639","messageId":"1640","endLine":59,"endColumn":28},{"ruleId":"1637","severity":1,"message":"1687","line":59,"column":30,"nodeType":"1639","messageId":"1640","endLine":59,"endColumn":51},{"ruleId":"1637","severity":1,"message":"1688","line":60,"column":10,"nodeType":"1639","messageId":"1640","endLine":60,"endColumn":20},{"ruleId":"1637","severity":1,"message":"1689","line":60,"column":22,"nodeType":"1639","messageId":"1640","endLine":60,"endColumn":35},{"ruleId":"1637","severity":1,"message":"1690","line":61,"column":10,"nodeType":"1639","messageId":"1640","endLine":61,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1691","line":61,"column":23,"nodeType":"1639","messageId":"1640","endLine":61,"endColumn":37},{"ruleId":"1637","severity":1,"message":"1692","line":64,"column":9,"nodeType":"1639","messageId":"1640","endLine":64,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1693","line":86,"column":9,"nodeType":"1639","messageId":"1640","endLine":86,"endColumn":17},{"ruleId":"1637","severity":1,"message":"1694","line":87,"column":11,"nodeType":"1639","messageId":"1640","endLine":87,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1695","line":89,"column":11,"nodeType":"1639","messageId":"1640","endLine":89,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1647","line":1,"column":8,"nodeType":"1639","messageId":"1640","endLine":1,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1696","line":3,"column":3,"nodeType":"1639","messageId":"1640","endLine":3,"endColumn":8},{"ruleId":"1637","severity":1,"message":"1697","line":4,"column":3,"nodeType":"1639","messageId":"1640","endLine":4,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1698","line":5,"column":3,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":7},{"ruleId":"1637","severity":1,"message":"1699","line":6,"column":3,"nodeType":"1639","messageId":"1640","endLine":6,"endColumn":7},{"ruleId":"1637","severity":1,"message":"1648","line":8,"column":8,"nodeType":"1639","messageId":"1640","endLine":8,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1700","line":9,"column":8,"nodeType":"1639","messageId":"1640","endLine":9,"endColumn":17},{"ruleId":"1637","severity":1,"message":"1701","line":10,"column":8,"nodeType":"1639","messageId":"1640","endLine":10,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1702","line":11,"column":8,"nodeType":"1639","messageId":"1640","endLine":11,"endColumn":20},{"ruleId":"1637","severity":1,"message":"1703","line":12,"column":8,"nodeType":"1639","messageId":"1640","endLine":12,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1672","line":13,"column":10,"nodeType":"1639","messageId":"1640","endLine":13,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1704","line":17,"column":10,"nodeType":"1639","messageId":"1640","endLine":17,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1705","line":17,"column":21,"nodeType":"1639","messageId":"1640","endLine":17,"endColumn":32},{"ruleId":"1637","severity":1,"message":"1706","line":75,"column":9,"nodeType":"1639","messageId":"1640","endLine":75,"endColumn":29},{"ruleId":"1631","severity":1,"message":"1707","line":197,"column":6,"nodeType":"1633","endLine":197,"endColumn":13,"suggestions":"1708"},{"ruleId":"1637","severity":1,"message":"1647","line":1,"column":8,"nodeType":"1639","messageId":"1640","endLine":1,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1641","line":1,"column":17,"nodeType":"1639","messageId":"1640","endLine":1,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1709","line":3,"column":3,"nodeType":"1639","messageId":"1640","endLine":3,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1655","line":4,"column":3,"nodeType":"1639","messageId":"1640","endLine":4,"endColumn":10},{"ruleId":"1637","severity":1,"message":"1710","line":5,"column":3,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1711","line":97,"column":7,"nodeType":"1639","messageId":"1640","endLine":97,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1654","line":3,"column":3,"nodeType":"1639","messageId":"1640","endLine":3,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1712","line":24,"column":10,"nodeType":"1639","messageId":"1640","endLine":24,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1713","line":24,"column":20,"nodeType":"1639","messageId":"1640","endLine":24,"endColumn":32},{"ruleId":"1637","severity":1,"message":"1714","line":28,"column":29,"nodeType":"1639","messageId":"1640","endLine":28,"endColumn":44},{"ruleId":"1637","severity":1,"message":"1650","line":28,"column":46,"nodeType":"1639","messageId":"1640","endLine":28,"endColumn":60},{"ruleId":"1637","severity":1,"message":"1715","line":66,"column":24,"nodeType":"1639","messageId":"1640","endLine":66,"endColumn":39},{"ruleId":"1637","severity":1,"message":"1716","line":67,"column":10,"nodeType":"1639","messageId":"1640","endLine":67,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1717","line":67,"column":18,"nodeType":"1639","messageId":"1640","endLine":67,"endColumn":27},{"ruleId":"1637","severity":1,"message":"1718","line":68,"column":10,"nodeType":"1639","messageId":"1640","endLine":68,"endColumn":17},{"ruleId":"1637","severity":1,"message":"1719","line":68,"column":19,"nodeType":"1639","messageId":"1640","endLine":68,"endColumn":29},{"ruleId":"1637","severity":1,"message":"1720","line":69,"column":10,"nodeType":"1639","messageId":"1640","endLine":69,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1721","line":69,"column":20,"nodeType":"1639","messageId":"1640","endLine":69,"endColumn":31},{"ruleId":"1637","severity":1,"message":"1722","line":70,"column":10,"nodeType":"1639","messageId":"1640","endLine":70,"endColumn":20},{"ruleId":"1637","severity":1,"message":"1723","line":70,"column":22,"nodeType":"1639","messageId":"1640","endLine":70,"endColumn":35},{"ruleId":"1637","severity":1,"message":"1724","line":71,"column":20,"nodeType":"1639","messageId":"1640","endLine":71,"endColumn":31},{"ruleId":"1637","severity":1,"message":"1725","line":77,"column":10,"nodeType":"1639","messageId":"1640","endLine":77,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1726","line":77,"column":20,"nodeType":"1639","messageId":"1640","endLine":77,"endColumn":31},{"ruleId":"1727","severity":1,"message":"1728","line":184,"column":57,"nodeType":"1729","messageId":"1730","endLine":184,"endColumn":59},{"ruleId":"1727","severity":1,"message":"1728","line":191,"column":57,"nodeType":"1729","messageId":"1730","endLine":191,"endColumn":59},{"ruleId":"1631","severity":1,"message":"1731","line":226,"column":6,"nodeType":"1633","endLine":226,"endColumn":43,"suggestions":"1732"},{"ruleId":"1637","severity":1,"message":"1712","line":16,"column":10,"nodeType":"1639","messageId":"1640","endLine":16,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1713","line":16,"column":20,"nodeType":"1639","messageId":"1640","endLine":16,"endColumn":32},{"ruleId":"1637","severity":1,"message":"1714","line":23,"column":10,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1650","line":23,"column":27,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":41},{"ruleId":"1637","severity":1,"message":"1733","line":25,"column":18,"nodeType":"1639","messageId":"1640","endLine":25,"endColumn":23},{"ruleId":"1637","severity":1,"message":"1734","line":42,"column":9,"nodeType":"1639","messageId":"1640","endLine":42,"endColumn":16},{"ruleId":"1727","severity":1,"message":"1728","line":67,"column":54,"nodeType":"1729","messageId":"1730","endLine":67,"endColumn":56},{"ruleId":"1727","severity":1,"message":"1728","line":77,"column":53,"nodeType":"1729","messageId":"1730","endLine":77,"endColumn":55},{"ruleId":"1727","severity":1,"message":"1728","line":80,"column":88,"nodeType":"1729","messageId":"1730","endLine":80,"endColumn":90},{"ruleId":"1727","severity":1,"message":"1728","line":184,"column":58,"nodeType":"1729","messageId":"1730","endLine":184,"endColumn":60},{"ruleId":"1727","severity":1,"message":"1728","line":186,"column":57,"nodeType":"1729","messageId":"1730","endLine":186,"endColumn":59},{"ruleId":"1631","severity":1,"message":"1735","line":202,"column":6,"nodeType":"1633","endLine":202,"endColumn":26,"suggestions":"1736"},{"ruleId":"1637","severity":1,"message":"1737","line":7,"column":3,"nodeType":"1639","messageId":"1640","endLine":7,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1738","line":10,"column":3,"nodeType":"1639","messageId":"1640","endLine":10,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1739","line":11,"column":3,"nodeType":"1639","messageId":"1640","endLine":11,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1740","line":12,"column":3,"nodeType":"1639","messageId":"1640","endLine":12,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1741","line":13,"column":3,"nodeType":"1639","messageId":"1640","endLine":13,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1742","line":14,"column":3,"nodeType":"1639","messageId":"1640","endLine":14,"endColumn":8},{"ruleId":"1637","severity":1,"message":"1666","line":17,"column":3,"nodeType":"1639","messageId":"1640","endLine":17,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1743","line":18,"column":3,"nodeType":"1639","messageId":"1640","endLine":18,"endColumn":17},{"ruleId":"1637","severity":1,"message":"1744","line":20,"column":3,"nodeType":"1639","messageId":"1640","endLine":20,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1745","line":22,"column":3,"nodeType":"1639","messageId":"1640","endLine":22,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1746","line":23,"column":3,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":17},{"ruleId":"1637","severity":1,"message":"1747","line":24,"column":3,"nodeType":"1639","messageId":"1640","endLine":24,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1748","line":25,"column":3,"nodeType":"1639","messageId":"1640","endLine":25,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1749","line":26,"column":3,"nodeType":"1639","messageId":"1640","endLine":26,"endColumn":20},{"ruleId":"1637","severity":1,"message":"1750","line":27,"column":3,"nodeType":"1639","messageId":"1640","endLine":27,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1751","line":28,"column":3,"nodeType":"1639","messageId":"1640","endLine":28,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1752","line":29,"column":3,"nodeType":"1639","messageId":"1640","endLine":29,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1654","line":34,"column":3,"nodeType":"1639","messageId":"1640","endLine":34,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1753","line":39,"column":10,"nodeType":"1639","messageId":"1640","endLine":39,"endColumn":23},{"ruleId":"1637","severity":1,"message":"1754","line":40,"column":10,"nodeType":"1639","messageId":"1640","endLine":40,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1674","line":41,"column":10,"nodeType":"1639","messageId":"1640","endLine":41,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1755","line":44,"column":31,"nodeType":"1639","messageId":"1640","endLine":44,"endColumn":47},{"ruleId":"1637","severity":1,"message":"1733","line":47,"column":18,"nodeType":"1639","messageId":"1640","endLine":47,"endColumn":23},{"ruleId":"1637","severity":1,"message":"1756","line":51,"column":10,"nodeType":"1639","messageId":"1640","endLine":51,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1757","line":52,"column":10,"nodeType":"1639","messageId":"1640","endLine":52,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1758","line":53,"column":8,"nodeType":"1639","messageId":"1640","endLine":53,"endColumn":10},{"ruleId":"1637","severity":1,"message":"1759","line":58,"column":10,"nodeType":"1639","messageId":"1640","endLine":58,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1760","line":58,"column":21,"nodeType":"1639","messageId":"1640","endLine":58,"endColumn":33},{"ruleId":"1637","severity":1,"message":"1761","line":59,"column":10,"nodeType":"1639","messageId":"1640","endLine":59,"endColumn":22},{"ruleId":"1637","severity":1,"message":"1762","line":59,"column":24,"nodeType":"1639","messageId":"1640","endLine":59,"endColumn":39},{"ruleId":"1637","severity":1,"message":"1763","line":60,"column":9,"nodeType":"1639","messageId":"1640","endLine":60,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1764","line":62,"column":10,"nodeType":"1639","messageId":"1640","endLine":62,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1765","line":62,"column":17,"nodeType":"1639","messageId":"1640","endLine":62,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1766","line":63,"column":10,"nodeType":"1639","messageId":"1640","endLine":63,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1767","line":63,"column":18,"nodeType":"1639","messageId":"1640","endLine":63,"endColumn":27},{"ruleId":"1637","severity":1,"message":"1768","line":74,"column":10,"nodeType":"1639","messageId":"1640","endLine":74,"endColumn":22},{"ruleId":"1637","severity":1,"message":"1769","line":74,"column":24,"nodeType":"1639","messageId":"1640","endLine":74,"endColumn":39},{"ruleId":"1637","severity":1,"message":"1770","line":81,"column":10,"nodeType":"1639","messageId":"1640","endLine":81,"endColumn":17},{"ruleId":"1727","severity":1,"message":"1728","line":174,"column":57,"nodeType":"1729","messageId":"1730","endLine":174,"endColumn":59},{"ruleId":"1727","severity":1,"message":"1728","line":185,"column":57,"nodeType":"1729","messageId":"1730","endLine":185,"endColumn":59},{"ruleId":"1637","severity":1,"message":"1771","line":274,"column":9,"nodeType":"1639","messageId":"1640","endLine":274,"endColumn":17},{"ruleId":"1631","severity":1,"message":"1772","line":305,"column":6,"nodeType":"1633","endLine":305,"endColumn":15,"suggestions":"1773"},{"ruleId":"1631","severity":1,"message":"1774","line":325,"column":6,"nodeType":"1633","endLine":325,"endColumn":14,"suggestions":"1775"},{"ruleId":"1637","severity":1,"message":"1665","line":18,"column":3,"nodeType":"1639","messageId":"1640","endLine":18,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1666","line":19,"column":3,"nodeType":"1639","messageId":"1640","endLine":19,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1751","line":20,"column":3,"nodeType":"1639","messageId":"1640","endLine":20,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1741","line":21,"column":3,"nodeType":"1639","messageId":"1640","endLine":21,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1748","line":22,"column":3,"nodeType":"1639","messageId":"1640","endLine":22,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1740","line":23,"column":3,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1739","line":24,"column":3,"nodeType":"1639","messageId":"1640","endLine":24,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1776","line":38,"column":10,"nodeType":"1639","messageId":"1640","endLine":38,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1711","line":117,"column":7,"nodeType":"1639","messageId":"1640","endLine":117,"endColumn":18},{"ruleId":"1627","replacedBy":"1777"},{"ruleId":"1629","replacedBy":"1778"},{"ruleId":"1637","severity":1,"message":"1638","line":2,"column":32,"nodeType":"1639","messageId":"1640","endLine":2,"endColumn":44},{"ruleId":"1637","severity":1,"message":"1779","line":2,"column":10,"nodeType":"1639","messageId":"1640","endLine":2,"endColumn":14},{"ruleId":"1637","severity":1,"message":"1780","line":65,"column":11,"nodeType":"1639","messageId":"1640","endLine":65,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1781","line":19,"column":3,"nodeType":"1639","messageId":"1640","endLine":19,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1654","line":3,"column":3,"nodeType":"1639","messageId":"1640","endLine":3,"endColumn":9},{"ruleId":"1637","severity":1,"message":"1751","line":4,"column":3,"nodeType":"1639","messageId":"1640","endLine":4,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1739","line":5,"column":3,"nodeType":"1639","messageId":"1640","endLine":5,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1740","line":6,"column":3,"nodeType":"1639","messageId":"1640","endLine":6,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1741","line":7,"column":3,"nodeType":"1639","messageId":"1640","endLine":7,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1782","line":8,"column":3,"nodeType":"1639","messageId":"1640","endLine":8,"endColumn":7},{"ruleId":"1637","severity":1,"message":"1648","line":10,"column":8,"nodeType":"1639","messageId":"1640","endLine":10,"endColumn":13},{"ruleId":"1637","severity":1,"message":"1783","line":14,"column":9,"nodeType":"1639","messageId":"1640","endLine":14,"endColumn":19},{"ruleId":"1631","severity":1,"message":"1784","line":165,"column":5,"nodeType":"1633","endLine":165,"endColumn":7,"suggestions":"1785"},{"ruleId":"1631","severity":1,"message":"1786","line":158,"column":6,"nodeType":"1633","endLine":158,"endColumn":14,"suggestions":"1787"},{"ruleId":"1637","severity":1,"message":"1788","line":48,"column":10,"nodeType":"1639","messageId":"1640","endLine":48,"endColumn":24},{"ruleId":"1637","severity":1,"message":"1789","line":52,"column":10,"nodeType":"1639","messageId":"1640","endLine":52,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1790","line":52,"column":23,"nodeType":"1639","messageId":"1640","endLine":52,"endColumn":37},{"ruleId":"1637","severity":1,"message":"1791","line":61,"column":10,"nodeType":"1639","messageId":"1640","endLine":61,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1792","line":61,"column":17,"nodeType":"1639","messageId":"1640","endLine":61,"endColumn":25},{"ruleId":"1631","severity":1,"message":"1793","line":158,"column":6,"nodeType":"1633","endLine":158,"endColumn":17,"suggestions":"1794"},{"ruleId":"1727","severity":1,"message":"1728","line":162,"column":22,"nodeType":"1729","messageId":"1730","endLine":162,"endColumn":24},{"ruleId":"1727","severity":1,"message":"1728","line":169,"column":22,"nodeType":"1729","messageId":"1730","endLine":169,"endColumn":24},{"ruleId":"1727","severity":1,"message":"1728","line":177,"column":27,"nodeType":"1729","messageId":"1730","endLine":177,"endColumn":29},{"ruleId":"1637","severity":1,"message":"1795","line":193,"column":9,"nodeType":"1639","messageId":"1640","endLine":193,"endColumn":12},{"ruleId":"1727","severity":1,"message":"1796","line":294,"column":59,"nodeType":"1729","messageId":"1730","endLine":294,"endColumn":61},{"ruleId":"1727","severity":1,"message":"1796","line":299,"column":55,"nodeType":"1729","messageId":"1730","endLine":299,"endColumn":57},{"ruleId":"1727","severity":1,"message":"1796","line":304,"column":59,"nodeType":"1729","messageId":"1730","endLine":304,"endColumn":61},{"ruleId":"1637","severity":1,"message":"1797","line":318,"column":13,"nodeType":"1639","messageId":"1640","endLine":318,"endColumn":17},{"ruleId":"1798","severity":1,"message":"1799","line":331,"column":74,"nodeType":"1800","endLine":331,"endColumn":98},{"ruleId":"1631","severity":1,"message":"1801","line":375,"column":6,"nodeType":"1633","endLine":375,"endColumn":8,"suggestions":"1802"},{"ruleId":"1727","severity":1,"message":"1728","line":147,"column":24,"nodeType":"1729","messageId":"1730","endLine":147,"endColumn":26},{"ruleId":"1727","severity":1,"message":"1728","line":164,"column":24,"nodeType":"1729","messageId":"1730","endLine":164,"endColumn":26},{"ruleId":"1631","severity":1,"message":"1772","line":290,"column":6,"nodeType":"1633","endLine":290,"endColumn":15,"suggestions":"1803"},{"ruleId":"1631","severity":1,"message":"1774","line":323,"column":6,"nodeType":"1633","endLine":323,"endColumn":14,"suggestions":"1804"},{"ruleId":"1637","severity":1,"message":"1651","line":57,"column":9,"nodeType":"1639","messageId":"1640","endLine":57,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1715","line":59,"column":24,"nodeType":"1639","messageId":"1640","endLine":59,"endColumn":39},{"ruleId":"1637","severity":1,"message":"1724","line":60,"column":20,"nodeType":"1639","messageId":"1640","endLine":60,"endColumn":31},{"ruleId":"1637","severity":1,"message":"1805","line":73,"column":10,"nodeType":"1639","messageId":"1640","endLine":73,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1806","line":73,"column":20,"nodeType":"1639","messageId":"1640","endLine":73,"endColumn":31},{"ruleId":"1727","severity":1,"message":"1728","line":171,"column":24,"nodeType":"1729","messageId":"1730","endLine":171,"endColumn":26},{"ruleId":"1727","severity":1,"message":"1728","line":182,"column":24,"nodeType":"1729","messageId":"1730","endLine":182,"endColumn":26},{"ruleId":"1631","severity":1,"message":"1731","line":220,"column":5,"nodeType":"1633","endLine":222,"endColumn":6,"suggestions":"1807"},{"ruleId":"1637","severity":1,"message":"1651","line":72,"column":9,"nodeType":"1639","messageId":"1640","endLine":72,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1808","line":87,"column":23,"nodeType":"1639","messageId":"1640","endLine":87,"endColumn":37},{"ruleId":"1631","severity":1,"message":"1652","line":198,"column":6,"nodeType":"1633","endLine":198,"endColumn":39,"suggestions":"1809"},{"ruleId":"1637","severity":1,"message":"1810","line":20,"column":3,"nodeType":"1639","messageId":"1640","endLine":20,"endColumn":12},{"ruleId":"1637","severity":1,"message":"1811","line":37,"column":17,"nodeType":"1639","messageId":"1640","endLine":37,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1812","line":45,"column":10,"nodeType":"1639","messageId":"1640","endLine":45,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1813","line":45,"column":23,"nodeType":"1639","messageId":"1640","endLine":45,"endColumn":37},{"ruleId":"1637","severity":1,"message":"1814","line":88,"column":11,"nodeType":"1639","messageId":"1640","endLine":88,"endColumn":19},{"ruleId":"1637","severity":1,"message":"1815","line":124,"column":13,"nodeType":"1639","messageId":"1640","endLine":124,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1816","line":131,"column":11,"nodeType":"1639","messageId":"1640","endLine":131,"endColumn":18},{"ruleId":"1631","severity":1,"message":"1817","line":237,"column":6,"nodeType":"1633","endLine":237,"endColumn":8,"suggestions":"1818"},{"ruleId":"1627","replacedBy":"1819"},{"ruleId":"1629","replacedBy":"1820"},{"ruleId":"1637","severity":1,"message":"1711","line":97,"column":7,"nodeType":"1639","messageId":"1640","endLine":97,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1650","line":23,"column":27,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":41},{"ruleId":"1637","severity":1,"message":"1821","line":27,"column":8,"nodeType":"1639","messageId":"1640","endLine":27,"endColumn":21},{"ruleId":"1637","severity":1,"message":"1822","line":42,"column":5,"nodeType":"1639","messageId":"1640","endLine":42,"endColumn":16},{"ruleId":"1637","severity":1,"message":"1823","line":179,"column":9,"nodeType":"1639","messageId":"1640","endLine":179,"endColumn":27},{"ruleId":"1631","severity":1,"message":"1824","line":206,"column":6,"nodeType":"1633","endLine":206,"endColumn":13,"suggestions":"1825"},{"ruleId":"1637","severity":1,"message":"1826","line":25,"column":9,"nodeType":"1639","messageId":"1640","endLine":25,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1712","line":16,"column":10,"nodeType":"1639","messageId":"1640","endLine":16,"endColumn":18},{"ruleId":"1637","severity":1,"message":"1713","line":16,"column":20,"nodeType":"1639","messageId":"1640","endLine":16,"endColumn":32},{"ruleId":"1637","severity":1,"message":"1714","line":23,"column":10,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":25},{"ruleId":"1637","severity":1,"message":"1650","line":23,"column":27,"nodeType":"1639","messageId":"1640","endLine":23,"endColumn":41},{"ruleId":"1637","severity":1,"message":"1733","line":25,"column":18,"nodeType":"1639","messageId":"1640","endLine":25,"endColumn":23},{"ruleId":"1727","severity":1,"message":"1728","line":70,"column":54,"nodeType":"1729","messageId":"1730","endLine":70,"endColumn":56},{"ruleId":"1727","severity":1,"message":"1728","line":80,"column":53,"nodeType":"1729","messageId":"1730","endLine":80,"endColumn":55},{"ruleId":"1727","severity":1,"message":"1728","line":83,"column":88,"nodeType":"1729","messageId":"1730","endLine":83,"endColumn":90},{"ruleId":"1727","severity":1,"message":"1728","line":194,"column":58,"nodeType":"1729","messageId":"1730","endLine":194,"endColumn":60},{"ruleId":"1727","severity":1,"message":"1728","line":196,"column":57,"nodeType":"1729","messageId":"1730","endLine":196,"endColumn":59},{"ruleId":"1631","severity":1,"message":"1827","line":215,"column":6,"nodeType":"1633","endLine":215,"endColumn":26,"suggestions":"1828"},{"ruleId":"1637","severity":1,"message":"1829","line":1,"column":10,"nodeType":"1639","messageId":"1640","endLine":1,"endColumn":14},{"ruleId":"1830","severity":1,"message":"1831","line":30,"column":9,"nodeType":"1832","messageId":"1833","endLine":30,"endColumn":88},{"ruleId":"1631","severity":1,"message":"1834","line":62,"column":8,"nodeType":"1633","endLine":62,"endColumn":17,"suggestions":"1835"},{"ruleId":"1631","severity":1,"message":"1836","line":72,"column":8,"nodeType":"1633","endLine":72,"endColumn":10,"suggestions":"1837"},{"ruleId":"1637","severity":1,"message":"1763","line":41,"column":9,"nodeType":"1639","messageId":"1640","endLine":41,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1791","line":44,"column":10,"nodeType":"1639","messageId":"1640","endLine":44,"endColumn":15},{"ruleId":"1637","severity":1,"message":"1838","line":154,"column":9,"nodeType":"1639","messageId":"1640","endLine":154,"endColumn":18},{"ruleId":"1631","severity":1,"message":"1839","line":277,"column":6,"nodeType":"1633","endLine":277,"endColumn":8,"suggestions":"1840"},{"ruleId":"1798","severity":1,"message":"1799","line":322,"column":23,"nodeType":"1800","endLine":322,"endColumn":37},{"ruleId":"1637","severity":1,"message":"1826","line":7,"column":11,"nodeType":"1639","messageId":"1640","endLine":7,"endColumn":17},{"ruleId":"1631","severity":1,"message":"1841","line":185,"column":6,"nodeType":"1633","endLine":185,"endColumn":8,"suggestions":"1842"},{"ruleId":"1637","severity":1,"message":"1699","line":2,"column":48,"nodeType":"1639","messageId":"1640","endLine":2,"endColumn":52},{"ruleId":"1843","severity":1,"message":"1844","line":47,"column":13,"nodeType":"1845","endLine":50,"endColumn":13},"no-native-reassign",["1846"],"no-negated-in-lhs",["1847"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken', 'dispatch', 'email', 'firstName', 'lastName', 'lineId', 'mobileNo', 'organization', 'role', 'status', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["1848"],["1846"],["1847"],"no-unused-vars","'MOCK_API_URL' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'subscription' is defined but never used.",["1846"],["1847"],"'React' is defined but never used.","'CIcon' is defined but never used.","'AdvancedTables' is assigned a value but never used.","'userFullAccess' is defined but never used.","'prevUsername' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'handleSearch'. Either include them or remove the dependency array.",["1849"],"'CBadge' is defined but never used.","'CButton' is defined but never used.","'CButtonGroup' is defined but never used.","'CProgress' is defined but never used.","'CCallout' is defined but never used.","'CWidgetProgress' is defined but never used.","'CWidgetIcon' is defined but never used.","'CWidgetProgressIcon' is defined but never used.","'CWidgetSimple' is defined but never used.","'CFormGroup' is defined but never used.","'CLabel' is defined but never used.","'CInput' is defined but never used.","'CFormText' is defined but never used.","'CChartLine' is defined but never used.","'CChartDoughnut' is defined but never used.","'CChartRadar' is defined but never used.","'CChartPie' is defined but never used.","'CChartPolarArea' is defined but never used.","'DocsLink' is defined but never used.","'MainChartExample' is defined but never used.","'useDispatch' is defined but never used.","'SockJS' is defined but never used.","'Stomp' is defined but never used.","'DeviceStatus' is assigned a value but never used.","'WidgetsDropdown' is assigned a value but never used.","'WidgetsBrand' is assigned a value but never used.","'overpassAll' is assigned a value but never used.","'setOverpassAll' is assigned a value but never used.","'overpassByZone' is assigned a value but never used.","'setOverpassByZone' is assigned a value but never used.","'overpassOnByMonth' is assigned a value but never used.","'setOverpassOnByMonth' is assigned a value but never used.","'overpassOffByMonth' is assigned a value but never used.","'setOverpassOffByMonth' is assigned a value but never used.","'overpassOn' is assigned a value but never used.","'setOverpassOn' is assigned a value but never used.","'overpassOff' is assigned a value but never used.","'setOverpassOff' is assigned a value but never used.","'send' is assigned a value but never used.","'response' is assigned a value but never used.","'endpoint' is assigned a value but never used.","'temp' is assigned a value but never used.","'CCard' is defined but never used.","'CCardHeader' is defined but never used.","'CCol' is defined but never used.","'CRow' is defined but never used.","'DemoTable' is defined but never used.","'SelectTable' is defined but never used.","'BackendTable' is defined but never used.","'DownloadTable' is defined but never used.","'getRoleId' is defined but never used.","'getPrefixId' is defined but never used.","'handleCloseEditModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken', 'isEdit', 'itemDetail.email', 'itemDetail.firstName', 'itemDetail.groupId', 'itemDetail.lastName', 'itemDetail.lineId', 'itemDetail.mobileNo', 'itemDetail.prefixId', 'itemDetail.role', 'itemDetail.status', and 'itemDetail.username'. Either include them or remove the dependency array.",["1850"],"'CCardBody' is defined but never used.","'CDataTable' is defined but never used.","'toKebabCase' is assigned a value but never used.","'TextMask' is defined but never used.","'InputAdapter' is defined but never used.","'roleUserControl' is defined but never used.","'setSetpointWatt' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'minWatt' is assigned a value but never used.","'setMinWatt' is assigned a value but never used.","'latitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","'longtitude' is assigned a value but never used.","'setLongTitude' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'postcode' is assigned a value but never used.","'setPostcode' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'accessToken', 'dispatch', 'itemsPerPage', 'page', 'provinces.length', 'setpointWatt', and 'sorterValue'. Either include them or remove the dependency array. You can also do a functional update 'setItemsPerPage(i => ...)' if you only need 'itemsPerPage' in the 'setItemsPerPage' call.",["1851"],"'Field' is defined but never used.","'checkId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'provinces'. Either include it or remove the dependency array.",["1852"],"'CCardFooter' is defined but never used.","'CCollapse' is defined but never used.","'CDropdownItem' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownToggle' is defined but never used.","'CFade' is defined but never used.","'CValidFeedback' is defined but never used.","'CTextarea' is defined but never used.","'CInputFile' is defined but never used.","'CInputCheckbox' is defined but never used.","'CInputRadio' is defined but never used.","'CInputGroup' is defined but never used.","'CInputGroupAppend' is defined but never used.","'CInputGroupPrepend' is defined but never used.","'CDropdown' is defined but never used.","'CInputGroupText' is defined but never used.","'getUserByRole' is defined but never used.","'USER_ROLE' is defined but never used.","'getOverpassesAll' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'ls' is defined but never used.","'collapsed' is assigned a value but never used.","'setCollapsed' is assigned a value but never used.","'showElements' is assigned a value but never used.","'setShowElements' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'overpassData' is assigned a value but never used.","'setOverpassData' is assigned a value but never used.","'loading' is assigned a value but never used.","'amphurId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checked'. Either include it or remove the dependency array.",["1853"],"React Hook useEffect has missing dependencies: 'accessToken', 'isEdit', 'match.params.id', and 'provinces.length'. Either include them or remove the dependency array.",["1854"],"'Button' is defined but never used.",["1846"],["1847"],"'Link' is defined but never used.","'rs' is assigned a value but never used.","'TheHeaderDropdownNotif' is defined but never used.","'CImg' is defined but never used.","'itemsCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imageProfile'. Either include it or remove the dependency array.",["1855"],"React Hook useEffect has missing dependencies: 'accessToken', 'handleSearch', and 'provinces.length'. Either include them or remove the dependency array.",["1856"],"'selectDistrict' is assigned a value but never used.","'graphDetail' is assigned a value but never used.","'setGraphDetail' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'locations'. Either exclude it or remove the dependency array.",["1857"],"'xxx' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'full' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'accessToken' and 'provinces.length'. Either include them or remove the dependency array.",["1858"],["1859"],["1860"],"'deleteId' is assigned a value but never used.","'setDeleteId' is assigned a value but never used.",["1861"],"'setSorterValue' is assigned a value but never used.",["1862"],"'CChartBar' is defined but never used.","'setGraph' is assigned a value but never used.","'graphSeries' is assigned a value but never used.","'setGraphSeries' is assigned a value but never used.","'graphOff' is assigned a value but never used.","'chk' is assigned a value but never used.","'graphOn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken', 'genDataSets', and 'overpassGroup'. Either include them or remove the dependency array.",["1863"],["1846"],["1847"],"'UploadPreview' is defined but never used.","'handleReset' is assigned a value but never used.","'changeImageProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken', 'groupList.length', 'isEdit', 'itemDetail.email', 'itemDetail.firstName', 'itemDetail.groupId', 'itemDetail.lastName', 'itemDetail.lineId', 'itemDetail.mobileNo', 'itemDetail.prefixId', 'itemDetail.role', 'itemDetail.status', and 'itemDetail.username'. Either include them or remove the dependency array.",["1864"],"'filter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'provinces'. Either include them or remove the dependency array.",["1865"],"'post' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useEffect has a missing dependency: 'setupData'. Either include it or remove the dependency array.",["1866"],"React Hook useEffect has missing dependencies: 'accessToken' and 'overpassGroup'. Either include them or remove the dependency array.",["1867"],"'googleMap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'match.match.params.id'. Either include them or remove the dependency array.",["1868"],"React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["1869"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"1870","fix":"1871"},{"desc":"1872","fix":"1873"},{"desc":"1874","fix":"1875"},{"desc":"1876","fix":"1877"},{"desc":"1878","fix":"1879"},{"desc":"1880","fix":"1881"},{"desc":"1882","fix":"1883"},{"desc":"1884","fix":"1885"},{"desc":"1886","fix":"1887"},{"desc":"1888","fix":"1889"},{"desc":"1890","fix":"1891"},{"desc":"1880","fix":"1892"},{"desc":"1882","fix":"1893"},{"desc":"1876","fix":"1894"},{"desc":"1872","fix":"1895"},{"desc":"1896","fix":"1897"},{"desc":"1898","fix":"1899"},{"desc":"1900","fix":"1901"},{"desc":"1902","fix":"1903"},{"desc":"1904","fix":"1905"},{"desc":"1906","fix":"1907"},{"desc":"1908","fix":"1909"},"Update the dependencies array to be: [page, itemsPerPage, sorterValue, accessToken, username, firstName, lastName, status, role, email, lineId, mobileNo, organization, dispatch]",{"range":"1910","text":"1911"},"Update the dependencies array to be: [page, itemsPerPage, sorterValue, accessToken, handleSearch]",{"range":"1912","text":"1913"},"Update the dependencies array to be: [accessToken, isEdit, itemDetail.email, itemDetail.firstName, itemDetail.groupId, itemDetail.lastName, itemDetail.lineId, itemDetail.mobileNo, itemDetail.prefixId, itemDetail.role, itemDetail.status, itemDetail.username, modal]",{"range":"1914","text":"1915"},"Update the dependencies array to be: [accessToken, dispatch, itemsPerPage, page, provinces.length, setpointWatt, sorterValue]",{"range":"1916","text":"1917"},"Update the dependencies array to be: [itemDetail, isEdit, provinces]",{"range":"1918","text":"1919"},"Update the dependencies array to be: [checked, options]",{"range":"1920","text":"1921"},"Update the dependencies array to be: [accessToken, isEdit, match.params.id, provinces.length, reload]",{"range":"1922","text":"1923"},"Update the dependencies array to be: [imageProfile]",{"range":"1924","text":"1925"},"Update the dependencies array to be: [accessToken, handleSearch, provinces.length, reload]",{"range":"1926","text":"1927"},"Update the dependencies array to be: []",{"range":"1928","text":"1929"},"Update the dependencies array to be: [accessToken, provinces.length]",{"range":"1930","text":"1931"},{"range":"1932","text":"1921"},{"range":"1933","text":"1923"},{"range":"1934","text":"1917"},{"range":"1935","text":"1913"},"Update the dependencies array to be: [accessToken, genDataSets, overpassGroup]",{"range":"1936","text":"1937"},"Update the dependencies array to be: [accessToken, groupList.length, isEdit, itemDetail.email, itemDetail.firstName, itemDetail.groupId, itemDetail.lastName, itemDetail.lineId, itemDetail.mobileNo, itemDetail.prefixId, itemDetail.role, itemDetail.status, itemDetail.username, modal]",{"range":"1938","text":"1939"},"Update the dependencies array to be: [itemDetail, isEdit, accessToken, provinces]",{"range":"1940","text":"1941"},"Update the dependencies array to be: [dataAll, setupData]",{"range":"1942","text":"1943"},"Update the dependencies array to be: [accessToken, overpassGroup]",{"range":"1944","text":"1945"},"Update the dependencies array to be: [accessToken, match.match.params.id]",{"range":"1946","text":"1947"},"Update the dependencies array to be: [accessToken]",{"range":"1948","text":"1949"},[6662,6695],"[page, itemsPerPage, sorterValue, accessToken, username, firstName, lastName, status, role, email, lineId, mobileNo, organization, dispatch]",[5522,5555],"[page, itemsPerPage, sorterValue, accessToken, handleSearch]",[5520,5527],"[accessToken, isEdit, itemDetail.email, itemDetail.firstName, itemDetail.groupId, itemDetail.lastName, itemDetail.lineId, itemDetail.mobileNo, itemDetail.prefixId, itemDetail.role, itemDetail.status, itemDetail.username, modal]",[6336,6373],"[accessToken, dispatch, itemsPerPage, page, provinces.length, setpointWatt, sorterValue]",[5700,5720],"[itemDetail, isEdit, provinces]",[8812,8821],"[checked, options]",[9603,9611],"[accessToken, isEdit, match.params.id, provinces.length, reload]",[4992,4994],"[imageProfile]",[4507,4515],"[accessToken, handleSearch, provinces.length, reload]",[4588,4599],"[]",[10645,10647],"[accessToken, provinces.length]",[8266,8275],[9354,9362],[6129,6178],[5539,5572],[7241,7243],"[accessToken, genDataSets, overpassGroup]",[6062,6069],"[accessToken, groupList.length, isEdit, itemDetail.email, itemDetail.firstName, itemDetail.groupId, itemDetail.lastName, itemDetail.lineId, itemDetail.mobileNo, itemDetail.prefixId, itemDetail.role, itemDetail.status, itemDetail.username, modal]",[6271,6291],"[itemDetail, isEdit, accessToken, provinces]",[1753,1762],"[dataAll, setupData]",[2030,2032],"[accessToken, overpassGroup]",[8605,8607],"[accessToken, match.match.params.id]",[4965,4967],"[accessToken]"]